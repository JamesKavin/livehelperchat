{
  "swagger": "2.0",
  "info": {
    "description": "Live Helper Chat API description. You have to authorize to use API. Create API key in Live Helper Chat back office. During authorization provide operator username and key instead of password.",
    "version": "1.0.0",
    "title": "Live Helper Chat API",
    "termsOfService": "",
    "contact": {
      "email": "remdex@gmail.com",
      "name": "Live Helper Chat"
    },
    "license": {
      "name": "",
      "url": ""
    }
  },
  "host": "{{host}}",
  "basePath": "/",
  "tags": [
    {
      "name": "chat",
      "description": "API Related to chats"
    },
    {
      "name": "user",
      "description": "API Related to user"
    },
    {
      "name": "online",
      "description": "API Related to online status"
    },
    {
      "name": "online_user",
      "description": "API Related to online users"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/restapi/chats": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Fetch chats list",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "departament_id",
            "in": "query",
            "description": "Department ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "delay",
            "in": "query",
            "description": "How many seconds has to be passed from chat start. It's usefull if you want to fetch chats older than n seconds. It's time in seconds from chat start.",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "include_messages",
            "description": "Include messages within chat",
            "required": false,
            "type": "boolean",
            "default": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch chat list",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/campaignsconversions": {
      "get": {
        "tags": [
          "online_user"
        ],
        "summary": "Search for campaign conversions",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "query",
            "description": "Department ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "campaign_id",
            "in": "query",
            "description": "Campaign id",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "invitation_id",
            "in": "query",
            "description": "Invitation id",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "chat_id",
            "in": "query",
            "description": "Chat id",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "ctime",
            "in": "query",
            "description": "Create time greater than. Unix timestamp",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "description": "id greater than",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "con_time",
            "in": "query",
            "description": "Conversion time greater than. Unix timestamp",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "invitation_status",
            "in": "query",
            "description": "Invitation status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "send",
                "shown",
                "seen",
                "chat_started"
              ]
            }
          },

          {
            "name": "invitation_type",
            "in": "query",
            "description": "Invitation type",
            "required": false,
            "type": "string",
            "format": "int32",
            "enum": [
              "operator",
              "system"
            ]
          },
          {
            "name": "device_type",
            "in": "query",
            "description": "Device type",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "pc",
                "mobile",
                "tablet"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "type": "string",
            "format": "int32",
            "default": "20"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "required": false,
            "type": "string",
            "format": "int32",
            "default": "0"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort order for id",
            "required": false,
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "include_onlinevisitor",
            "description": "Include online visitor record data",
            "required": false,
            "type": "boolean",
            "default": false,
            "in": "query"
          },
          {
            "name": "include_invitation",
            "description": "Include invitation object",
            "required": false,
            "type": "boolean",
            "default": false,
            "in": "query"
          },
          {
            "name": "include_department",
            "description": "Include department object",
            "required": false,
            "type": "boolean",
            "default": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Search for campaign conversions",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/fetchchat": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Fetch chat information",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "query",
            "description": "Chat ID",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "hash",
            "in": "query",
            "description": "Hash, optional variable. If provided it will be validated against chat hash also.",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch chat information",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/fetchchatmessages": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Fetch chat messages",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "query",
            "description": "Chat ID",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "workflow",
            "in": "query",
            "description": "Should workflow be executed. Like auto responder. Usefull if you are building visitors custom interface.",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "last_message_id",
            "in": "query",
            "description": "Last message ID from which should be returned next messages.",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "ignore_system_messages",
            "in": "query",
            "description": "Should system messages be ignored or not.",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch chat messages",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/updatechatattributes": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Updates chat attributes",
        "description": "Updates chat attributes.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "formData",
            "description": "Chat ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "hash",
            "in": "formData",
            "description": "Hash",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "formData",
            "description": "Data as encoded JSON format.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/addmsguser": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Add message to chat as a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "msg",
            "in": "formData",
            "description": "Message",
            "required": true,
            "type": "string"
          },
          {
            "name": "chat_id",
            "in": "formData",
            "description": "Chat ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "hash",
            "in": "formData",
            "description": "Hash",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message added",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        }
      }
    },
    "/restapi/addmsgadmin": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Add message to chat as an admin",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "formData",
            "description": "Chat ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "msg",
            "in": "formData",
            "description": "Message",
            "required": true,
            "type": "string"
          },
          {
            "name": "sender",
            "in": "formData",
            "description": "Sender - operator or bot is sending a message. On it depends how Live Helper Chat will change chat statuses.",
            "required": true,
            "type": "string",
            "enum": [
              "operator",
              "bot"
            ]
          },
          {
            "name": "meta_msg",
            "in": "formData",
            "description": "Meta body for a message",
            "required": false,
            "type": "string"
          },
          {
            "name": "operator_name",
            "in": "formData",
            "description": "Set custom operator name for a message",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message added",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/setchatstatus": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Set chat status",
        "description": "Changes chat status to provided one. Related logic is also executed in the background.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "formData",
            "description": "Chat ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "0 - pending, 1 - active, 2 - closed chat, chat box chat - 3, operators chat - 4, bot chat - 5",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat status was changed",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/getuser": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Fetches user and verifies provided password",
        "description": "If user_id is provided. Systems tries to find provided user. If not system tries to find user by email or username. If password is provided it verifies provided password.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "email",
            "in": "query",
            "description": "E-mail",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch chat messages",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/getusers": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetches users",
        "description": "Returns list of all system users.",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/isonline": {
      "get": {
        "tags": [
          "online"
        ],
        "summary": "Check is someone online",
        "description": "Returns global status is anyone online",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ignore_user_status",
            "in": "query",
            "description": "Ignore user status",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/isonlinedepartment/{department_id}": {
      "get": {
        "tags": [
          "online"
        ],
        "summary": "Check is department online",
        "description": "Returns status for particular department",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "description": "Department ID",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "ignore_user_status",
            "in": "query",
            "description": "Ignore user status",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exclude_bot",
            "in": "query",
            "description": "Exclude bot status",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/isonlineuser/{user_id}": {
      "get": {
        "tags": [
          "online"
        ],
        "summary": "Check is user online",
        "description": "Returns status for particular user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/isonlinechat/{chat_id}": {
      "get": {
        "tags": [
          "online"
        ],
        "summary": "Check is user anyone from operators online for provided chat",
        "description": "Returns status for particular user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "description": "Chat ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "ignore_user_status",
            "in": "query",
            "description": "Ignore user status",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exclude_bot",
            "in": "query",
            "description": "Exclude bot status",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/groupsbyobject/{object_id}/{type}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Returns objects by object id and type",
        "description": "Is used to get objects by object id and type. This can be used in third party software to have custom permissions.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "description": "Object ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type ID",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/groupsidbyobject/{object_id}/{type}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Returns list of groups id by object id and type",
        "description": "Is used to get list of groups by object id and type. This can be used in third party software to have custom permissions.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "description": "Object ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type ID",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/listofobjectid/{user_id}/{type}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Returns list of objects user can access by user id and type of object",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type ID",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/updatelastactivity/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Updates last operator activity. So chat considers operator as online",
        "description": "Updates last operator activity. So chat considers operator as online",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/setonlinestatus/{user_id}/{online}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Changes operator status to offline or online",
        "description": "Updates operator status to online or offline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "online",
            "in": "path",
            "description": "1 - online, 0 - offline",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login to application, also registers device if required",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Username",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "required": true,
            "type": "string"
          },
          {
            "name": "generate_token",
            "in": "formData",
            "description": "Should we generate authentification/session token",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "device_token",
            "in": "formData",
            "description": "Device token",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "formData",
            "description": "Device type",
            "required": false,
            "type": "string",
            "enum": [
              "unknown",
              "ios",
              "android"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Login",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        }
      }
    },
    "/restapi/loginbytoken": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logins user by token",
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Token",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "r",
            "in": "query",
            "description": "Redirect url",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "api",
            "description": "Is it api mode",
            "required": false,
            "type": "boolean",
            "default": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Login",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        }
      }
    },
    "/restapi/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Revokes token if it's found",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "formData",
            "description": "Token",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Login",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        }
      }
    },
    "/restapi/bots": {
      "get": {
        "tags": [
          "bot"
        ],
        "summary": "Bot list",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Returns list of bots",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/departments": {
      "get": {
        "tags": [
          "department"
        ],
        "summary": "Departments list",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Returns list of departments",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/department": {
      "post": {
        "tags": [
          "department"
        ],
        "summary": "Create a new department",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Department object that needs to be added to the lhc",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Department"
              }
            }
        ],
        "responses": {
          "200": {
            "description": "Creates a department with provided attributes",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/department/{department_id}": {
      "put": {
        "tags": [
          "department"
        ],
        "summary": "Update a department",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Bot object that needs to be added to the lhc",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          },
          {
            "name": "department_id",
            "in": "path",
            "description": "Department to update",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Updates department with specified attributes",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      },
      "delete": {
        "tags": [
          "department"
        ],
        "summary": "Deletes specified department",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "description": "Department to delete",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes specified department",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/bot": {
      "post": {
        "tags": [
          "bot"
        ],
        "summary": "Create a bot",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Bot object that needs to be added to the lhc",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Bot"
              }
            }
        ],
        "responses": {
          "200": {
            "description": "Creates a bot with provided attributes",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    },
    "/restapi/bot/{bot_id}": {
      "put": {
        "tags": [
          "bot"
        ],
        "summary": "Update a bot",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Bot object that needs to be added to the lhc",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Bot"
              }
            },
            {
              "name": "bot_id",
              "in": "path",
              "description": "Bot ID to update",
              "required": true,
              "type": "string",
              "format": "int32"
            }
        ],
        "responses": {
          "200": {
            "description": "Updates bot with specified attributes",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      },
      "delete": {
        "tags": [
          "bot"
        ],
        "summary": "Deletes specified bot",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "Bot ID to update",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes specified bot",
            "schema": {
            }
          },
          "400": {
            "description": "Error",
            "schema": {
            }
          }
        },
        "security": [
          {
            "login": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "login": {
      "type": "basic",
      "description": "Basic authentication"
    }
  },
  "definitions": {
    "Bot": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "default": "name",
          "required": true,
          "description": "Name of the bot"
        },
        "nick": {
          "type": "string",
          "default": "nick",
          "required": true,
          "description": "Nick visible by customer"
        },
        "configuration": {
          "type": "string",
          "description": "Configuration attributes. Leave it empty just.",
          "example": null
        },
        "attr_str_1": {
          "type": "string",
          "description": "Field can be used by extensions",
          "example": null
        },
        "attr_str_2": {
          "type": "string",
          "description": "Field can be used by extensions",
          "example": null
        },
        "attr_str_3": {
          "type": "string",
          "description": "Field can be used by extensions",
          "example": null
        },
        "image": {
          "type": "string",
          "format": "byte",
          "description": "Image content encoded with base64_encode"
        }
      },
      "example" : {
        "name" : "Name of the bot",
        "nick" : "Nick of the bot"
      }
    },
    "Department": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "default": "Name",
          "example" : "Department name",
          "required": true,
          "description": "Name of the department"
        },
        "Email": {
          "type": "string",
          "format": "email",
          "nullable": true,
          "required": false,
          "example": null,
          "description": "E-mail"
        },
        "XMPPRecipients": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "XMPPRecipientsGroup": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "Identifier": {
          "type": "string",
          "nullable": true,
          "example": null
        },
        "Priority": {
          "type": "integer",
          "nullable": true,
          "example": 0
        },
        "SortPriority": {
          "type": "integer",
          "nullable": true,
          "example": null
        },
        "TansferDepartmentID": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 1
        },
        "TransferTimeout": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 5
        },
        "delay_lm": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 5
        },
        "OnlineHoursActive": {
          "type": "boolean",
          "nullable": true,
          "example": true
        },
        "Disabled": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "Hidden": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "inform_close": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "inform_unread": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "nc_cb_execute": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "AutoAssignActive": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "VisibleIfOnline": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "ExcludeInactiveChats": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "MaxNumberActiveChats": {
          "type": "integer",
          "nullable": true,
          "example": 0
        },
        "MaxWaitTimeoutSeconds": {
          "type": "integer",
          "nullable": true,
          "example": 0
        },
        "MaxNumberActiveDepChats": {
          "type": "integer",
          "nullable": true,
          "example": 0
        },
        "pending_max": {
          "type": "integer",
          "nullable": true,
          "example": 0
        },
        "delay_before_assign": {
          "type": "integer",
          "nullable": true,
          "example": 0
        },
        "inform_unread_delay": {
          "type": "integer",
          "nullable": true,
          "example": 0,
          "min": 5
        },
        "inform_delay": {
          "type": "integer",
          "nullable": true,
          "example": 0,
          "min": 0
        },
        "inform_close_all": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "inform_close_all_email": {
          "type": "string",
          "nullable": true,
          "example": ""
        },
        "products_enabled": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "products_required": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "assign_same_language": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "hide_send_email": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "bot_only_offline": {
          "type": "boolean",
          "nullable": true,
          "example": false
        },
        "auto_delay_timeout": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 1
        },
        "auto_delay_var": {
          "type": "string",
          "nullable": true,
          "example": null,
          "min" : 1
        },
        "survey_id": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 1
        },
        "bot_id": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 1
        },
        "bot_tr_id": {
          "type": "integer",
          "nullable": true,
          "example": null,
          "min" : 1
        }
      },
      "example" : {
        "Name" : "Name of department"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Live Helper Chat",
    "url": "https://livehelperchat.com"
  }
}
