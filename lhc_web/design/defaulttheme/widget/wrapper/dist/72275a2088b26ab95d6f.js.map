{"version":3,"sources":["webpack://UserList/./src/util/proactiveChat.js"],"names":["proactiveChat","this","params","timeoutStatuscheck","timeoutActivity","attributes","chatEvents","dynamicInvitations","iddleTimeoutActivity","checkMessageTimeout","nextRescheduleTimeout","initInvitation","eventEmitter","addListener","init","chatParams","getSessionAttributes","widgetStatus","value","inject_html","invitation","th","document","getElementsByTagName","s","createElement","setAttribute","LHC_API","args","lhc_base_url","Date","now","appendChild","only_inject","sendChildEvent","clearTimeout","paramsExecution","userSession","getVID","department","join","priority","operator","encodeURIComponent","window","location","href","substring","protocol","length","title","helperFunctions","makeRequest","data","vid_id","setTimeout","showInvitation","delay","check_messages","next_reschedule","dynamic","forEach","item","push","id","type","domEventsHandler","listen","e","from","event","relatedTarget","toElement","nodeName","every_time","unlisten","iddleTimeoutActivityReset","element","iddle_for"],"mappings":"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","file":"72275a2088b26ab95d6f.js","sourcesContent":["import {helperFunctions} from '../lib/helperFunctions';\nimport {domEventsHandler} from '../util/domEventsHandler';\n\nclass _proactiveChat {\n\n    constructor() {\n        this.params = {};\n        this.timeoutStatuscheck = null;\n        this.timeoutActivity = null;\n        this.attributes = null;\n        this.chatEvents = null;\n        this.dynamicInvitations = [];\n\n        this.iddleTimeoutActivity = null;\n        this.checkMessageTimeout = null;\n        this.nextRescheduleTimeout = null;\n    }\n\n    setParams(params, attributes, chatEvents) {\n        this.params = params;\n        this.attributes = attributes;\n        this.chatEvents = chatEvents;\n        this.initInvitation();\n\n        // check invitaiton then tag is added\n        this.attributes.eventEmitter.addListener('tagAdded', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('checkMessageOperator', () => {\n            this.initInvitation({init: 0});\n        });\n    }\n\n    showInvitation(params) {\n\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        // Show invitation only if widget is not open\n        if (this.attributes.widgetStatus.value === true || chatParams['id']) {\n            return;\n        }\n\n        if (params.inject_html && params.invitation) {\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src', LHC_API.args.lhc_base_url + 'chat/htmlsnippet/'+params.invitation+'/inv/0/?ts='+Date.now());\n            th.appendChild(s);\n        }\n\n        if (!params.only_inject) {\n            this.chatEvents.sendChildEvent('proactive', [params]);\n            clearTimeout(this.checkMessageTimeout);\n            clearTimeout(this.nextRescheduleTimeout);\n        }\n    }\n\n    initInvitation(paramsExecution) {\n\n        clearTimeout(this.checkMessageTimeout);\n\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        const init = (paramsExecution && paramsExecution['init'] === 0) ? 0 : 1;\n\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n            let params = {\n                'vid': this.attributes.userSession.getVID(),\n                'dep': this.attributes.department.join(',')\n            };\n\n            if (LHC_API.args.priority) {\n                params['priority'] = LHC_API.args.priority;\n            }\n\n            if (LHC_API.args.operator) {\n                params['operator'] = LHC_API.args.operator;\n            }\n\n            if (this.attributes['identifier']) {\n                params['idnt'] = this.attributes['identifier']\n            }\n\n            if (this.attributes['tag']) {\n                params['tag'] = this.attributes['tag']\n            }\n\n            params['l'] = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n            params['dt'] = encodeURIComponent(document.title);\n            params['init'] = init;\n\n            helperFunctions.makeRequest(LHC_API.args.lhc_base_url + '/widgetrestapi/checkinvitation', {params: params}, (data) => {\n                if (data.invitation) {\n                    const params = {'vid_id' : data.vid_id, 'invitation' : data.invitation, 'inject_html' :  data.inject_html};\n                    setTimeout(() => {\n                        this.showInvitation(params);\n                    }, data.delay || 0);\n                } else {\n                    if (LHC_API.args.check_messages) {\n                        this.checkMessageTimeout = setTimeout(() => {\n                            this.initInvitation({init: 0});\n                        },this.params['interval'] * 1000);\n                    }\n                }\n\n                if (data.next_reschedule) {\n                    this.nextRescheduleTimeout = setTimeout(() => {\n                        this.initInvitation({init: 0});\n                    }, data.next_reschedule);\n                }\n\n                if (data.dynamic) {\n                    data.dynamic.forEach((item) => {\n                        this.dynamicInvitations.push(item.id);\n                        if (item.type === 1) {\n                            domEventsHandler.listen(document, 'mouseout', (e) => {\n                                e = e ? e : window.event;\n                                var from = e.relatedTarget || e.toElement;\n                                if (!from || from.nodeName == \"HTML\") {\n                                    this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'only_inject' : item.only_inject});\n                                    if (!item.every_time) {\n                                        domEventsHandler.unlisten('lhc_inv_mouse_out_'+item.id);\n                                    }\n                                }\n                            }, 'lhc_inv_mouse_out_' + item.id);\n                        } else if (item.type === 2) {\n\n                            var iddleTimeout = () => {\n\n                                this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'only_inject' : item.only_inject});\n\n                                clearTimeout(this.iddleTimeoutActivity);\n\n                                if (!item.every_time) {\n                                    ['mousemove','mousedown','click','scroll','keypress','load'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_win_'+element);\n                                    });\n\n                                    ['mousemove','scroll','touchstart','touchend'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_doc_'+element);\n                                    });\n                                }\n                            };\n\n                            this.iddleTimeoutActivityReset = () => {\n                                clearTimeout(this.iddleTimeoutActivity);\n                                this.iddleTimeoutActivity = setTimeout( () => { iddleTimeout(); }, item.iddle_for *1000);\n                            }\n\n                            this.iddleTimeoutActivityReset();\n\n                            ['mousemove','mousedown','click','scroll','keypress','load'].forEach((event) => {\n                                    domEventsHandler.listen(window, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_win_'+event);\n                            });\n\n                            ['mousemove','scroll','touchstart','touchend'].forEach((event) => {\n                                domEventsHandler.listen(document, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_doc_'+event);\n                            });\n                        }\n                    })\n                }\n            });\n        }\n\n        /*startNewMessageCheckSingle : function() {\n            if (!lh_inst.cookieData.hash) {\n                var vid = this.cookieDataPers.vid;\n                lh_inst.removeById('lhc_operator_message');\n                var th = document.getElementsByTagName('head')[0];\n                var s = document.createElement('script');\n                var locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n                var tzOffset = this.getTzOffset();\n\n                var dynamic = this.dynamicAssigned.length > 0 ? '/(dyn)/' +  this.dynamicAssigned.join('/'): '';\n\n                s.setAttribute('id','lhc_operator_message');\n                s.setAttribute('type','text/javascript');\n                s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?>\n                <?php echo erLhcoreClassDesign::baseurlsite()?>'+this.lang+'/chat/chatcheckoperatormessage<?php $priority !== false ? print '/(priority)/'.$priority : ''?>\n                <?php is_object($theme) ? print '/(theme)/'.$theme->id : ''?>\n                <?php $operator !== false ? print '/(operator)/'.$operator : ''?>\n                <?php $department !== false ? print '/(department)/'.$department : ''?>\n                <?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?>\n                <?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?>\n                <?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?>/(tz)/' + tzOffset + this.survey_id + '/(count_page)/1/(vid)/'+vid+'/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+dynamic+'?l='+locationCurrent+this.tag+this.parseStorageArguments()+this.parseOptionsOnline()+this.parseOptions()+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n                th.appendChild(s);\n            }\n        },*/\n    }\n\n    /*syncUserStatus(sender) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        let params = {\n            'vid': this.attributes.userSession.getVID(),\n            'wopen': (this.attributes.widgetStatus.value ? 1 : 0),\n            'uaction': sender,\n            'uactiv': this.userActive,\n            'dep': this.attributes.department.join(',')\n        };\n\n        if (chatParams['id'] && chatParams['hash']) {\n            params['hash'] = chatParams['id'] + '_' + chatParams['hash'];\n        }\n\n        helperFunctions.makeRequest(LHC_API.args.lhc_base_url + '/widgetrestapi/chatcheckstatus', {params: params}, (data) => {\n            if (data.change_status == true && this.attributes.onlineStatus.value != data.online) {\n                this.attributes.onlineStatus.next(data.online);\n            }\n        });\n    }*/\n\n    /*\n    startNewMessageCheck : function() {\n    \t/*var vid = this.cookieDataPers.vid;\n    \tvar inst = this;\n    \tvar locationCurrent = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n\n        this.timeoutInstance = setTimeout(function() {\n            lh_inst.removeById('lhc_operator_message');\n            var dynamic = inst.dynamicAssigned.length > 0 ? '/(dyn)/' +  inst.dynamicAssigned.join('/') : '';\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('id','lhc_operator_message');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src','<?php echo erLhcoreClassModelChatConfig::fetch('explicit_http_mode')->current_value?>//<?php echo $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurlsite()?>'+lh_inst.lang+'/chat/chatcheckoperatormessage<?php $priority !== false ? print '/(priority)/'.$priority : ''?><?php $theme !== false ? print '/(theme)/'.$theme->id : ''?><?php $operator !== false ? print '/(operator)/'.$operator : ''?><?php $department !== false ? print '/(department)/'.$department : ''?><?php $identifier !== false ? print '/(identifier)/'.htmlspecialchars($identifier) : ''?><?php $uarguments !== false ? print '/(ua)/'.$uarguments : '' ?><?= isset($currentPosition['full_height']) && $currentPosition['full_height'] ?  '/(fullheight)/true' : '/(fullheight)/false' ?>/(vid)/'+vid + lh_inst.survey_id + '/(uactiv)/'+lh_inst.userActive+'/(wopen)/'+lh_inst.timeoutStatusWidgetOpen+dynamic+'?l='+locationCurrent+inst.tag+'&dt='+encodeURIComponent(document.title)+'&ts='+Date.now());\n            th.appendChild(s);\n            lh_inst.startNewMessageCheck();\n        }, <?php echo (int)(erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data['check_for_operator_msg']*1000); ?> );\n    },\n\n    */\n\n}\n\nconst proactiveChat = new _proactiveChat();\nexport {proactiveChat};\n\n"],"sourceRoot":""}