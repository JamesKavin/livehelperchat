{"version":3,"sources":["webpack://LHCVoiceCallAPP/./src/components/VoiceCall.js"],"names":["reducer","state","action","type","foundIndex","chats","findIndex","x","id","value","attr","unshift","active","mn","support_chat","splice","msg","el","document","getElementById","classList","contains","group_offline","Error","VoiceCall","props","useReducer","hash","chatsRef","useRef","useEffect","current","console","log","initParams","useTranslation","t","i18n","Fragment","className","class","defaultChecked","name","htmlFor"],"mappings":"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","file":"2.0144b9ae85ea648a892d.js","sourcesContent":["import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.chats.unshift(action.value);\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Set last appended messages as first array element\n            state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst VoiceCall = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        id: null,\n        hash: null\n    });\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    useEffect(() => {\n\n        console.log(props.initParams);\n\n        // Cleanup\n        return function cleanup() {\n        };\n\n    },[]);\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    return (\n        <React.Fragment>\n\n            <div className=\"mx-auto\">\n\n                <div className=\"form-group\">\n\n                    <h3>Choose call type</h3>\n\n                    <input type=\"radio\" class=\"form-check-input\" defaultChecked={true} value=\"audio\" name=\"callType\" id=\"inlineFormCheck1\" /> <label className=\"form-check-label\" htmlFor=\"inlineFormCheck1\">Audio & Video call</label>\n                    <input type=\"radio\" class=\"form-check-input\" value=\"audio\" name=\"audiovideo\" id=\"inlineFormCheck2\" /> <label className=\"form-check-label\" htmlFor=\"inlineFormCheck2\">Only Audio call</label>\n\n\n\n                </div>\n\n                <button className=\"btn btn-primary\">{t('voice_call.join_call')}</button>\n            </div>\n\n        </React.Fragment>\n    );\n}\n\nexport default VoiceCall"],"sourceRoot":""}