{"version":3,"sources":["webpack://LHCVoiceCallAPP/./src/lib/useInterval.js","webpack://LHCVoiceCallAPP/./src/components/VoiceCall.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","client","AgoraRTC","createClient","mode","codec","localTracks","videoTrack","audioTrack","reducer","state","action","type","foundIndex","chats","findIndex","x","value","attr","unshift","active","mn","support_chat","splice","msg","el","document","getElementById","classList","contains","group_offline","Error","VoiceCall","props","useReducer","call","inCall","dispatch","chatsRef","axios","get","WWW_DIR_JAVASCRIPT","initParams","then","result","data","useTranslation","cancelJoin","t","i18n","hash","status","vi_status","op_status","subscribe","user","mediaType","a","uid","console","log","handleUserPublished","handleUserUnpublished","join","on","Promise","all","appid","token","createMicrophoneAudioTrack","createCameraVideoTrack","play","publish","Object","values","requestJoin","post","Fragment","className","role","aria-label","onClick","title"],"mappings":"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","file":"2.d436bbfd7caf4028e003.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState, useReducer, useRef, useBoolean } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"../lib/useInterval\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\"\n\nconst client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n\nvar localTracks = {\n    videoTrack: null,\n    audioTrack: null\n};\n\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.chats.unshift(action.value);\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Set last appended messages as first array element\n            state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst VoiceCall = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        call : {},\n        inCall: false\n    });\n\n    const STATUS_OP_PENDING = 0;\n    const STATUS_OP_JOINED = 1;\n\n    const STATUS_VI_PENDING = 0;\n    const STATUS_VI_REQUESTED = 1;\n    const STATUS_VI_JOINED = 2;\n\n    const STATUS_PENDING = 0;\n    const STATUS_CONFIRM = 1;\n    const STATUS_CONFIRMED = 2;\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const loadCallStatus = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    useEffect(() => {\n\n        loadCallStatus();\n\n        // Cleanup\n        return function cleanup() {\n        };\n\n    },[]);\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    const cancelJoin = (type) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/' + type).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    useInterval(\n        () => {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"call\" : result.data\n                    }\n                });\n            });\n        },\n        (state.call.status != STATUS_CONFIRMED || state.call.vi_status != STATUS_VI_JOINED || state.call.op_status != STATUS_OP_JOINED) ? 2000 : null\n    );\n\n    const subscribe = async (user, mediaType) => {\n        \n        const uid = user.uid;\n        \n        // subscribe to a remote user\n        await client.subscribe(user, mediaType);\n        \n        console.log(\"subscribe success\");\n\n        /*if (mediaType === 'video') {\n            const player = $(`\n              <div id=\"player-wrapper-${uid}\">\n                <p class=\"player-name\">remoteUser(${uid})</p>\n                <div id=\"player-${uid}\" class=\"player\"></div>\n              </div>\n            `);\n            $(\"#remote-playerlist\").append(player);\n            user.videoTrack.play(`player-${uid}`);\n        }\n        if (mediaType === 'audio') {\n            user.audioTrack.play();\n        }*/\n    }\n    \n    const handleUserPublished = (user, mediaType) =>  {\n        //const id = user.uid;\n        //remoteUsers[id] = user;\n        subscribe(user, mediaType);\n    }\n\n    const handleUserUnpublished = (user) => {\n        //const id = user.uid;\n        //delete remoteUsers[id];\n        //$(`#player-wrapper-${id}`).remove();\n    }\n\n    const join = async (data) => {\n        // add event listener to play remote tracks when remote user publishs.\n        client.on(\"user-published\", handleUserPublished);\n        client.on(\"user-unpublished\", handleUserUnpublished);\n\n        var uui = null;\n\n        // join a channel and create local tracks, we can use Promise.all to run them concurrently\n        [ uui, localTracks.audioTrack, localTracks.videoTrack ] = await Promise.all([\n            // join the channel\n            client.join(props.initParams.appid, props.initParams.id + '_' + props.initParams.hash, data.token || null),\n            // create local tracks, using microphone and camera\n            AgoraRTC.createMicrophoneAudioTrack(),\n            AgoraRTC.createCameraVideoTrack()\n        ]);\n\n        // play local video track\n        localTracks.videoTrack.play(\"local-player\");\n        //$(\"#local-player-name\").text(`localVideo(${options.uid})`);\n\n        // publish local tracks to channel\n        await client.publish(Object.values(localTracks));\n        //console.log(\"publish success\");\n    }\n\n    const requestJoin = (type) => {\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/(action)/join').then(result => {\n\n            if (type == 'audiovideo') {\n                join(result.data);\n            }\n            \n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"d-flex flex-row flex-grow-1 pt-2\">\n                <div className=\"col bg-light mx-1 align-middle text-center d-flex pl-0 pr-0\" id=\"local-player\">\n                </div>\n                <div className=\"col bg-light mx-1 align-middle text-center d-flex pl-0 pr-0\">\n                    <div className=\"align-self-center mx-auto text-muted font-weight-bold\">Visitor</div>\n                </div>\n            </div>\n            <div className=\"row header-chat desktop-header\">\n\n                <div className=\"btn-toolbar p-2 text-center mx-auto btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {state.call.vi_status == STATUS_VI_JOINED && <span className=\"text-muted py-2\">Visitor has joined a call!</span>}\n                        {state.call.vi_status == STATUS_VI_PENDING && <span className=\"text-muted py-2\">Pending visitor to join a call!</span>}\n                        {state.call.vi_status == STATUS_VI_REQUESTED && <span className=\"text-muted py-2\">Visitor is waiting for someone to let him in!</span>}\n                    </div>\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {state.call.vi_status == STATUS_VI_REQUESTED && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('letvisitorin')} ><span className=\"material-icons\">face</span>Let visitor in</button>}\n\n                        {state.call.op_status == STATUS_OP_JOINED && <button title=\"Leave a call. Visitor still remain on the call\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('leave')}><span className=\"material-icons\">call_end</span>Leave a call</button>}\n\n                        {state.call.op_status == STATUS_OP_JOINED && <button title=\"Call for the visitor also will end.\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('end')}><span className=\"material-icons\">call_end</span>End a call</button>}\n\n                        {state.call.op_status == STATUS_OP_PENDING && <React.Fragment>\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audio')}><span className=\"material-icons\">call</span>Join with audio</button>\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audiovideo')}><span className=\"material-icons\">video_call</span>Join with audio & video</button>\n                        </React.Fragment>}\n                    </div>\n\n                </div>\n\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default VoiceCall"],"sourceRoot":""}