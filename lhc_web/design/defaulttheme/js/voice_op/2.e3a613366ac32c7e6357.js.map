{"version":3,"sources":["webpack://LHCVoiceCallAPP/./src/lib/useInterval.js","webpack://LHCVoiceCallAPP/./src/components/VoiceCall.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","client","AgoraRTC","createClient","mode","codec","reducer","state","action","type","foundIndex","chats","findIndex","x","value","attr","unshift","active","mn","support_chat","splice","msg","el","document","getElementById","classList","contains","group_offline","Error","VoiceCall","props","useReducer","call","localTracks","videoTrack","audioTrack","remoteUsers","uid","inCall","dispatch","chatsRef","axios","get","WWW_DIR_JAVASCRIPT","initParams","then","result","data","useTranslation","cancelJoin","t","i18n","a","hash","Object","keys","forEach","trackName","track","stop","close","undefined","leave","status","vi_status","op_status","subscribe","user","mediaType","console","log","handleUserPublished","handleUserUnpublished","join","on","uui","Promise","all","appid","token","createMicrophoneAudioTrack","createCameraVideoTrack","play","publish","values","requestJoin","post","Fragment","className","title","role","aria-label","onClick"],"mappings":"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","file":"2.e3a613366ac32c7e6357.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState, useReducer, useRef, useBoolean } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"../lib/useInterval\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\"\n\nconst client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.chats.unshift(action.value);\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Set last appended messages as first array element\n            state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst VoiceCall = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        call : {},\n        localTracks : {\n            videoTrack : null,\n            audioTrack: null\n        },\n        remoteUsers : {},\n        uid : null,\n        inCall: false\n    });\n\n    const STATUS_OP_PENDING = 0;\n    const STATUS_OP_JOINED = 1;\n\n    const STATUS_VI_PENDING = 0;\n    const STATUS_VI_REQUESTED = 1;\n    const STATUS_VI_JOINED = 2;\n\n    const STATUS_PENDING = 0;\n    const STATUS_CONFIRM = 1;\n    const STATUS_CONFIRMED = 2;\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const loadCallStatus = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    useEffect(() => {\n\n        loadCallStatus();\n\n        // Cleanup\n        return function cleanup() {\n        };\n\n    },[]);\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    const cancelJoin = async (type) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/' + type).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n\n        if (type == 'leave' || type == 'end')\n        {\n\n            Object.keys(state.localTracks).forEach(trackName => {\n                var track = state.localTracks[trackName];\n                if (track) {\n                    track.stop();\n                    track.close();\n                    state.localTracks[trackName] = undefined;\n                }\n            })\n\n\n           /* console.log(state.localTracks);\n\n            for (trackName in state.localTracks) {\n                var track = state.localTracks[trackName];\n                if (track) {\n                    track.stop();\n                    track.close();\n                    state.localTracks[trackName] = undefined;\n                }\n            }*/\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"remoteUsers\" : {},\n                    \"localTracks\" : {\n                        videoTrack : null,\n                        audioTrack: null\n                    }\n                }\n            });\n\n            // leave the channel\n           await client.leave();\n        }\n\n    }\n\n    useInterval(\n        () => {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"call\" : result.data\n                    }\n                });\n            });\n        },\n        (state.call.status != STATUS_CONFIRMED || state.call.vi_status != STATUS_VI_JOINED || state.call.op_status != STATUS_OP_JOINED) ? 2000 : null\n    );\n\n    const subscribe = async (user, mediaType) => {\n        \n        const uid = user.uid;\n        \n        // subscribe to a remote user\n        await client.subscribe(user, mediaType);\n        \n        console.log(\"subscribe success\");\n\n        /*if (mediaType === 'video') {\n            const player = $(`\n              <div id=\"player-wrapper-${uid}\">\n                <p class=\"player-name\">remoteUser(${uid})</p>\n                <div id=\"player-${uid}\" class=\"player\"></div>\n              </div>\n            `);\n            $(\"#remote-playerlist\").append(player);\n            user.videoTrack.play(`player-${uid}`);\n        }\n        if (mediaType === 'audio') {\n            user.audioTrack.play();\n        }*/\n    }\n    \n    const handleUserPublished = (user, mediaType) =>  {\n        //const id = user.uid;\n        //remoteUsers[id] = user;\n        subscribe(user, mediaType);\n    }\n\n    const handleUserUnpublished = (user) => {\n        //const id = user.uid;\n        //delete remoteUsers[id];\n        //$(`#player-wrapper-${id}`).remove();\n    }\n\n    const join = async (data) => {\n        // add event listener to play remote tracks when remote user publishs.\n        client.on(\"user-published\", handleUserPublished);\n        client.on(\"user-unpublished\", handleUserUnpublished);\n\n        var uui = null;\n        var localTracks = {\n            audioTrack : null,\n            videoTrack : null\n        };\n\n        // join a channel and create local tracks, we can use Promise.all to run them concurrently\n        [ uui, localTracks.audioTrack, localTracks.videoTrack] = await Promise.all([\n            // join the channel\n            client.join(props.initParams.appid, props.initParams.id + '_' + props.initParams.hash, data.token || null),\n            // create local tracks, using microphone and camera\n            AgoraRTC.createMicrophoneAudioTrack(),\n            AgoraRTC.createCameraVideoTrack()\n        ]);\n\n        // play local video track\n        localTracks.videoTrack.play(\"local-player\");\n\n        dispatch({\n            type: 'update',\n            value: {\n                \"uid\" : uui,\n                \"localTracks\" : localTracks,\n            }\n        });\n\n        await client.publish(Object.values(localTracks));\n    }\n\n    const requestJoin = (type) => {\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/(action)/join').then(result => {\n            if (type == 'audiovideo') {\n                join(result.data);\n            }\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"d-flex flex-row flex-grow-1 pt-2\">\n                <div className=\"col bg-light mx-1 align-middle text-center d-flex pl-0 pr-0\" title={\"UID \"+state.uid} id=\"local-player\">\n                </div>\n                <div className=\"col bg-light mx-1 align-middle text-center d-flex pl-0 pr-0\">\n                    <div className=\"align-self-center mx-auto text-muted font-weight-bold\">Visitor</div>\n                </div>\n            </div>\n            <div className=\"row header-chat desktop-header\">\n\n                <div className=\"btn-toolbar p-2 text-center mx-auto btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {state.call.vi_status == STATUS_VI_JOINED && <span className=\"text-muted py-2\">Visitor has joined a call!</span>}\n                        {state.call.vi_status == STATUS_VI_PENDING && <span className=\"text-muted py-2\">Pending visitor to join a call!</span>}\n                        {state.call.vi_status == STATUS_VI_REQUESTED && <span className=\"text-muted py-2\">Visitor is waiting for someone to let him in!</span>}\n                    </div>\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {state.call.vi_status == STATUS_VI_REQUESTED && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('letvisitorin')} ><span className=\"material-icons\">face</span>Let visitor in</button>}\n\n                        {state.call.op_status == STATUS_OP_JOINED && <button title=\"Leave a call. Visitor still remain on the call\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('leave')}><span className=\"material-icons\">call_end</span>Leave a call</button>}\n\n                        {state.call.op_status == STATUS_OP_JOINED && <button title=\"Call for the visitor also will end.\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('end')}><span className=\"material-icons\">call_end</span>End a call</button>}\n\n                        {state.call.op_status == STATUS_OP_PENDING && <React.Fragment>\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audio')}><span className=\"material-icons\">call</span>Join with audio</button>\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audiovideo')}><span className=\"material-icons\">video_call</span>Join with audio & video</button>\n                        </React.Fragment>}\n                    </div>\n\n                </div>\n\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default VoiceCall"],"sourceRoot":""}