{"version":3,"file":"906.69e02e38c7b99fbd0119.js","mappings":"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","sources":["webpack://LHCReactAPP/./src/components/ChatBotIntroMessage.js","webpack://LHCReactAPP/./src/components/ProactiveInvitation.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport parse, { domToReact } from 'html-react-parser';\nimport { connect } from \"react-redux\";\nimport { withTranslation } from 'react-i18next';\n\nclass ChatBotIntroMessage extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.abstractClick = this.abstractClick.bind(this);\n        this.updateTriggerClicked = this.updateTriggerClicked.bind(this);\n        this.processBotAction = this.processBotAction.bind(this);\n        this.disableEditor = false;\n    }\n\n    addLoader(attrs, element) {\n        if (!attrs[\"data-no-change\"] && attrs.type == 'button') {\n            element.setAttribute(\"disabled\",\"disabled\");\n            element.innerHTML = \"<i class=\\\"material-icons\\\">&#xf113;</i>\" + element.innerHTML;\n        }\n    }\n\n    /**\n     * Here we handle bot buttons actions\n     * */\n    abstractClick(attrs, e) {\n\n        const { t } = this.props;\n\n        this.addLoader(attrs,e.target);\n\n        if (attrs.onclick.indexOf('lhinst.updateTriggerClicked') !== -1) {\n            this.updateTriggerClicked({type:'triggerclicked'}, attrs, e.target);\n        } else if (attrs.onclick.indexOf('notificationsLHC.sendNotification') !== -1) {\n            // todo\n        } else if (attrs.onclick.indexOf('lhinst.buttonClicked') !== -1) {\n            this.updateTriggerClicked({type:''}, attrs, e.target);\n        } else if (attrs.onclick.indexOf('lhinst.updateChatClicked') !== -1) {\n            this.updateTriggerClicked({type:'',mainType: 'updatebuttonclicked'}, attrs, e.target);\n        } else if (attrs.onclick.indexOf('lhinst.editGenericStep') !== -1) {\n            this.updateTriggerClicked({type:'editgenericstep'}, attrs, e.target);\n        } else if (attrs.onclick.indexOf('lhinst.dropdownClicked') !== -1) {\n            const list = document.getElementById('id_generic_list-' + attrs['data-id']);\n            if (list && list.value != \"0\" && list.value != \"\") {\n                attrs['data-payload'] = list.value;\n                this.updateTriggerClicked({type:'valueclicked'}, attrs, e.target);\n            } else {\n                alert(t('bot.please_choose'));\n            }\n        } else {\n            helperFunctions.emitEvent('MessageClick',[attrs, this.props.dispatch]);\n            console.log('Unknown click event: ' + attrs.onclick);\n        }\n\n        e.preventDefault();\n    }\n\n    updateTriggerClicked(paramsType, attrs, target) {\n        this.props.setBotPayload({type: paramsType['type'], payload: attrs['data-payload'], id : attrs['data-id'], processed : (typeof attrs['data-keep'] === 'undefined')})\n    }\n\n    processBotAction(domNode) {\n\n        const attr = domNode.attribs;\n\n        if (attr['data-bot-action'] == 'lhinst.disableVisitorEditor') {\n            this.disableEditor = true;\n        } else if (attr['data-bot-action'] == 'lhinst.setDelay') {\n            //this.delayData.push(JSON.parse(attr['data-bot-args']));\n        } else if (attr['data-bot-action'] == 'execute-js') {\n            eval(domNode.children[0]['data']);\n        }\n    }\n\n    render() {\n\n        return parse(this.props.content, {\n\n            replace: domNode => {\n                if (domNode.attribs) {\n\n                    var cloneAttr = Object.assign({}, domNode.attribs);\n\n                    if (domNode.attribs.onclick) {\n                        delete domNode.attribs.onclick;\n                    }\n\n                    if (domNode.name && domNode.name === 'button') {\n                        if (cloneAttr.onclick) {\n                            return <button {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr, e)} >{domToReact(domNode.children)}</button>\n                        }\n                    } else if (domNode.name && domNode.name === 'a') {\n                        if (cloneAttr.onclick) {\n                            return <a {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr, e)} >{domToReact(domNode.children)}</a>\n                        }\n                    } else if (domNode.name && domNode.name === 'script' && domNode.attribs['data-bot-action']) {\n                        this.processBotAction(domNode);\n                    }\n                }\n            }\n        });\n    }\n}\n\nexport default ChatBotIntroMessage;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { hideInvitation } from \"../actions/chatActions\"\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport ChatBotIntroMessage from './ChatBotIntroMessage';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass ProactiveInvitation extends Component {\n\n    state = {\n        shown: false\n    }\n\n    constructor(props) {\n        super(props);\n        this.hideInvitation = this.hideInvitation.bind(this);\n        this.fullInvitation = this.fullInvitation.bind(this);\n        this.setBotPayload = this.setBotPayload.bind(this);\n    }\n\n    componentDidMount() {\n        helperFunctions.sendMessageParent('showInvitation', [{name: this.props.chatwidget.getIn(['proactive','data','invitation_name'])}]);\n\n        if (this.props.chatwidget.getIn(['proactive','data','play_sound'])) {\n            helperFunctions.emitEvent('play_sound', [{'type' : 'new_invitation', 'sound_on' : (this.props.chatwidget.getIn(['proactive','data','play_sound']) === true), 'widget_open' : ((this.props.chatwidget.get('shown') && this.props.chatwidget.get('mode') == 'widget') || document.hasFocus())}]);\n        }\n\n        if (!(this.props.chatwidget.hasIn(['proactive','data','full_widget']) && !this.props.chatwidget.get('isMobile'))) {\n            if (document.getElementById('id-invitation-height')) {\n                setTimeout(()=> {\n                    if (document.getElementById('id-invitation-height')) {\n                        helperFunctions.sendMessageParent('widgetHeight', [{\n                            'force_width' : (this.props.chatwidget.hasIn(['proactive','data','message_width']) ? this.props.chatwidget.getIn(['proactive','data','message_width']) + 40 : 240),\n                            'force_height' : document.getElementById('id-invitation-height').offsetHeight + 20,\n                            'force_bottom' : (this.props.chatwidget.hasIn(['proactive','data','message_bottom']) ? this.props.chatwidget.getIn(['proactive','data','message_bottom']) : 75),\n                            'force_right' : (this.props.chatwidget.hasIn(['proactive','data','message_right']) ? this.props.chatwidget.getIn(['proactive','data','message_right']) : 75),\n                        }]);\n                        this.setState({shown : true});\n                    }\n                 }, 50);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        helperFunctions.sendMessageParent('widgetHeight', [{'reset_height' : true}]);\n    }\n\n    hideInvitation(e) {\n        this.props.dispatch(hideInvitation());\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    fullInvitation() {\n        helperFunctions.sendMessageParentDirect('hideInvitation', [{'full' : true, name: this.props.chatwidget.getIn(['proactive','data','invitation_name'])}]);\n        this.props.dispatch({\n            'type' : 'FULL_INVITATION'\n        });\n    }\n\n    setBotPayload(params) {\n        // Set payload parameter\n        this.props.setBotPayload(params);\n\n        // Set auto start\n        // This way it's faster just user might see blank screen while submiting\n        // So just decided to show full invitation and submit in the background.\n        /*this.props.dispatch({\n            'type' : 'attr_set',\n            'attr' : ['chat_ui','auto_start'],\n            'data' : true,\n        });*/\n\n        // Show full invitation show auto submit will work\n        this.fullInvitation();\n    }\n\n    render() {\n\n        if (this.props.chatwidget.hasIn(['proactive','data','full_widget']) && !this.props.chatwidget.get('isMobile')) {\n            this.fullInvitation();\n        }\n\n        let className = \"\";\n        if (this.state.shown === false) {\n            className += \" invisible\";\n        } else {\n            className += \" fade-in\";\n        }\n\n        return (\n                <div id=\"id-invitation-height\" className={className} >\n\n                    {this.props.chatwidget.hasIn(['proactive','data','close_above_msg']) && <div className=\"text-right\"><button title=\"Close\" onClick={(e) => this.hideInvitation(e)} id=\"invitation-close-btn\" className=\"btn btn-sm rounded\"><i className=\"material-icons mr-0\">&#xf10a;</i></button></div>}\n\n                    <div className=\"p-2 pointer clearfix proactive-need-help\" id=\"proactive-wrapper\" style={{width:(this.props.chatwidget.hasIn(['proactive','data','message_width']) ? this.props.chatwidget.getIn(['proactive','data','message_width']) : 200)}} onClick={this.fullInvitation}>\n\n                        {!this.props.chatwidget.hasIn(['proactive','data','close_above_msg']) && <button title=\"Close\" onClick={(e) => this.hideInvitation(e)} id=\"invitation-close-btn\" className=\"float-right btn btn-sm rounded\"><i className=\"material-icons mr-0\">&#xf10a;</i></button>}\n\n                        {this.props.chatwidget.hasIn(['proactive','data','photo_left_column']) && this.props.chatwidget.getIn(['proactive','data','photo']) && <div className=\"d-flex\">\n\n                            <div className=\"proactive-image\">\n                                <img width=\"30\" alt={this.props.chatwidget.getIn(['proactive','data','name_support']) || this.props.chatwidget.getIn(['proactive','data','extra_profile'])} title={this.props.chatwidget.getIn(['proactive','data','name_support']) || this.props.chatwidget.getIn(['proactive','data','extra_profile'])} className=\"mr-2 rounded\" src={this.props.chatwidget.getIn(['proactive','data','photo'])} />\n                            </div>\n\n                            <div className=\"flex-grow-1\">\n                                {!this.props.chatwidget.hasIn(['proactive','data','hide_op_name']) && <div className=\"fs14\">\n                                    <b>{this.props.chatwidget.getIn(['proactive','data','name_support']) || this.props.chatwidget.getIn(['proactive','data','extra_profile'])}</b>\n                                </div>}\n                                <div id=\"inv-msg-wrapper\">\n                                    <p className=\"fs13 mb-0 inv-msg-cnt\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['proactive','data','message'])}}></p>\n                                    {this.props.chatwidget.hasIn(['proactive','data','bot_intro']) && <ChatBotIntroMessage setBotPayload={this.setBotPayload} content={this.props.chatwidget.getIn(['proactive','data','message_full'])} />}\n                                </div>\n                            </div>\n\n                        </div>}\n\n                        {(!this.props.chatwidget.hasIn(['proactive', 'data', 'photo_left_column']) || !this.props.chatwidget.getIn(['proactive', 'data', 'photo'])) &&\n                            <div>\n                                <div className=\"fs14\">\n                                    {this.props.chatwidget.getIn(['proactive', 'data', 'photo']) && <img width=\"30\" height=\"30\"\n                                                                                                     alt={this.props.chatwidget.getIn(['proactive', 'data', 'name_support']) || this.props.chatwidget.getIn(['proactive', 'data', 'extra_profile'])}\n                                                                                                     title={this.props.chatwidget.getIn(['proactive', 'data', 'name_support']) || this.props.chatwidget.getIn(['proactive', 'data', 'extra_profile'])}\n                                                                                                     className=\"mr-2 rounded\"\n                                                                                                     src={this.props.chatwidget.getIn(['proactive', 'data', 'photo'])}/>}\n\n                                    {!this.props.chatwidget.hasIn(['proactive','data','hide_op_name']) && <b>{this.props.chatwidget.getIn(['proactive', 'data', 'name_support']) || this.props.chatwidget.getIn(['proactive', 'data', 'extra_profile'])}</b>}\n                                </div>\n                                <div id=\"inv-msg-wrapper\">\n                                    <p className=\"fs13 mb-0 inv-msg-cnt\" dangerouslySetInnerHTML={{__html: this.props.chatwidget.getIn(['proactive', 'data', 'message'])}}></p>\n                                    {this.props.chatwidget.hasIn(['proactive','data','bot_intro']) && <ChatBotIntroMessage setBotPayload={this.setBotPayload} content={this.props.chatwidget.getIn(['proactive', 'data', 'message_full'])} />}\n                                </div>\n                            </div>\n                        }\n\n\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default ProactiveInvitation;\n"],"names":["ChatBotIntroMessage","props","abstractClick","bind","updateTriggerClicked","processBotAction","disableEditor","attrs","element","type","setAttribute","innerHTML","e","t","this","addLoader","target","onclick","indexOf","mainType","list","document","getElementById","value","alert","helperFunctions","emitEvent","dispatch","console","log","preventDefault","paramsType","setBotPayload","payload","id","processed","domNode","attr","attribs","eval","children","parse","content","replace","cloneAttr","Object","assign","name","onClick","domToReact","PureComponent","connect","store","chatwidget","shown","hideInvitation","fullInvitation","getIn","get","hasFocus","hasIn","setTimeout","offsetHeight","setState","stopPropagation","params","className","state","title","style","width","alt","src","dangerouslySetInnerHTML","__html","height","Component"],"sourceRoot":""}