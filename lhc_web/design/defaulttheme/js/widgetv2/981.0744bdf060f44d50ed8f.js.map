{"version":3,"file":"981.0744bdf060f44d50ed8f.js","mappings":"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","sources":["webpack://LHCReactAPP/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://LHCReactAPP/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://LHCReactAPP/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://LHCReactAPP/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://LHCReactAPP/./src/components/ChatAbort.js","webpack://LHCReactAPP/./src/components/ChatModal.js","webpack://LHCReactAPP/./src/components/ChatMessage.js","webpack://LHCReactAPP/./src/components/ChatFileUploader.js","webpack://LHCReactAPP/./src/components/ChatSync.js","webpack://LHCReactAPP/./src/components/ChatOptions.js","webpack://LHCReactAPP/./src/components/ChatStatus.js","webpack://LHCReactAPP/./src/components/ChatIntroStatus.js","webpack://LHCReactAPP/./src/components/OnlineChat.js","webpack://LHCReactAPP/./node_modules/xwiper/index.js"],"sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import React, { PureComponent } from 'react';\n\nclass ChatAbort extends PureComponent {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"fade modal-backdrop show\"></div>\n            <div role=\"dialog\" id=\"dialog-content\" aria-modal=\"true\" className=\"fade modal show d-block p-2\" tabIndex=\"-1\">\n                <div className=\"modal-content p-2\">\n                    <p>{this.props.text}</p>\n                    <div className=\"modal-footer\">\n                        <button className=\"btn btn-secondary btn-sm\" onClick={this.props.close} type=\"button\">{this.props.closeText}</button>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>;\n    }\n}\n\nexport default ChatAbort;\n","import React, { PureComponent } from 'react';\nimport axios from \"axios\";\nimport parse, { domToReact } from 'html-react-parser';\nimport { withTranslation } from 'react-i18next';\nimport Xwiper from 'xwiper';\n\nclass ChatModal extends PureComponent {\n\n    state = {\n        body: null\n    };\n    \n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        axios.get(window.lhcChat['base_url'] + this.props.dataUrl)\n        .then((response) => {\n            this.setState({'body' : response.data});\n            var container = document.getElementById('dialog-content');\n            var bsn = require(\"bootstrap.native/dist/bootstrap-native-v4\");\n            var tabs = container.querySelectorAll('[data-toggle=\"tab\"]');\n\n            if (tabs.length > 0) {\n                var activeTab = 0;\n                Array.prototype.forEach.call(tabs, function(element){ new bsn.Tab( element) });\n\n                const xwiper = new Xwiper('.tab-content');\n                xwiper.onSwipeLeft(() => {\n                    activeTab = activeTab < (tabs.length - 1) ? (activeTab + 1) : 0;\n                    tabs[activeTab].Tab.show();\n                });\n\n                xwiper.onSwipeRight(() => {\n                    activeTab = activeTab > 0 ? (activeTab - 1) : (tabs.length - 1);\n                    tabs[activeTab].Tab.show();\n                });\n            }\n\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    dismissModal = () => {\n        this.props.toggle()\n    }\n\n    generalOnClick = (e) => {\n        const { t } = this.props;\n\n        var txtToAdd =  e['data-bb-code'];\n        if (e['data-promt'] && e['data-promt'] == 'img') {\n            var link = prompt(t('bbcode.img_link'));\n            if (link) {\n                txtToAdd = '[' + txtToAdd + ']' + link + '[/' + txtToAdd + ']';\n            }\n        } else if (e['data-promt'] && e['data-promt'] == 'url') {\n            var link = prompt(t('bbcode.link'));\n            if (link) {\n                txtToAdd = '[url=' + link + ']'+t('bbcode.link_here')+'[/url]';\n            }\n        }\n        this.props.insertText(txtToAdd);\n        this.props.toggle();\n    }\n\n    generalDataActionClick = (e) => {\n        if (e['data-action'] && this.props[e['data-action']]) {\n            this.props[e['data-action']]();\n        }\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                {this.state.body !== null && <div className=\"fade modal-backdrop show\"></div>}\n                {this.state.body !== null && <div role=\"dialog\" id=\"dialog-content\" aria-modal=\"true\" className=\"fade modal show d-block\" tabIndex=\"-1\">{parse(this.state.body, {\n                        replace: domNode => {\n\n                            if (domNode.attribs && domNode.attribs.id === 'react-close-modal') {\n                                return <button type=\"button\" className=\"close float-right\" data-dismiss=\"modal\" onClick={this.dismissModal} aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>;\n                            } else if (domNode.attribs && domNode.attribs.bbitem) {\n                                if (domNode.attribs.class) {\n                                    domNode.attribs.className = domNode.attribs.class;\n                                    delete domNode.attribs.class;\n                                }\n                                return (\n                                    <a {...domNode.attribs} onClick={(e) => this.generalOnClick(domNode.attribs)}>{domToReact(domNode.children)}</a>\n                                );\n                            } else if (domNode.type && domNode.type === 'tag' && domNode.name && domNode.name == 'input' && domNode.attribs && domNode.attribs.type && domNode.attribs.type == \"button\") {\n\n                                if (domNode.attribs.class) {\n                                    domNode.attribs.className = domNode.attribs.class;\n                                    delete domNode.attribs.class;\n                                }\n\n                                return (<input {...domNode.attribs} onClick={(e) => this.generalDataActionClick(domNode.attribs)} />);\n\n                            } else if (domNode.type && domNode.type === 'script') {\n                                if (domNode.children.length > 0)\n                                {\n                                    setTimeout(() => {\n                                        const newScript = document.createElement(\"script\");\n                                        newScript.appendChild(document.createTextNode(domNode.children[0].data));\n                                        var head = document.getElementsByTagName('head').item(0);\n                                        head.appendChild(newScript);\n                                    },500);\n                                } else if (domNode.attribs && domNode.attribs.src) {\n                                    const newScript = document.createElement('script');\n                                    newScript.src = domNode.attribs.src;\n                                    newScript.type ='text/javascript';\n                                    var head = document.getElementsByTagName('head').item(0);\n                                    head.appendChild(newScript);\n                                }\n                                return <React.Fragment></React.Fragment>;\n                            }\n                        }\n                    }\n                )}</div>}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTranslation()(ChatModal);\n","import React, { PureComponent } from 'react';\nimport parse, { domToReact } from 'html-react-parser';\nimport { connect } from \"react-redux\";\nimport { updateTriggerClicked, subscribeNotifications, parseScript } from \"../actions/chatActions\";\nimport { withTranslation } from 'react-i18next';\nimport { helperFunctions } from \"../lib/helperFunctions\";\n\nclass ChatMessage extends PureComponent {\n\n    state = {\n        jsExecuted : false\n    }\n\n    constructor(props) {\n        super(props);\n        this.abstractClick = this.abstractClick.bind(this);\n        this.imageLoaded = this.imageLoaded.bind(this);\n        this.updateTriggerClicked = this.updateTriggerClicked.bind(this);\n        this.disableEditor = false;\n        this.delayData = [];\n    }\n\n    addLoader(attrs, element) {\n        if (!attrs[\"data-no-change\"] && attrs.type == 'button') {\n            element.setAttribute(\"disabled\",\"disabled\");\n            element.innerHTML = \"<i class=\\\"material-icons lhc-spin\\\">&#xf113;</i>\" + element.innerHTML;\n        }\n    }\n    \n    /**\n     * Here we handle bot buttons actions\n     * */\n    abstractClick(attrs, e) {\n\n        const { t } = this.props;\n\n\n\n        if (typeof attrs.onchange !== 'undefined') {\n\n            // Checkbox support\n            if (attrs.type && attrs.type == \"checkbox\") {\n                if (attrs['payload-type'] == 'enable-confirm') {\n                    var elm = document.getElementById('confirm-button-'+attrs['data-id']);\n                    if (e.target.checked) {\n                        elm.removeAttribute('disabled');\n                        elm.onclick = (e) => this.updateTriggerClicked({type:''}, {'data-payload':'confirm', 'data-id' : attrs['data-id']}, e.target);\n                    } else {\n                        elm.setAttribute('disabled','disabled');\n                    }\n                }\n                return ;\n            }\n\n            // Drop down support\n            const optionSelected = e.target.options[e.target.selectedIndex];\n\n            const attrLoad = {\n                'data-payload': optionSelected.getAttribute('data-payload'),\n                'data-id' : optionSelected.getAttribute('data-id')\n            };\n\n            if (optionSelected.getAttribute('payload-type') == 'trigger') {\n                this.updateTriggerClicked({type:'/(type)/triggerclicked'}, attrLoad , e.target);\n            } else if (optionSelected.getAttribute('payload-type') == 'button' || optionSelected.getAttribute('payload-type') == 'payload') {\n                this.updateTriggerClicked({type:''}, attrLoad, e.target);\n            }\n\n            return ;\n        }\n\n        this.addLoader(attrs,e.target);\n\n        if (attrs.onclick) {\n            if (attrs.onclick.indexOf('lhinst.updateTriggerClicked') !== -1) {\n                this.updateTriggerClicked({type:'/(type)/triggerclicked'}, attrs, e.target);\n            } else if (attrs.onclick.indexOf('notificationsLHC.sendNotification') !== -1) {\n\n                this.props.dispatch(subscribeNotifications());\n                e.target.innerHTML = t('notifications.subscribing');\n                setTimeout(() => {\n                    this.removeMetaMessage(attrs['data-id']);\n                }, 500);\n\n            } else if (attrs.onclick.indexOf('lhinst.buttonClicked') !== -1) {\n                this.updateTriggerClicked({type:''}, attrs, e.target);\n            } else if (attrs.onclick.indexOf('lhinst.startVoiceCall') !== -1) {\n                this.props.voiceCall();\n            } else if (attrs.onclick.indexOf('lhinst.chooseFile') !== -1) {\n                this.props.abstractAction('fileupload');\n            } else if (attrs.onclick.indexOf('lhinst.updateChatClicked') !== -1) {\n                this.updateTriggerClicked({type:'',mainType: 'updatebuttonclicked'}, attrs, e.target);\n            } else if (attrs.onclick.indexOf('lhinst.editGenericStep') !== -1) {\n                this.updateTriggerClicked({type:'/(type)/editgenericstep'}, attrs, e.target);\n            } else if (attrs.onclick.indexOf('lhinst.hideShowAction') !== -1) {\n                const args = JSON.parse(attrs['data-load']);\n                var more = document.getElementById('message-more-'+args['id']);\n                if (more.classList.contains('hide')) {\n                    e.target.innerText = args['hide_text'];\n                    more.classList.remove('hide');\n                } else {\n                    e.target.innerText = args['show_text'];\n                    more.classList.add('hide');\n                }\n            } else if (attrs.onclick.indexOf('lhinst.executeJS') !== -1) {\n                parseScript(attrs, this);\n            } else if (attrs.onclick.indexOf('lhinst.dropdownClicked') !== -1) {\n                const list = document.getElementById('id_generic_list-' + attrs['data-id']);\n                if (list && list.value != \"0\" && list.value != \"\") {\n                    attrs['data-payload'] = list.value;\n                    this.updateTriggerClicked({type:'/(type)/valueclicked'}, attrs, e.target);\n                } else {\n                    alert(t('bot.please_choose'));\n                }\n            } else {\n                helperFunctions.emitEvent('MessageClick',[attrs, this.props.dispatch]);\n                console.log('Unknown click event: ' + attrs.onclick);\n            }\n        }\n\n        e.preventDefault();\n\n        // Why did we previously auto focused on button click?\n        // It just makes a screen smaller and is bad for UI\n        /*if (!(attrs.src && attrs.class && attrs.class == 'img-fluid')) {\n            this.props.focusMessage();\n        }*/\n    }\n\n    removeMetaMessage(messageId) {\n        setTimeout(() => {\n            var block = document.getElementById('msg-' + messageId);\n            if (block) {\n                var x = block.getElementsByClassName(\"meta-message-\" + messageId);\n                var i;\n                for (i = 0; i < x.length; i++) {\n                    x[i].parentNode.removeChild(x[i]);\n                }\n            }\n        },500);\n    }\n\n    updateTriggerClicked(paramsType, attrs, target) {\n        this.props.dispatch(updateTriggerClicked(paramsType, {payload: attrs['data-payload'], id : attrs['data-id'], processed : (typeof attrs['data-keep'] === 'undefined')})).then((data) => {\n            if (!attrs['data-keep']) {\n                this.removeMetaMessage(attrs['data-id']);\n            }\n\n            if (data.data.t) {\n                helperFunctions.sendMessageParent('botTrigger', [{'trigger' : data.data.t}]);\n            }\n\n            this.props.updateMessages();\n            this.props.updateStatus();\n        });\n    }\n\n    imageLoaded(attrs) {\n        if (this.props.scrollBottom) {\n            this.props.scrollBottom(true, true);\n        }\n    }\n\n    componentDidMount() {\n\n        this.props.setMetaUpdateState(this.props.msg['msg'].indexOf('meta-auto-hide') !== -1);\n\n        if (this.disableEditor == true) {\n            this.props.setEditorEnabled(false);\n        } else {\n            this.props.setEditorEnabled(true);\n        }\n\n        if (this.delayData.length > 0) {\n            this.delayData.forEach((item) => {\n                this.props.sendDelay(item);\n            })\n        }\n    }\n\n    formatStringToCamelCase(str) {\n        const splitted = str.split(\"-\");\n        if (splitted.length === 1) return splitted[0];\n        return (\n            splitted[0] +\n            splitted\n                .slice(1)\n                .map(word => word[0].toUpperCase() + word.slice(1))\n                .join(\"\")\n        );\n    };\n\n    getStyleObjectFromString(str) {\n        const style = {};\n        str.split(\";\").forEach(el => {\n            const [property, value] = el.split(\":\");\n            if (!property) return;\n\n            const formattedProperty = this.formatStringToCamelCase(property.trim());\n            style[formattedProperty] = value.trim();\n        });\n\n        return style;\n    };\n\n    render() {\n\n        const { t } = this.props;\n\n        var operatorChanged = false;\n\n        var messages = parse(this.props.msg['msg'], {\n\n            replace: domNode => {\n                if (domNode.attribs) {\n\n                    var cloneAttr = Object.assign({}, domNode.attribs);\n\n                    if (domNode.attribs.class) {\n                        domNode.attribs.className = domNode.attribs.class;\n\n                        // Animate only if it's not first sync call\n                        if (domNode.attribs.className.indexOf('message-row') !== -1 && this.props.id > 0) {\n\n                            domNode.attribs.className += ' fade-in-fast';\n\n                            if (this.props.msg['msop'] > 0 && this.props.msg['msop'] != this.props.msg['lmsop'] && operatorChanged == false) {\n                                domNode.attribs.className += ' operator-changes';\n                                operatorChanged = true;\n                            }\n                        } else if (this.props.profilePic && domNode.attribs.className.indexOf('vis-icon-hld') !== -1) {\n                            return <img className=\"profile-msg-pic\" onLoad={this.imageLoaded} src={this.props.profilePic} alt=\"\" title=\"\" />\n                        }\n\n                        delete domNode.attribs.class;\n                    }\n\n                    if (domNode.attribs.onclick) {\n                        delete domNode.attribs.onclick;\n                    }\n\n                    if (domNode.name && domNode.name === 'img') {\n\n                        if (domNode.attribs.style) {\n                            domNode.attribs.style = this.getStyleObjectFromString(domNode.attribs.style);\n                        }\n\n                        return <img {...domNode.attribs} onLoad={this.imageLoaded} onClick={(e) => this.abstractClick(cloneAttr, e)} />\n\n                    } else if (domNode.name && domNode.name === 'button') {\n                        if (cloneAttr.onclick) {\n\n                            if (domNode.attribs.style) {\n                                domNode.attribs.style = this.getStyleObjectFromString(domNode.attribs.style);\n                            }\n\n                            return <button {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr, e)} >{domToReact(domNode.children)}</button>\n                        }\n                    } else if (domNode.name && domNode.name === 'a') {\n                        if (cloneAttr.onclick) {\n\n                            if (domNode.attribs.style) {\n                                domNode.attribs.style = this.getStyleObjectFromString(domNode.attribs.style);\n                            }\n\n                            return <a {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr, e)} >{domToReact(domNode.children)}</a>\n                        }\n                    } else if (domNode.name && domNode.name === 'select') {\n\n                        if (cloneAttr.onchange) {\n\n                            if (domNode.attribs.style) {\n                                domNode.attribs.style = this.getStyleObjectFromString(domNode.attribs.style);\n                            }\n\n                            return <select {...domNode.attribs} onChange={(e) => this.abstractClick(cloneAttr, e)} >{domToReact(domNode.children)}</select>\n                        }\n\n                    } else if (domNode.name && domNode.name === 'input') {\n\n                        if (domNode.attribs.type && domNode.attribs.type == 'checkbox' && cloneAttr.onchange) {\n                            if (domNode.attribs.style) {\n                                domNode.attribs.style = this.getStyleObjectFromString(domNode.attribs.style);\n                            }\n                            return <input type=\"checkbox\" {...domNode.attribs} onChange={(e) => this.abstractClick(cloneAttr, e)} />\n                        }\n\n                    } else if (domNode.name && domNode.name === 'script' && domNode.attribs['data-bot-action']) {\n\n                        // Execute JS only once\n                        // Happens if new message indicator is passed\n                        // We rerender elements, but we should not execute JS\n                        if (this.state.jsExecuted == true) {\n                            return <React.Fragment></React.Fragment>;\n                        }\n\n                        this.setState({jsExecuted : true});\n                        parseScript(domNode, this);\n\n                        // Return empty element\n                        return <React.Fragment></React.Fragment>;\n                    }\n                }\n            }\n        });\n\n        return <React.Fragment>{this.props.hasNew == true && this.props.id == this.props.newId && <div id=\"scroll-to-message\" className=\"message-admin border-bottom new-msg-holder border-danger text-center\"><span className=\"new-msg bg-danger text-white d-inline-block fs12 rounded-top\">{this.props.newTitle}</span></div>}{messages}</React.Fragment>\n    }\n}\n\nexport default withTranslation()(connect()(ChatMessage));\n","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { helperFunctions } from \"../lib/helperFunctions\";\n\n/**\n * https://github.com/LukasMarx/react-file-upload\n * */\nclass ChatFileUploader extends PureComponent {\n\n    state = {\n        hightlight: false,\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.fileInputRef = React.createRef();\n\n        // UI Actions\n        this.openFileDialog = this.openFileDialog.bind(this);\n        this.onFilesAddedUI = this.onFilesAddedUI.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onPaste = this.onPaste.bind(this);\n\n        // Backend actions\n        this.onFilesAdded = this.onFilesAdded.bind(this);\n        this.uploadFiles = this.uploadFiles.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n    }\n\n    onFilesAdded(files) {\n        const { t } = this.props;\n\n        const ruleTest = new RegExp(\"(\\.|\\/)(\" + this.props.fileOptions.get('ft_us') + \")$\",\"i\");\n\n        let uploadErrors = [];\n        files.forEach(file => {\n\n            if (!(ruleTest.test(file.type) || ruleTest.test(file.name))) {\n                uploadErrors.push(file.name + ': ' + t('file.incorrect_type'));\n            }\n\n            if (file.size > this.props.fileOptions.get('fs')) {\n                uploadErrors.push(file.name + ': '+ t('file.to_big_file'));\n            }\n        });\n\n        if (uploadErrors.length > 0) {\n            alert(uploadErrors.join(\"\\n\"));\n        } else {\n            this.setState({\n                'files': files\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.files.length > 0 && this.state.uploading == false) {\n            this.uploadFiles();\n        }\n    }\n\n    async uploadFiles() {\n        this.setState({ uploadProgress: {}, uploading: true });\n        const promises = [];\n        this.state.files.forEach(file => {\n            promises.push(this.sendRequest(file));\n        });\n        try {\n            await Promise.all(promises);\n            this.setState({ successfullUploaded: true, uploading: false,  files : []});\n        } catch (e) {\n            // Not Production ready! Do some error handling here instead...\n            this.setState({ successfullUploaded: true, uploading: false,  files : [] });\n        }\n    }\n\n    sendRequest(file) {\n        const { t } = this.props;\n\n        return new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n\n            req.upload.addEventListener(\"progress\", event => {\n                if (event.lengthComputable) {\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                        state: \"pending\",\n                        percentage: (event.loaded / event.total) * 100\n                    };\n                    this.props.progress(t('file.uploading') + Math.round((event.loaded / event.total) * 100) + '%');\n                }\n            });\n\n            req.upload.addEventListener(\"load\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                //this.setState({ uploadProgress: copy });\n                this.props.progress('100%');\n                this.props.onCompletion();\n                resolve(req.response);\n            });\n\n            req.upload.addEventListener(\"error\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"error\", percentage: 0 };\n                this.setState({ uploadProgress: copy });\n                reject(req.response);\n            });\n\n            const formData = new FormData();\n            formData.append(\"files\", file, file.name);\n\n            req.open(\"POST\", this.props.base_url + '/file/uploadfile/' + this.props.chat_id + '/' + this.props.hash);\n            req.send(formData);\n        });\n    }\n\n    openFileDialog() {\n        if (this.state.uploading) return;\n        this.fileInputRef.current.click();\n    }\n\n    onFilesAddedUI(evt) {\n        const files = evt.target.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n\n        if (this.props.onDrag) {\n            this.props.onDrag(true);\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.props.dropArea.current) {\n                this.props.dropArea.current.ondragover = this.onDragOver;\n                this.props.dropArea.current.ondragleave = this.onDragLeave;\n                this.props.dropArea.current.ondrop = this.onDrop;\n                document.addEventListener(\"paste\", this.onPaste);\n                helperFunctions.eventEmitter.addListener('fileupload', this.openFileDialog);\n            }\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.props.dropArea.current) {\n            this.props.dropArea.current.ondragover = null;\n            this.props.dropArea.current.ondragleave = null;\n            this.props.dropArea.current.ondrop = null;\n        }\n        helperFunctions.eventEmitter.removeListener('fileupload', this.openFileDialog);\n        document.removeEventListener(\"paste\", this.onPaste);\n    }\n\n    onPaste(e) {\n        var items = e && e.clipboardData &&\n            e.clipboardData.items,\n            data = {files: []};\n\n        if (items && items.length) {\n            const array = [];\n            for (var i = 0; i < items.length; i++) {\n                var file = items[i].getAsFile && items[i].getAsFile();\n                if (file){\n                    array.push(file);\n                }\n            }\n\n            if (array.length > 0) {\n                this.onFilesAdded(array);\n            }\n        }\n    }\n\n    onDragLeave(event) {\n        if (this.props.onDrag) {\n            this.props.onDrag(false);\n        }\n    }\n\n    onDrop(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        const files = event.dataTransfer.files;\n        const array = this.fileListToArray(files);\n\n        this.onFilesAdded(array);\n\n        if (this.props.onDrag) {\n            this.props.onDrag(false);\n        }\n    }\n\n    fileListToArray(list) {\n        const array = [];\n        for (var i = 0; i < list.length; i++) {\n            array.push(list.item(i));\n        }\n        return array;\n    }\n\n    render() {\n        if (this.props.link) {\n            return (\n                <React.Fragment>\n                    <input onChange={this.onFilesAddedUI} ref={this.fileInputRef} id=\"fileupload\" type=\"file\" name=\"files[]\" multiple={!this.props.fileOptions.has('one_file_upload')} className=\"d-none\" />\n                    <a className=\"file-uploader\" onClick={this.openFileDialog}><i className=\"material-icons chat-setting-item text-muted\">&#xf10e;</i></a>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default withTranslation()(ChatFileUploader);","import React, { PureComponent } from 'react';\nimport { STATUS_CLOSED_CHAT, STATUS_BOT_CHAT, STATUS_SUB_SURVEY_SHOW, STATUS_ACTIVE_CHAT, STATUS_SUB_USER_CLOSED_CHAT, STATUS_SUB_OWNER_CHANGED, STATUS_SUB_CONTACT_FORM  } from \"../constants/chat-status\";\nimport { helperFunctions } from \"../lib/helperFunctions\";\n\nclass ChatSync extends PureComponent {\n\n    state = {\n        intervalId : null,\n        intervalCheckStatusId : null\n    };\n\n    constructor(props) {\n        super(props);\n        this.syncChat = this.syncChat.bind(this);\n        this.checkStatusChat = this.checkStatusChat.bind(this);\n    }\n\n    syncChat(issueUpdate) {\n\n        if (this.state.intervalId) {\n            clearTimeout(this.state.intervalId);\n        }\n\n        this.props.updateMessages();\n        this.setState({'intervalId': setTimeout(this.syncChat,this.props.syncInterval)});\n    }\n\n    checkStatusChat() {\n\n        if (this.state.intervalCheckStatusId) {\n            clearTimeout(this.state.intervalCheckStatusId);\n        }\n\n        this.props.updateStatus();\n        this.setState({'intervalCheckStatusId': setTimeout(this.checkStatusChat, this.props.syncInterval)});\n    }\n\n    componentDidMount() {\n        this.syncChat();\n        this.checkStatusChat();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            this.props.status == STATUS_CLOSED_CHAT ||\n            this.props.status_sub == STATUS_SUB_SURVEY_SHOW ||\n            this.props.status_sub == STATUS_SUB_USER_CLOSED_CHAT ||\n            this.props.status_sub == STATUS_SUB_CONTACT_FORM\n        ) {\n            if (this.state.intervalId) {\n                clearTimeout(this.state.intervalId);\n                this.state.intervalId = null;\n            }\n            helperFunctions.sendMessageParent('chatClosed', []);\n        } else if (!this.state.intervalId) {\n            this.syncChat();\n        }\n\n        if ((this.props.status_sub != prevProps.status_sub || this.props.status != prevProps.status) || (this.props.initClose != prevProps.initClose) || (prevProps.hasSurvey != this.props.hasSurvey)) {\n            this.checkStatusChat();\n        }\n\n        if ((this.props.status == STATUS_CLOSED_CHAT || this.props.status == STATUS_BOT_CHAT || this.props.status == STATUS_ACTIVE_CHAT || this.props.status_sub == STATUS_SUB_SURVEY_SHOW) && this.state.intervalCheckStatusId && this.props.hasSurvey == false) {\n            clearTimeout(this.state.intervalCheckStatusId);\n            this.state.intervalCheckStatusId = null;\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.intervalId) {\n            clearTimeout(this.state.intervalId);\n        }\n\n        if (this.state.intervalCheckStatusId) {\n            clearTimeout(this.state.intervalCheckStatusId);\n        }\n    }\n\n    render() {\n        return null;\n    }\n}\n\nexport default ChatSync;\n","import React, { PureComponent } from 'react';\n\nclass ChatOptions extends PureComponent {\n\n    state = {\n        dropdown: null\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (document.getElementById(this.props.elementId)) {\n            var bsn = require(\"bootstrap.native/dist/bootstrap-native-v4\");\n            this.setState({'dropdown' : new bsn.Dropdown(document.getElementById(this.props.elementId))});\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.dropdown) {\n            delete this.state.dropdown;\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default ChatOptions;\n","import React, { PureComponent } from 'react';\nimport parse, { domToReact } from 'html-react-parser';\nimport { connect } from \"react-redux\";\nimport {voteAction, transferToHumanAction} from \"../actions/chatActions\"\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport axios from \"axios\";\n\n@connect((store) => {\n    return {\n        chat: store.chatwidget.get('chatData'),\n        chat_ui : store.chatwidget.get('chat_ui')\n    };\n})\n\nclass ChatStatus extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.abstractClick = this.abstractClick.bind(this);\n        this.checkSwitchButtom = this.checkSwitchButtom.bind(this);\n    }\n\n    abstractClick(attrs) {\n        if (attrs.onclick) {\n            if (attrs.onclick == 'lhinst.voteAction($(this))') {\n                voteAction({id : this.props.chat.get('id'), hash: this.props.chat.get('hash'), type : attrs['data-id']}).then((response) => {\n                    this.props.updateStatus()\n                })\n            } else if (attrs.onclick == 'notificationsLHC.sendNotification()') {\n                helperFunctions.sendMessageParent('subscribeEvent',[{'pk' : this.props.chat_ui.get('notifications_pk')}]);\n            } else if (attrs.onclick.indexOf('lhinst.transferToHuman') !== -1) {\n                transferToHumanAction({id : this.props.chat.get('id'), hash: this.props.chat.get('hash')}).then((response) => {\n                    this.props.updateStatus()\n                });\n            } else {\n                helperFunctions.emitEvent('StatusClick',[attrs, this.props.dispatch]);\n            }\n        }\n    }\n\n    checkSwitchButtom(){\n        if (this.props.chat_ui.has('switch_to_human') && this.props.vtm && this.props.vtm >= this.props.chat_ui.get('switch_to_human')) {\n            axios.get(window.lhcChat['base_url'] + \"restapi/isonlinechat/\" + this.props.chat.get('id')+ '?exclude_bot=true').then((response) => {\n                if (response.data.isonline){\n                    var transferButton = document.getElementById('transfer-to-human-btn');\n                    if (transferButton !== null) {\n                        transferButton.classList.remove('hide');\n                    }\n                }\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.checkSwitchButtom();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.checkSwitchButtom();\n    }\n\n    render() {\n         return parse(this.props.status, {\n            replace: domNode => {\n                if (domNode.attribs && domNode.attribs.onclick) {\n                    if (domNode.name && (domNode.name == 'i' || domNode.name == 'a')) {\n\n                        var cloneAttr = Object.assign({}, domNode.attribs);\n\n                        if (domNode.attribs.class) {\n                            domNode.attribs.className = domNode.attribs.class;\n                            delete domNode.attribs.class;\n                        }\n\n                        if (domNode.attribs.onclick) {\n                            delete domNode.attribs.onclick;\n                        }\n\n                        let result = <i {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr)} >{domToReact(domNode.children)}</i>;\n\n                        return result;\n                    }\n                }\n            }\n        });\n    }\n}\n\nexport default ChatStatus;\n","import React, { PureComponent } from 'react';\n\nclass ChatIntroStatus extends PureComponent {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <React.Fragment>\n            {this.props.profileBefore !== null && <div dangerouslySetInnerHTML={{__html:this.props.profileBefore}}></div>}\n            <div className={this.props.msg_expand} id=\"messagesBlock\" dangerouslySetInnerHTML={{__html:this.props.messagesBefore}}></div>\n            {!this.props.hideMessageField && <div className=\"d-flex flex-row border-top position-relative message-send-area\">\n                <div className=\"btn-group dropup disable-select pl-2 pt-2\"><i className=\"material-icons settings text-muted\" aria-haspopup=\"true\" aria-expanded=\"false\">&#xf100;</i></div>\n                <div className=\"mx-auto pb-1 w-100\">\n                    <textarea aria-label=\"Type your message here...\" placeholder={this.props.placeholderMessage} id=\"CSChatMessage\" rows=\"1\" className=\"pl-0 no-outline form-control rounded-0 form-control border-left-0 border-right-0 border-0\" />\n                </div>\n                <div className=\"disable-select\">\n                    <div className=\"user-chatwidget-buttons pt-1\" id=\"ChatSendButtonContainer\">\n                        <i className=\"material-icons text-muted settings mr-0\">&#xf113;</i>\n                    </div>\n                </div>\n            </div>}\n        </React.Fragment>;\n    }\n}\n\nexport default ChatIntroStatus;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport parse from 'html-react-parser';\nimport { initChatUI, fetchMessages, addMessage, checkChatStatus, endChat, userTyping, minimizeWidget} from \"../actions/chatActions\"\nimport { STATUS_CLOSED_CHAT, STATUS_BOT_CHAT, STATUS_SUB_SURVEY_SHOW, STATUS_SUB_USER_CLOSED_CHAT } from \"../constants/chat-status\";\nimport ChatMessage from './ChatMessage';\nimport ChatModal from './ChatModal';\nimport ChatFileUploader from './ChatFileUploader';\nimport ChatSync from './ChatSync';\nimport ChatOptions from './ChatOptions';\nimport ChatStatus from './ChatStatus';\nimport ChatIntroStatus from './ChatIntroStatus';\nimport ChatAbort from './ChatAbort';\n\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport { withTranslation } from 'react-i18next';\n\nimport { Suspense, lazy } from 'react';\n\nconst VoiceMessage = React.lazy(() => import('./VoiceMessage'));\nconst MailModal = React.lazy(() => import('./MailModal'));\nconst FontSizeModal = React.lazy(() => import('./FontSizeModal'));\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass OnlineChat extends Component {\n\n    state = {\n        value: '',\n        valueSend: false,\n        showBBCode : null,\n        mailChat : false,\n        dragging : false,\n        enabledEditor : true,\n        showMessages : false,\n        preloadSurvey : false, // Should survey be preloaded\n        gotToSurvey : false,\n        voiceMode : false,\n        showMail : false,\n        changeFontSize : false,\n        errorMode: false,\n        hasNew: false,\n        newId: 0, // From what index there is a new messages\n        scrollButton: false,\n        fontSize: 100,\n        otm: 0 // New operator messages\n    };\n\n    constructor(props) {\n        super(props);\n\n        // Init offline form with all attributes\n        this.props.dispatch(initChatUI({\n            'id': this.props.chatwidget.getIn(['chatData','id']),\n            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n            'theme' : this.props.chatwidget.get('theme')\n        }));\n\n        this.updateMessages();\n        this.updateStatus();\n\n        this.enterKeyDown = this.enterKeyDown.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.endChat = this.endChat.bind(this);\n        this.mailChat = this.mailChat.bind(this);\n        this.changeFont = this.changeFont.bind(this);\n        this.voiceCall = this.voiceCall.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.setStatusText = this.setStatusText.bind(this);\n        this.dragging = this.dragging.bind(this);\n        this.scrollBottom = this.scrollBottom.bind(this);\n        this.focusMessage = this.focusMessage.bind(this);\n        this.setEditorEnabled = this.setEditorEnabled.bind(this);\n        this.sendDelay = this.sendDelay.bind(this);\n        this.unhideDelayed = this.unhideDelayed.bind(this);\n        this.toggleSound = this.toggleSound.bind(this);\n        this.goToSurvey = this.goToSurvey.bind(this);\n        this.startVoiceRecording = this.startVoiceRecording.bind(this);\n        this.cancelVoiceRecording = this.cancelVoiceRecording.bind(this);\n        this.onScrollMessages = this.onScrollMessages.bind(this);\n        this.scrollToMessage = this.scrollToMessage.bind(this);\n        this.changeFontAction = this.changeFontAction.bind(this);\n\n        // Messages Area\n        this.messagesAreaRef = React.createRef();\n        this.textMessageRef = React.createRef();\n\n        this.updateMessages = this.updateMessages.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n        this.abstractAction = this.abstractAction.bind(this);\n        this.updateMetaAutoHide = this.updateMetaAutoHide.bind(this);\n        this.setMetaUpdateState = this.setMetaUpdateState.bind(this);\n        this.keyUp = this.keyUp.bind(this);\n\n        this.delayed = false;\n        this.delayQueue = [];\n        this.intervalPending = null;\n        this.intervalFunction = null;\n        this.unhideDelayedTimer = null;\n        this.pendingMetaUpdate = false;\n        this.timeoutNewMessage = null;\n\n        this.isTyping = false;\n        this.typingStopped = null;\n        this.typingStoppedAction = this.typingStoppedAction.bind(this);\n        this.currentMessageTyping = '';\n    }\n\n    dragging(status) {\n        this.setState({dragging : status})\n    }\n\n    goToSurvey() {\n        this.props.dispatch({\n            'type': 'UI_STATE',\n            'data' : {attr: 'show_survey', 'val': 1}\n        });\n        this.setState({'gotToSurvey' : true});\n    }\n\n    setStatusText(text){\n        this.props.dispatch({\n            'type': 'chat_status_changed',\n            'data' : {text: text}\n        });\n    }\n\n    startVoiceRecording() {\n        this.setState({voiceMode: true});\n    }\n\n    cancelVoiceRecording() {\n        this.setState({voiceMode: false});\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n        helperFunctions.setSessionStorage('_ttxt',event.target.value);\n    }\n\n    onScrollMessages() {\n        if (this.messagesAreaRef.current) {\n            let scrollValue = this.messagesAreaRef.current.scrollHeight - this.messagesAreaRef.current.scrollTop;\n            // Scroll to bottom if from bottom there is already less than 70px\n            if ((scrollValue - this.messagesAreaRef.current.offsetHeight) > 70 ) {\n                if (this.state.scrollButton !== true) {\n                    this.setState({scrollButton: true});\n                }\n            } else if (this.state.scrollButton !== false) {\n                this.setState({scrollButton: false, otm: 0});\n            }\n        }\n    }\n\n    scrollToMessage() {\n\n        if (this.state.hasNew == true) {\n            clearTimeout(this.timeoutNewMessage);\n            this.timeoutNewMessage = setTimeout(() => {this.setState({hasNew: false, newId: 0})},1000);\n        }\n\n        if (this.state.hasNew == true && this.state.otm > 0) {\n            this.setState({otm: 0})\n            try {\n                document.getElementById('scroll-to-message').scrollIntoView();\n            } catch (e) {\n                this.scrollBottom();\n            }\n        } else {\n            this.scrollBottom();\n        }\n    }\n\n    changeFontAction(action){\n        this.setState({\n            fontSize: this.state.fontSize + (action == true ? 5 : -5)\n        });\n        helperFunctions.setLocalStorage('_dfs',this.state.fontSize);\n        this.scrollBottom();\n    }\n\n    componentDidMount() {\n\n        var txtTyping = helperFunctions.getSessionStorage('_ttxt');\n        if (txtTyping !== null) {\n            this.setState({value: txtTyping})\n        }\n\n        var defaultFontSize = helperFunctions.getLocalStorage('_dfs');\n        if (defaultFontSize !== null) {\n            this.setState({fontSize: parseInt(defaultFontSize)})\n        }\n\n        // We want to focus only if widget is open\n        var elm = document.getElementById('CSChatMessage');\n        if (elm !== null && ((this.props.chatwidget.get('shown') === true && this.props.chatwidget.get('mode') == 'widget') || this.props.chatwidget.get('mode') == 'popup')) {\n            elm.focus();\n\n            var elmtmp = document.getElementById('CSChatMessage-tmp');\n            if (elmtmp !== null) {\n                document.body.removeChild(elmtmp);\n            }\n        }\n    }\n\n    focusMessage() {\n        if (this.textMessageRef.current) {\n            this.textMessageRef.current.focus();\n            if (this.state.value.length > 0) {\n                this.textMessageRef.current.selectionStart = this.state.value.length;\n                this.textMessageRef.current.selectionEnd = this.state.value.length;\n            }\n        }\n    }\n\n    setEditorEnabled(status) {\n        this.setState({'enabledEditor' : status});\n    }\n\n    hasClass(el, name) {\n        return new RegExp('(\\\\s|^)'+name+'(\\\\s|$)').test(el.className);\n    }\n\n    addClass (el, name) {\n        if (!this.hasClass(el, name)) { el.className += (el.className ? ' ' : '') +name; }\n    }\n\n    removeClass(el, name) {\n        if (this.hasClass(el, name)) {\n            el.className=el.className.replace(new RegExp('(\\\\s|^)'+name+'(\\\\s|$)'),' ').replace(/^\\s+|\\s+$/g, '');\n        }\n    }\n\n    setMetaUpdateState(state) {\n\n        if (state === false && this.pendingMetaUpdate === true){\n            this.pendingMetaUpdate = false;\n            this.updateMetaAutoHide(true);\n            this.doScrollBottom();\n        }\n\n        if (state === true) {\n            this.pendingMetaUpdate = true;\n            this.updateMetaAutoHide();\n            this.doScrollBottom();\n        }\n\n    }\n\n    updateMetaAutoHide(hideFirst) {\n        var block = document.getElementById('messages-scroll');\n        var x = block.getElementsByClassName(\"meta-auto-hide\");\n        if (x.length > 0) {\n            var i;\n            var lengthHide = hideFirst ? 0 : 1;\n            for (i = 0; i < x.length - lengthHide ; i++) {\n                x[i].style.display = 'none';\n            }\n            var lastChild = block.lastChild;\n\n            // Checking not null not enough, because element can be text type\n            if (lastChild && typeof lastChild.getElementsByClassName !== 'undefined') {\n                x = lastChild.getElementsByClassName(\"meta-auto-hide\");\n                var i;\n                for (i = 0; i < x.length; i++) {\n                    x[i].style.display = '';\n                }\n            }\n        }\n    }\n\n    nextUntil(htmlElement, match, condition = true, any = false) {\n        var nextUntil = [],\n            until = true;\n\n        while (htmlElement = htmlElement.nextElementSibling) {\n            (until && htmlElement && !htmlElement.matches(match) == condition) ? nextUntil.push(htmlElement) : until = any;\n        }\n        return nextUntil;\n    }\n\n    sendDelay(params) {\n        var id = params['id'],\n         duration = params['duration'],\n         delay = params['delay'],\n         untillMessage = params['untill_message'],\n         msg = document.getElementById('msg-'+id);\n\n        if (!msg) {\n            return;\n        }\n\n        if (delay > 0) {\n            this.addClass(msg,'hide');\n        }\n\n        if (untillMessage == true && this.nextUntil(msg,'.message-admin', false, true).length > 0) {\n            return;\n        }\n\n        setTimeout( () => {\n            if (this.delayed == false) {\n                if (untillMessage == true) {\n\n                    // Call previous function if it exists\n                    if (this.intervalFunction !== null) {\n                        this.intervalFunction();\n                    }\n\n                    this.intervalFunction = () => {\n                        if (this.nextUntil(msg,'.message-admin', false, true).length > 0) {\n                            msg.parentNode.removeChild(msg);\n                            this.scrollBottom();\n                            this.intervalFunction = null;\n                            clearInterval(this.intervalPending);\n                        } else {\n                            if (!this.hasClass(msg,'meta-hider'))\n                            {\n                                this.addClass(msg,'meta-hider');\n                                this.addClass(msg,'message-row-typing');\n\n                                this.removeClass(msg,'hide');\n                                this.removeClass(msg,'fade-in-fast');\n\n                                var elementsBody = msg.getElementsByClassName(\"msg-body\");\n\n                                for (var item of elementsBody) {\n                                    this.removeClass(item, 'hide');\n                                }\n\n                                this.scrollBottom();\n                            }\n                        }\n                    }\n\n                    clearInterval(this.intervalPending);\n                    this.intervalPending = setInterval(this.intervalFunction,150);\n                } else {\n                    this.delayed = true;\n\n                    this.addClass(msg,'meta-hider');\n                    this.addClass(msg,'message-row-typing');\n\n                    this.nextUntil(msg,'.meta-hider').forEach((item) => {\n                        this.addClass(item,'hide');\n                    });\n\n                    this.unhideDelayedTimer = setTimeout(() => {\n                        this.unhideDelayed(id);\n                    }, duration * 1000);\n\n                    this.removeClass(msg,'hide');\n                    this.removeClass(msg,'fade-in-fast');\n\n                    var elementsBody = msg.getElementsByClassName(\"msg-body\");\n\n                    for (var item of elementsBody) {\n                        this.removeClass(item, 'hide');\n                    }\n\n                    if (delay > 0) {\n                        this.updateMetaAutoHide();\n                        this.scrollBottom();\n                    }\n                }\n\n            } else {\n                this.addClass(msg,'message-row-typing');\n                this.addClass(msg,'meta-hider');\n                this.delayQueue.push({'id' : id, 'delay' : duration});\n            }\n        },delay*1000);\n    }\n\n    unhideDelayed(id) {\n\n        var msg = document.getElementById('msg-'+id);\n\n        if (!msg) {\n            return;\n        }\n\n        this.nextUntil(msg,'.meta-hider').forEach((item) => {\n            this.removeClass(item,'hide');\n        });\n\n        msg.parentNode.removeChild(msg);\n\n        this.updateMetaAutoHide();\n        this.scrollBottom();\n\n        if (this.delayQueue.length > 0) {\n            var data = this.delayQueue.shift();\n\n            setTimeout(() => {\n                this.unhideDelayed(data.id);\n            }, data.delay * 1000);\n\n            var messageBlock = document.getElementById('msg-'+data.id);\n\n            if (messageBlock !== null) {\n                this.removeClass(messageBlock,'hide');\n                this.removeClass(messageBlock,'fade-in-fast');\n\n                var elementsBody = messageBlock.getElementsByClassName(\"msg-body\");\n\n                for (var item of elementsBody) {\n                    this.removeClass(item, 'hide');\n                }\n            }\n\n        } else {\n            this.delayed = false;\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalPending);\n        clearInterval(this.typingStopped);\n        clearTimeout(this.unhideDelayedTimer);\n        clearTimeout(this.timeoutNewMessage);\n    }\n\n    // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        // Are we adding new item\n        if (prevProps.chatwidget.getIn(['chatLiveData','messages']).size != this.props.chatwidget.getIn(['chatLiveData','messages']).size) {\n\n            let setScroll = false;\n            let setScrollBottom = true;\n            let scrollValue = 0;\n\n            if (this.messagesAreaRef.current) {\n                scrollValue = this.messagesAreaRef.current.scrollHeight - this.messagesAreaRef.current.scrollTop;\n\n                // Scroll to bottom if from bottom there is already less than 70px\n                if ((scrollValue - this.messagesAreaRef.current.offsetHeight) < 70) {\n                    scrollValue = 0;\n                } else {\n                    setScrollBottom = false\n                }\n\n                setScroll = true;\n            }\n\n            let hasNewMessages = this.state.hasNew;\n            let oldId = hasNewMessages == true ? this.state.newId : 0;\n            let otm = hasNewMessages == true ? this.state.otm : 0;\n\n            if (prevProps.chatwidget.getIn(['chatLiveData','messages']).size != 0 && this.props.chatwidget.getIn(['chatLiveData','uw']) === false) {\n                let widgetOpen = ((this.props.chatwidget.get('shown') && this.props.chatwidget.get('mode') == 'widget') || (this.props.chatwidget.get('mode') != 'widget' && document.hasFocus()));\n                if (hasNewMessages == false) {\n                    hasNewMessages = widgetOpen == false || window.lhcChat['is_focused'] == false || setScrollBottom == false;\n                    oldId = hasNewMessages == true ? prevProps.chatwidget.getIn(['chatLiveData','messages']).size : 0;\n                    otm = this.props.chatwidget.getIn(['chatLiveData','otm']);\n                } else {\n                    otm += this.props.chatwidget.getIn(['chatLiveData','otm']);\n                }\n\n                // Get last message\n                let msg = this.props.chatwidget.hasIn(['chat_ui','msg_snippet']) && this.props.chatwidget.getIn(['chatLiveData','messages',-1,'msg']);\n\n                helperFunctions.emitEvent('play_sound', [{msop: this.props.chatwidget.getIn(['chatLiveData','msop']), msg_body: msg, 'otm': otm, 'type' : 'new_message', 'sound_on' : (this.props.chatwidget.getIn(['usersettings','soundOn']) === true), 'widget_open' : widgetOpen}]);\n            } else {\n                hasNewMessages = false;\n                oldId = 0;\n                otm = 0;\n            }\n\n            this.setState({valueSend: false, hasNew: hasNewMessages, newId: oldId, otm: otm, scrollButton: !setScrollBottom});\n\n            if (setScroll == true) {\n                return (\n                    (scrollValue)\n                );\n            }\n\n        // Are we restoring widget visibility\n        } else if (prevProps.chatwidget.get('shown') === false && this.props.chatwidget.get('shown') === true) {\n            return 0;\n        } else if (this.props.chatwidget.getIn(['chatLiveData','error']) && (\n                (this.props.chatwidget.getIn(['chatLiveData','lmsg']) && (this.state.errorMode == false || this.props.chatwidget.getIn(['chatLiveData','lmsg']) != prevProps.chatwidget.getIn(['chatLiveData','lmsg']))) ||\n                (!this.props.chatwidget.getIn(['chatLiveData','lmsg']) && this.state.errorMode == false)))\n        {\n            this.setState({errorMode: true, valueSend: false, value: this.props.chatwidget.getIn(['chatLiveData','lmsg'])});\n        } else if (!this.props.chatwidget.getIn(['chatLiveData','error']) && prevProps.chatwidget.getIn(['chatLiveData','error'])) {\n            this.setState({errorMode: false, valueSend: false, value: ''});\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        // Update untill we are sure that messages can be shown\n        if (this.state.showMessages === false || prevProps.chatwidget.getIn(['chatLiveData','status']) != this.props.chatwidget.getIn(['chatLiveData','status'])) {\n            if (this.props.chatwidget.get('newChat') == true && this.props.chatwidget.getIn(['chatLiveData','messages']).size == 1) {\n                this.scrollBottom(false, true);\n            } else {\n                this.scrollBottom(false, false);\n            }\n        }\n\n        var smartScroll = false;\n\n        if (\n            (prevState.enabledEditor === false && prevState.enabledEditor != this.state.enabledEditor) ||\n            (this.props.chatwidget.get('msgLoaded') !== prevProps.chatwidget.get('msgLoaded') && (this.props.chatwidget.get('newChat') == false || (smartScroll = true) == true))\n        ) {\n            if (smartScroll == false) {\n                this.scrollBottom(false, false);\n            } else {\n                this.scrollBottom(false, true);\n            }\n\n            if (!(this.props.chatwidget.getIn(['chat_ui','auto_start']) === true && this.props.chatwidget.get('mode') == 'embed') || (this.props.chatwidget.getIn(['chat_ui','auto_start']) === false && this.props.chatwidget.get('mode') == 'embed') || (prevState.enabledEditor === false && prevState.enabledEditor != this.state.enabledEditor)) {\n                this.focusMessage();\n                // Sometimes component is not rendered itself. We want to be 100% sure it will always have a focus.\n                setTimeout(() => {\n                    this.focusMessage();\n                },500);\n            }\n        }\n\n        if (snapshot !== null) {\n            if (this.messagesAreaRef.current) {\n                var msgScroller = document.getElementById('messages-scroll');\n                var messageElement = document.getElementById('msg-'+this.props.chatwidget.getIn(['chatLiveData','lfmsgid']));\n                if (msgScroller && messageElement && (msgScroller.scrollHeight - msgScroller.offsetHeight) > messageElement.offsetTop) {\n                    this.setState({scrollButton: true});\n                    this.messagesAreaRef.current.scrollTop = messageElement.offsetTop;\n                } else {\n                    this.messagesAreaRef.current.scrollTop = this.messagesAreaRef.current.scrollHeight - snapshot;\n                }\n            }\n        }\n\n        if (this.props.chatwidget.getIn(['chat_ui_state','confirm_close']) == 1 && this.state.preloadSurvey === false) {\n            this.setState({'preloadSurvey':true});\n        }\n\n        // Auto focus if it's show operation\n        if (prevProps.chatwidget.get('shown') === false && this.props.chatwidget.get('shown') === true && this.props.chatwidget.get('mode') == 'widget' && this.textMessageRef.current) {\n            this.textMessageRef.current.focus();\n        }\n\n        // We show start form instantly if it's enabled\n        if (this.props.chatwidget.getIn(['chat_ui','start_on_close']) === true && this.props.chatwidget.getIn(['chatLiveData','closed']) === true && (typeof prevProps.chatwidget.getIn(['chatLiveData','closed']) === 'undefined' || prevProps.chatwidget.hasIn(['chatLiveData','closed']) === false || prevProps.chatwidget.getIn(['chatLiveData','closed']) === false)) {\n            if (!this.props.chatwidget.getIn(['chat_ui','survey_id'])) {\n                this.props.endChat({\"show_start\": this.props.chatwidget.get('shown')});\n            }\n        }\n\n        if (this.props.chatwidget.getIn(['chatLiveData','closed']) === true && this.props.chatwidget.getIn(['chatLiveData','status_sub']) === 0 &&  prevProps.chatwidget.getIn(['chatLiveData','status_sub']) === 5) {\n            this.props.dispatch(initChatUI({\n                'id': this.props.chatwidget.getIn(['chatData','id']),\n                'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n                'theme' :  this.props.chatwidget.get('theme')\n            }));\n        }\n\n        // At the moment not used because logic migrated to one time call componentDidMount\n        if (this.props.chatwidget.get('shown') === true && (this.props.chatwidget.get('mode') == 'widget' || this.props.chatwidget.get('mode') == 'embed') && this.props.chatwidget.get('initLoaded') === true && this.props.chatwidget.get('msgLoaded') === true && (prevProps.chatwidget.get('msgLoaded') == false || prevProps.chatwidget.get('initLoaded') == false)) {\n\n            if (this.props.chatwidget.get('mode') == 'widget') {\n                this.textMessageRef.current && this.textMessageRef.current.focus();\n            }\n\n            var elm = document.getElementById('CSChatMessage-tmp');\n            if (elm !== null) {\n                document.body.removeChild(elm);\n            }\n        }\n    }\n\n    doScrollBottom(smartScroll) {\n        if (this.messagesAreaRef.current) {\n            var messageElement;\n            if (smartScroll && (messageElement = document.getElementById('msg-'+this.props.chatwidget.getIn(['chatLiveData','lfmsgid']))) !== null) {\n                this.messagesAreaRef.current.scrollTop = messageElement.offsetTop;\n            } else {\n                this.messagesAreaRef.current.scrollTop = this.messagesAreaRef.current.scrollHeight + 1000;\n            }\n        }\n    }\n\n    scrollBottom(onlyIfAtBottom, smartScroll) {\n\n        if (this.messagesAreaRef.current && (!onlyIfAtBottom || !this.state.scrollButton)) {\n            this.doScrollBottom(smartScroll);\n            setTimeout(() => {\n                this.doScrollBottom(smartScroll);\n                if (this.state.showMessages === false) {\n                    this.setState({'showMessages':true});\n                }\n            },450);\n        }\n    }\n\n    abstractAction(action, params) {\n         helperFunctions.emitEvent(action, params);\n    }\n\n    updateMessages() {\n        var params = {\n            'chat_id': this.props.chatwidget.getIn(['chatData','id']),\n            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n            'lmgsid' : this.props.chatwidget.getIn(['chatLiveData','lmsgid']),\n            'theme' : this.props.chatwidget.get('theme'),\n            'new_chat' : this.props.chatwidget.get('newChat')\n        };\n\n        // If it's new chat check do we have last message from previous chat if so send it also\n        if (params.new_chat && params.lmgsid === 0) {\n            params['old_msg_id'] = this.props.chatwidget.getIn(['chatData','lmsg_id'])\n        }\n\n        this.props.dispatch(fetchMessages(params));\n    }\n\n    updateStatus() {\n        this.props.dispatch(checkChatStatus({\n            'chat_id': this.props.chatwidget.getIn(['chatData','id']),\n            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode')\n        }));\n    }\n\n    sendMessage() {\n\n        helperFunctions.setSessionStorage('_ttxt','');\n\n        this.props.dispatch(addMessage({\n            'id': this.props.chatwidget.getIn(['chatData','id']),\n            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n            'msg' : this.state.value,\n            'mn' : this.props.chatwidget.hasIn(['chat_ui','mn']),\n            'theme' : this.props.chatwidget.get('theme'),\n            'lmgsid' : this.props.chatwidget.getIn(['chatLiveData','lmsgid'])\n        }));\n\n        this.setState({value: '',valueSend: true, errorMode : false});\n\n        this.currentMessageTyping = '';\n        this.focusMessage();\n        this.doScrollBottom();\n    }\n\n    enterKeyDown(e) {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            this.sendMessage();\n            e.preventDefault();\n        }\n    }\n\n    keyUp(e) {\n        if (e.key !== 'Enter' && !e.shiftKey) {\n            if (this.isTyping === false) {\n                this.isTyping = true;\n                this.props.dispatch(userTyping('true',this.state.value));\n            } else {\n                clearTimeout(this.typingStopped);\n                this.typingStopped = setTimeout(this.typingStoppedAction, 6000);\n                if (this.currentMessageTyping != this.state.value ) {\n                    if (Math.abs(this.currentMessageTyping.length - this.state.value.length) > 6 || this.props.chatwidget.get('overrides').contains('typing')) {\n                        this.currentMessageTyping = this.state.value;\n                        this.props.dispatch(userTyping('true',this.state.value));\n                    }\n                }\n            }\n        }\n    }\n\n    typingStoppedAction() {\n        if (this.isTyping == true) {\n            this.isTyping = false;\n            this.props.dispatch(userTyping('false'));\n        }\n    }\n\n    endChat() {\n        this.props.endChat();\n    }\n\n    toggleModal() {\n        this.setState({\n            showBBCode: !this.state.showBBCode\n        });\n\n        if (this.state.showBBCode) {\n            this.focusMessage()\n        }\n    }\n\n    mailChat() {\n        this.setState({\n            showMail: !this.state.showMail\n        });\n    }\n\n    changeFont() {\n        this.setState({\n            changeFontSize: !this.state.changeFontSize\n        });\n    }\n\n    voiceCall() {\n\n        const dualScreenLeft = window.screenLeft !==  undefined ? window.screenLeft : window.screenX;\n        const dualScreenTop = window.screenTop !==  undefined   ? window.screenTop  : window.screenY;\n\n        const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n        const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n\n        const systemZoom = width / window.screen.availWidth;\n        const left = (width - parseInt(800)) / 2 / systemZoom + dualScreenLeft;\n        const top = (height - parseInt(600)) / 2 / systemZoom + dualScreenTop;\n\n        var paramsWindow = \"scrollbars=yes,menubar=1,resizable=1,width=800,height=600,top=\" + top + \",left=\" + left;\n        var newWin = window.open(\"\", helperFunctions.prefix + '_voice_popup_v2', paramsWindow);\n        var needWindow = false;\n        var windowCreated = false;\n\n        // First try to find any existing window\n        try {\n            // It has to be new window or popup was blocked\n            if (!newWin || newWin.closed || typeof newWin.closed=='undefined' || newWin.location.href === \"about:blank\") {\n                newWin = window.open(this.props.chatwidget.get('base_url') + \"voicevideo/call/\" + this.props.chatwidget.getIn(['chatData', 'id']) + '/' + this.props.chatwidget.getIn(['chatData', 'hash']), helperFunctions.prefix + '_voice_popup_v2', paramsWindow);\n                windowCreated = true;\n            } else {\n                needWindow = true;\n            }\n        } catch (e) { // We get cross-origin error only if window exist and it's location is other one than about:blank\n            needWindow = true;\n        }\n\n        // Now if visitor has blocked popup change chat status link and just allow browser handle the rest.\n        if (!newWin || newWin.closed || typeof newWin.closed=='undefined') {\n            try {\n                // Change href to open window\n            } catch (e) {\n                alert('You have disabled popups!');\n            }\n        } else if (windowCreated == true) {\n            /*typeof chatEvents !== 'undefined' && chatEvents.sendChildEvent('endedChat', [{'sender': 'endButton'}]);\n            typeof paramsPopup !== 'undefined' && paramsPopup.event !== 'undefined' && paramsPopup.event.preventDefault();*/\n        } else if (needWindow === true) {\n            newWin.focus();\n        }\n\n    }\n\n    toggleSound() {\n        this.props.dispatch({type : 'toggleSound', data: !this.props.chatwidget.getIn(['usersettings','soundOn'])});\n        helperFunctions.sendMessageParent('toggleSound', [{'sender' : 'toolbarButton'}]);\n    }\n\n    // http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\n    insertText = (text) => {\n        var caretPos = this.textMessageRef.current.selectionStart;\n        this.setState({value: (this.state.value.substring(0, caretPos) + text + this.state.value.substring(caretPos))});\n    }\n\n    render() {\n        const { t } = this.props;\n\n        if (this.props.chatwidget.get('initLoaded') === false || this.props.chatwidget.get('msgLoaded') === false) {\n\n                var msg_expand = \"flex-grow-1 overflow-scroll position-relative\";\n\n                if (this.props.chatwidget.hasIn(['chat_ui','msg_expand'])) {\n                    msg_expand = \"overflow-scroll position-relative\";\n                }\n\n                return <ChatIntroStatus profileBefore={this.props.profileBefore} msg_expand={msg_expand} messagesBefore={this.props.messagesBefore} placeholderMessage={this.props.chatwidget.hasIn(['chat_ui','placeholder_message']) ? this.props.chatwidget.getIn(['chat_ui','placeholder_message']) : t('chat.type_here')} />;\n        }\n        \n        if (this.props.chatwidget.hasIn(['chatLiveData','ru']) && this.props.chatwidget.getIn(['chatLiveData','ru'])) {\n\n            location = this.props.chatwidget.get('base_url') + this.props.chatwidget.getIn(['chatLiveData','ru']);\n\n            return (\n                <React.Fragment>\n                    <iframe allowtransparency=\"true\" src={location} frameBorder=\"0\" className=\"flex-grow-1 position-relative iframe-modal\"/>\n                </React.Fragment>\n            )\n\n        } else {\n\n            if (this.props.chatwidget.get('chatLiveData').has('messages')) {\n                var messages = this.props.chatwidget.getIn(['chatLiveData','messages']).map((msg, index) =><ChatMessage profilePic={this.props.chatwidget.get('profile_pic')} newTitle={this.props.chatwidget.getIn(['chat_ui','cnew_msgh']) || t('button.new')} newId={this.state.newId} hasNew={this.state.hasNew} voiceCall={this.voiceCall} endChat={this.props.endChat} setMetaUpdateState={this.setMetaUpdateState} sendDelay={this.sendDelay} setEditorEnabled={this.setEditorEnabled} abstractAction={this.abstractAction} updateStatus={this.updateStatus} focusMessage={this.focusMessage} updateMessages={this.updateMessages} scrollBottom={this.scrollBottom} id={index} key={'msg_'+index} msg={msg} />);\n            } else {\n                var messages = \"\";\n            }\n\n            var placeholder = '';\n            if (this.state.dragging === true) {\n                placeholder = t('chat.drop_files');\n            } else if (this.props.chatwidget.getIn(['chatLiveData','closed'])) {\n                placeholder = t('chat.chat_closed');\n            } else {\n                placeholder = this.props.chatwidget.hasIn(['chat_ui','placeholder_message']) ? this.props.chatwidget.getIn(['chat_ui','placeholder_message']) : t('chat.type_here');\n            }\n\n            var msg_expand = \"flex-grow-1 overflow-scroll position-relative\";\n            var bottom_messages = \"bottom-message px-1\";\n\n            if (this.props.chatwidget.hasIn(['chat_ui','msg_expand']) && this.props.chatwidget.get('mode') == 'embed') {\n                msg_expand = \"overflow-scroll position-relative\";\n                bottom_messages += \" position-relative\";\n            }\n\n            var message_send_style = \"mx-auto w-100\";\n\n            if (this.props.chatwidget.getIn(['chatLiveData','closed']) == true) {\n                message_send_style += (this.props.chatwidget.get('mode') == 'embed' ? ' pr-2' : ' pr-1');\n            }\n\n            /**\n             * Survey handling logic\n             * */\n            var showChat = true;\n            var preloadSurvey = false;\n            var forceSurvey = false;\n\n            var location = \"\";\n            var classSurvey = \"flex-grow-1 position-relative iframe-modal content-loader\";\n\n            var validSurveyState = (this.props.chatwidget.hasIn(['chatLiveData','status_sub']) &&\n                    (\n                        this.props.chatwidget.getIn(['chatLiveData','status_sub']) == STATUS_SUB_SURVEY_SHOW\n                    ||\n                        (\n                            this.props.chatwidget.getIn(['chatLiveData','status_sub']) == STATUS_SUB_USER_CLOSED_CHAT &&\n                            (\n                                this.props.chatwidget.getIn(['chatLiveData','uid']) > 0 || this.props.chatwidget.getIn(['chatLiveData','status']) === STATUS_BOT_CHAT || this.props.chatwidget.getIn(['chatLiveData','status']) == STATUS_CLOSED_CHAT\n                            )\n                        )\n                    )\n                )\n                ||\n                (this.props.chatwidget.getIn(['chatLiveData','status']) == STATUS_CLOSED_CHAT && this.props.chatwidget.getIn(['chatLiveData','uid']) > 0) ||\n                this.state.gotToSurvey === true;\n\n            if ((this.props.chatwidget.hasIn(['chatLiveData','status_sub']) && this.props.chatwidget.getIn(['chatLiveData','status_sub']) == STATUS_SUB_SURVEY_SHOW) || (\n                this.props.chatwidget.getIn(['chatLiveData','status']) == STATUS_CLOSED_CHAT &&\n                this.props.chatwidget.getIn(['chatLiveData','status_sub']) != STATUS_SUB_USER_CLOSED_CHAT\n            )) {\n                forceSurvey = true;\n            }\n\n            if ((this.state.preloadSurvey === true || validSurveyState) && this.props.chatwidget.hasIn(['chat_ui','survey_id'])) {\n                location = this.props.chatwidget.get('base_url') + \"survey/fillwidget/(chatid)/\" + this.props.chatwidget.getIn(['chatData', 'id']) + \"/(hash)/\" + this.props.chatwidget.getIn(['chatData', 'hash']);\n\n                if (this.props.chatwidget.get('theme')) {\n                    location = location + '/(theme)/' + this.props.chatwidget.get('theme');\n                }\n\n                location = location + '/(survey)/' + this.props.chatwidget.getIn(['chat_ui', 'survey_id']) + (forceSurvey === true ? '/(force)/true' : '');\n                \n                if (this.props.chatwidget.hasIn(['chat_ui', 'survey_url'])) {\n                    location = this.props.chatwidget.getIn(['chat_ui', 'survey_url']).replace('{chat_id}',this.props.chatwidget.getIn(['chatData', 'id'])).replace('{chat_hash}',this.props.chatwidget.getIn(['chatData', 'hash'])) + (forceSurvey === true ? '?force=true' : '');\n                }\n\n                preloadSurvey = true;\n\n                showChat = false;\n\n                if (\n                    (validSurveyState === false) ||\n                    (this.props.chatwidget.hasIn(['chat_ui','survey_button']) && this.props.chatwidget.getIn(['chat_ui_state','show_survey']) === 0 &&\n                        this.props.chatwidget.getIn(['chatLiveData','status']) == STATUS_CLOSED_CHAT &&\n                        this.props.chatwidget.getIn(['chatLiveData','status_sub']) != STATUS_SUB_SURVEY_SHOW &&\n                        this.props.chatwidget.getIn(['chatLiveData','status_sub']) != STATUS_SUB_USER_CLOSED_CHAT\n                    ) ||\n                    (this.props.chatwidget.getIn(['chat_ui_state','confirm_close']) == 1)\n                ) {\n                    showChat = true;\n                    classSurvey = \" d-none\";\n                }\n            }\n\n            const endTitle = this.props.chatwidget.getIn(['chat_ui','end_chat_text']) || t('button.end_chat');\n\n            const fontSizeStyle = {fontSize: (this.props.chatwidget.hasIn(['chat_ui','font_size']) ? this.state.fontSize : '100') + '%'};\n\n            return (\n                <React.Fragment>\n\n                    {this.props.chatwidget.getIn(['chatLiveData','abort']) && <ChatAbort closeText={t('button.close')} close={(e) => this.props.dispatch(minimizeWidget(true))} text={this.props.chatwidget.getIn(['chatLiveData','abort'])} />}\n\n                    {preloadSurvey && <iframe allowtransparency=\"true\" src={location} frameBorder=\"0\" className={classSurvey} />}\n\n                    {(showChat || preloadSurvey) && <ChatSync hasSurvey={preloadSurvey} syncInterval={this.props.chatwidget.getIn(['chat_ui','sync_interval'])} updateStatus={this.updateStatus} updateMessages={this.updateMessages} initClose={this.props.chatwidget.get('initClose')} dispatch={this.props.dispatch} status_sub={this.props.chatwidget.getIn(['chatLiveData','status_sub'])} status={this.props.chatwidget.getIn(['chatLiveData','status'])} theme={this.props.chatwidget.get('theme')} lmgsid={this.props.chatwidget.getIn(['chatLiveData','lmsgid'])} hash={this.props.chatwidget.getIn(['chatData','hash'])} chat_id={this.props.chatwidget.getIn(['chatData','id'])} />}\n\n                    {showChat && <React.Fragment>\n\n                    {this.props.chatwidget.getIn(['chat_ui_state','confirm_close']) == 1 && <ChatModal confirmClose={this.props.endChat} cancelClose={this.props.cancelClose} toggle={this.props.cancelClose} dataUrl={\"/chat/confirmleave/\"+this.props.chatwidget.getIn(['chatData','id'])+\"/\"+this.props.chatwidget.getIn(['chatData','hash'])} />}\n\n                    {this.state.showBBCode && <ChatModal showModal={this.state.showBBCode} insertText={this.insertText} toggle={this.toggleModal} dataUrl={\"/chat/bbcodeinsert?react=1\"} />}\n\n                    {this.state.showMail && <Suspense fallback=\"...\"><MailModal showModal={this.state.showMail} changeFont={this.changeFont} toggle={this.mailChat} chatHash={this.props.chatwidget.getIn(['chatData','hash'])} chatId={this.props.chatwidget.getIn(['chatData','id'])} /></Suspense>}\n\n                    {this.state.changeFontSize && <Suspense fallback=\"...\"><FontSizeModal showModal={this.state.changeFontSize} toggle={this.changeFont} changeFont={this.changeFontAction} /></Suspense>}\n\n                    {this.props.chatwidget.get('mode') == 'embed' && this.props.chatwidget.hasIn(['chat_ui','embed_cls']) && this.props.chatwidget.getIn(['chat_ui','embed_cls']) == 1 && <div className=\"close-modal-btn position-absolute\">\n                        {this.props.chatwidget.hasIn(['chat_ui','close_btn']) && <a onClick={this.endChat} title={endTitle} ><i className=\"material-icons settings text-muted\">&#xf10a;</i><span className=\"embed-close-title\">{endTitle}</span></a>}\n                    </div>}\n\n                    {this.props.chatwidget.hasIn(['chatStatusData','result']) && !this.props.chatwidget.hasIn(['chat_ui','hide_status']) && this.props.chatwidget.getIn(['chatStatusData','result']) && <div id=\"chat-status-container\" className={\"p-2 border-bottom live-status-\"+this.props.chatwidget.getIn(['chatLiveData','status'])}><ChatStatus updateStatus={this.updateStatus} vtm={this.props.chatwidget.hasIn(['chat_ui','switch_to_human']) && this.props.chatwidget.getIn(['chatLiveData','status']) == STATUS_BOT_CHAT ? this.props.chatwidget.getIn(['chatLiveData','vtm']) : 0} status={this.props.chatwidget.getIn(['chatStatusData','result'])} /></div>}\n\n                    <div className={msg_expand} id=\"messagesBlock\" onScroll={this.onScrollMessages}>\n                        <div className={bottom_messages} id=\"messages-scroll\" style={fontSizeStyle} ref={this.messagesAreaRef}>\n                            {this.props.chatwidget.hasIn(['chat_ui','prev_chat']) && <div dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','prev_chat'])}}></div>}\n                            {messages}\n                        </div>\n                        {this.state.scrollButton && <div className=\"position-absolute btn-bottom-scroll fade-in\"><button type=\"button\" onClick={this.scrollToMessage} className=\"btn btn-sm btn-secondary\">{(this.state.hasNew && this.state.otm > 0 && <div><i className=\"material-icons\">&#xf11a;</i>{this.state.otm} {(this.state.otm == 1 ? (this.props.chatwidget.getIn(['chat_ui','cnew_msg']) || t('button.new_msg')) : (this.props.chatwidget.getIn(['chat_ui','cnew_msgm']) || t('button.new_msgm')))}</div>) || (this.props.chatwidget.getIn(['chat_ui','cscroll_btn']) || t('button.scroll_bottom'))}</button></div>}\n                    </div>\n\n                    <div className={(this.props.chatwidget.get('msgLoaded') === false || this.state.enabledEditor === false ? 'd-none ' : 'd-flex ') + \"flex-row border-top position-relative message-send-area\"} >\n                        {(this.props.chatwidget.getIn(['chatLiveData','ott']) || (this.props.chatwidget.getIn(['chatLiveData','error']) && this.props.chatwidget.getIn(['chatLiveData','error']) != 'SEND_CONNECTION') || this.props.chatwidget.get('network_down')) && <div id=\"id-operator-typing\" className=\"bg-white pl-1\">{this.props.chatwidget.getIn(['chatLiveData','error']) ? (this.props.chatwidget.getIn(['chatLiveData','error']).indexOf('SEND_') === -1 ? this.props.chatwidget.getIn(['chatLiveData','error']) : t('online_chat.'+this.props.chatwidget.getIn(['chatLiveData','error']).toLowerCase())) : (this.props.chatwidget.get('network_down') ? t('online_chat.send_connection') : this.props.chatwidget.getIn(['chatLiveData','ott']))}</div>}\n\n                        {this.props.chatwidget.get('mode') == 'embed' && this.props.chatwidget.hasIn(['chat_ui','embed_cls']) && this.props.chatwidget.getIn(['chat_ui','embed_cls']) == 2 && <div className=\"inline-cls-btn pt-1 pl-2\">\n                            {this.props.chatwidget.hasIn(['chat_ui','close_btn']) && <a onClick={this.endChat} title={endTitle} ><i className=\"material-icons settings text-muted mr-0\">&#xf10a;</i></a>}\n                        </div>}\n\n                        <ChatOptions elementId=\"chat-dropdown-options\">\n                            <div className=\"btn-group dropup disable-select pl-1 pt-2\">\n                                <i className=\"material-icons settings text-muted\" id=\"chat-dropdown-options\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">&#xf100;</i>\n                                <div className={\"dropdown-menu shadow bg-white rounded lhc-dropdown-menu ml-1 \"+(window.lhcChat['staticJS']['dir'] == 'rtl' ? \"dropdown-menu-right\" : \"\")}>\n                                    <div className=\"d-flex flex-row pl-1\">\n                                        <a onClick={this.toggleSound} title={t('chat.option_sound')}><i className=\"material-icons chat-setting-item text-muted\">{this.props.chatwidget.getIn(['usersettings','soundOn']) === true ? <React.Fragment>&#xf102;</React.Fragment> : <React.Fragment>&#xf101;</React.Fragment>}</i></a>\n                                        {this.props.chatwidget.hasIn(['chat_ui','print']) && <a target=\"_blank\" href={this.props.chatwidget.get('base_url') + \"chat/printchat/\" +this.props.chatwidget.getIn(['chatData','id']) + \"/\" + this.props.chatwidget.getIn(['chatData','hash'])} title={t('button.print')}><i className=\"material-icons chat-setting-item text-muted\">&#xf10c;</i></a>}\n                                        {!this.props.chatwidget.getIn(['chatLiveData','closed']) && this.props.chatwidget.hasIn(['chat_ui','file']) && <ChatFileUploader fileOptions={this.props.chatwidget.getIn(['chat_ui','file_options'])} onDrag={this.dragging} dropArea={this.textMessageRef} onCompletion={this.updateMessages} progress={this.setStatusText} base_url={this.props.chatwidget.get('base_url')} chat_id={this.props.chatwidget.getIn(['chatData','id'])} hash={this.props.chatwidget.getIn(['chatData','hash'])} link={true}/>}\n                                        {!this.props.chatwidget.getIn(['chatLiveData','closed']) && this.props.chatwidget.getIn(['chatLiveData','status']) == 1 && this.props.chatwidget.hasIn(['chat_ui','voice']) && <a onClick={this.voiceCall} title={t('button.voice')}><i className=\"material-icons chat-setting-item text-muted\">&#xf117;</i></a>}\n                                        {!this.props.chatwidget.getIn(['chatLiveData','closed']) && !this.props.chatwidget.hasIn(['chat_ui','bbc_btnh']) && <a onClick={this.toggleModal} title={t('button.bb_code')}><i className=\"material-icons chat-setting-item text-muted\">&#xf104;</i></a>}\n                                        {this.props.chatwidget.hasIn(['chat_ui','mail']) && <a onClick={this.mailChat} title={t('button.mail')} ><i className=\"material-icons chat-setting-item text-muted\">&#xf11a;</i></a>}\n                                        {this.props.chatwidget.hasIn(['chat_ui','font_size']) && <a onClick={(event) => this.changeFont(event)}><i className=\"material-icons chat-setting-item text-muted\">&#xf11d;</i></a>}\n                                        {this.props.chatwidget.hasIn(['chat_ui','close_btn']) && <a onClick={this.endChat} title={endTitle} ><i className=\"material-icons chat-setting-item text-muted\">&#xf10a;</i></a>}\n                                    </div>\n                                </div>\n                            </div>\n                        </ChatOptions>\n\n                        <div className={message_send_style}>\n                            {this.props.chatwidget.getIn(['chatLiveData','closed']) && this.props.chatwidget.hasIn(['chat_ui','survey_id']) && <button onClick={this.goToSurvey} className=\"w-100 btn btn-success\">{t('online_chat.go_to_survey')}</button>}\n                            {(!this.props.chatwidget.getIn(['chatLiveData','closed']) || !this.props.chatwidget.hasIn(['chat_ui','survey_id'])) && <textarea onTouchStart={this.scrollBottom} maxLength={this.props.chatwidget.getIn(['chat_ui','max_length'])} onKeyUp={this.keyUp} readOnly={this.props.chatwidget.getIn(['chatLiveData','closed']) || this.props.chatwidget.get('network_down')} id=\"CSChatMessage\" placeholder={placeholder} onKeyDown={this.enterKeyDown} value={!this.props.chatwidget.getIn(['chatLiveData','closed']) ? this.state.value : ''} onChange={this.handleChange} ref={this.textMessageRef} rows=\"1\" className={\"pl-0 no-outline form-control rounded-0 form-control border-left-0 border-right-0 border-0 \"+((this.props.chatwidget.get('shown') === true && this.textMessageRef.current && (/\\r|\\n/.exec(this.state.value) || (this.state.value.length > this.textMessageRef.current.offsetWidth/8.6))) ? 'msg-two-line' : 'msg-one-line')} />}\n                        </div>\n\n                        {!this.props.chatwidget.getIn(['chatLiveData','closed']) && !this.props.chatwidget.get('network_down') && <div className=\"disable-select\">\n\n                                <div className=\"user-chatwidget-buttons pt-1 pr-1\" id=\"ChatSendButtonContainer\">\n\n                                    {this.state.voiceMode === true && <Suspense fallback=\"...\"><VoiceMessage onCompletion={this.updateMessages} progress={this.setStatusText} base_url={this.props.chatwidget.get('base_url')} chat_id={this.props.chatwidget.getIn(['chatData','id'])} hash={this.props.chatwidget.getIn(['chatData','hash'])} maxSeconds=\"30\" cancel={this.cancelVoiceRecording} /></Suspense>}\n\n                                    {!this.state.valueSend && this.props.chatwidget.hasIn(['chat_ui','voice_message']) && typeof window.Audio !== \"undefined\" && this.state.value.length == 0 && this.state.voiceMode === false && <a onClick={this.startVoiceRecording} title={t('button.record_voice')}>\n                                       <i className=\"material-icons text-muted settings mr-0\">&#xf10b;</i>\n                                    </a>}\n\n                                    {!this.state.valueSend && (!this.props.chatwidget.hasIn(['chat_ui','voice_message']) || !(typeof window.Audio !== \"undefined\") || (this.state.value.length > 0 && this.state.voiceMode === false)) && <a onClick={this.sendMessage} title={t('button.send')}>\n                                       <i className=\"material-icons text-muted settings mr-0\">&#xf107;</i>\n                                    </a>}\n\n                                    {this.state.valueSend && <i className=\"material-icons text-muted settings mr-0\">&#xf113;</i>}\n\n                                </div>\n\n                        </div>}\n\n\n\n                    </div>\n                    </React.Fragment>}\n\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default withTranslation()(OnlineChat);\n","\"use strict\";function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}const defaults={threshold:50,passive:!1};class Xwiper{constructor(a,b={}){this.options=_objectSpread(_objectSpread({},defaults),b),this.element=null,this.touchStartX=0,this.touchStartY=0,this.touchEndX=0,this.touchEndY=0,this.onSwipeLeftAgent=null,this.onSwipeRightAgent=null,this.onSwipeUpAgent=null,this.onSwipeDownAgent=null,this.onTapAgent=null,this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onSwipeLeft=this.onSwipeLeft.bind(this),this.onSwipeRight=this.onSwipeRight.bind(this),this.onSwipeUp=this.onSwipeUp.bind(this),this.onSwipeDown=this.onSwipeDown.bind(this),this.onTap=this.onTap.bind(this),this.destroy=this.destroy.bind(this),this.handleGesture=this.handleGesture.bind(this);let c=!!this.options.passive&&{passive:!0};this.element=a instanceof EventTarget?a:document.querySelector(a),this.element.addEventListener(\"touchstart\",this.onTouchStart,c),this.element.addEventListener(\"touchend\",this.onTouchEnd,c)}onTouchStart(a){this.touchStartX=a.changedTouches[0].screenX,this.touchStartY=a.changedTouches[0].screenY}onTouchEnd(a){this.touchEndX=a.changedTouches[0].screenX,this.touchEndY=a.changedTouches[0].screenY,this.handleGesture()}onSwipeLeft(a){this.onSwipeLeftAgent=a}onSwipeRight(a){this.onSwipeRightAgent=a}onSwipeUp(a){this.onSwipeUpAgent=a}onSwipeDown(a){this.onSwipeDownAgent=a}onTap(a){this.onTapAgent=a}destroy(){this.element.removeEventListener(\"touchstart\",this.onTouchStart),this.element.removeEventListener(\"touchend\",this.onTouchEnd)}handleGesture(){return this.touchEndX+this.options.threshold<=this.touchStartX?(this.onSwipeLeftAgent&&this.onSwipeLeftAgent(),\"swiped left\"):this.touchEndX-this.options.threshold>=this.touchStartX?(this.onSwipeRightAgent&&this.onSwipeRightAgent(),\"swiped right\"):this.touchEndY+this.options.threshold<=this.touchStartY?(this.onSwipeUpAgent&&this.onSwipeUpAgent(),\"swiped up\"):this.touchEndY-this.options.threshold>=this.touchStartY?(this.onSwipeDownAgent&&this.onSwipeDownAgent(),\"swiped down\"):this.touchEndY===this.touchStartY?(this.onTapAgent&&this.onTapAgent(),\"tap\"):void 0}}module.exports=Xwiper;"],"names":["module","exports","arr","Array","isArray","i","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","ChatAbort","props","className","role","id","tabIndex","this","text","onClick","close","type","closeText","PureComponent","ChatModal","body","toggle","e","t","txtToAdd","link","prompt","insertText","axios","window","lhcChat","dataUrl","then","response","setState","data","container","document","getElementById","bsn","require","tabs","querySelectorAll","activeTab","forEach","element","Tab","xwiper","Xwiper","onSwipeLeft","show","onSwipeRight","console","log","state","parse","replace","domNode","attribs","dismissModal","bbitem","generalOnClick","domToReact","children","name","generalDataActionClick","setTimeout","newScript","createElement","appendChild","createTextNode","getElementsByTagName","item","src","withTranslation","ChatMessage","jsExecuted","abstractClick","bind","imageLoaded","updateTriggerClicked","disableEditor","delayData","attrs","setAttribute","innerHTML","onchange","addLoader","target","onclick","indexOf","dispatch","subscribeNotifications","removeMetaMessage","voiceCall","abstractAction","mainType","args","JSON","more","classList","contains","innerText","remove","add","parseScript","list","alert","helperFunctions","preventDefault","elm","checked","removeAttribute","optionSelected","options","selectedIndex","attrLoad","getAttribute","messageId","block","x","getElementsByClassName","parentNode","removeChild","paramsType","payload","processed","updateMessages","updateStatus","scrollBottom","setMetaUpdateState","msg","setEditorEnabled","sendDelay","str","splitted","split","slice","map","word","toUpperCase","join","style","el","property","formattedProperty","formatStringToCamelCase","trim","operatorChanged","messages","cloneAttr","assign","profilePic","onLoad","alt","title","getStyleObjectFromString","onChange","hasNew","newId","newTitle","connect","ChatFileUploader","hightlight","files","uploading","uploadProgress","successfullUploaded","fileInputRef","React","openFileDialog","onFilesAddedUI","onDragOver","onDragLeave","onDrop","onPaste","onFilesAdded","uploadFiles","sendRequest","ruleTest","RegExp","fileOptions","get","uploadErrors","file","test","size","prevProps","prevState","promises","Promise","all","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","progress","Math","round","onCompletion","copy","formData","FormData","append","open","base_url","chat_id","hash","send","current","click","evt","array","fileListToArray","onDrag","dropArea","ondragover","ondragleave","ondrop","removeEventListener","items","clipboardData","getAsFile","dataTransfer","ref","multiple","has","ChatSync","intervalId","intervalCheckStatusId","syncChat","checkStatusChat","issueUpdate","clearTimeout","syncInterval","status","STATUS_CLOSED_CHAT","status_sub","STATUS_SUB_SURVEY_SHOW","STATUS_SUB_USER_CLOSED_CHAT","STATUS_SUB_CONTACT_FORM","initClose","hasSurvey","STATUS_BOT_CHAT","STATUS_ACTIVE_CHAT","ChatOptions","dropdown","elementId","Dropdown","store","chat","chatwidget","chat_ui","checkSwitchButtom","voteAction","transferToHumanAction","vtm","isonline","transferButton","snapshot","ChatIntroStatus","profileBefore","dangerouslySetInnerHTML","__html","msg_expand","messagesBefore","hideMessageField","placeholder","placeholderMessage","rows","VoiceMessage","MailModal","FontSizeModal","OnlineChat","valueSend","showBBCode","mailChat","dragging","enabledEditor","showMessages","preloadSurvey","gotToSurvey","voiceMode","showMail","changeFontSize","errorMode","scrollButton","fontSize","otm","caretPos","textMessageRef","selectionStart","substring","initChatUI","getIn","enterKeyDown","handleChange","sendMessage","endChat","changeFont","toggleModal","setStatusText","focusMessage","unhideDelayed","toggleSound","goToSurvey","startVoiceRecording","cancelVoiceRecording","onScrollMessages","scrollToMessage","changeFontAction","messagesAreaRef","updateMetaAutoHide","keyUp","delayed","delayQueue","intervalPending","intervalFunction","unhideDelayedTimer","pendingMetaUpdate","timeoutNewMessage","isTyping","typingStopped","typingStoppedAction","currentMessageTyping","attr","scrollHeight","scrollTop","offsetHeight","scrollIntoView","action","txtTyping","defaultFontSize","parseInt","focus","elmtmp","selectionEnd","hasClass","doScrollBottom","hideFirst","lengthHide","display","lastChild","htmlElement","match","condition","any","nextUntil","until","nextElementSibling","matches","params","duration","delay","untillMessage","addClass","clearInterval","removeClass","setInterval","shift","messageBlock","setScroll","setScrollBottom","scrollValue","hasNewMessages","oldId","widgetOpen","hasFocus","hasIn","msop","msg_body","smartScroll","msgScroller","messageElement","offsetTop","onlyIfAtBottom","new_chat","lmgsid","fetchMessages","checkChatStatus","addMessage","key","shiftKey","userTyping","abs","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","availWidth","left","paramsWindow","newWin","needWindow","windowCreated","closed","location","href","allowtransparency","frameBorder","index","bottom_messages","message_send_style","showChat","forceSurvey","classSurvey","validSurveyState","endTitle","fontSizeStyle","minimizeWidget","theme","confirmClose","cancelClose","showModal","Suspense","fallback","chatHash","chatId","onScroll","toLowerCase","onTouchStart","maxLength","onKeyUp","readOnly","onKeyDown","exec","offsetWidth","maxSeconds","cancel","Audio","Component","ownKeys","a","b","c","keys","getOwnPropertySymbols","d","filter","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","configurable","writable","defaults","threshold","passive","constructor","touchStartX","touchStartY","touchEndX","touchEndY","onSwipeLeftAgent","onSwipeRightAgent","onSwipeUpAgent","onSwipeDownAgent","onTapAgent","onTouchEnd","onSwipeUp","onSwipeDown","onTap","destroy","handleGesture","EventTarget","querySelector","changedTouches"],"sourceRoot":""}