{"version":3,"sources":["webpack://LHCReactAPP/./src/components/OfflineChat.js"],"names":["OfflineChat","connect","store","chatwidget","props","state","initOfflineFormCall","handleSubmit","bind","handleContentChange","handleContentChangeCustom","dep_default","this","dispatch","initOfflineForm","get","event","fields","hasFile","formData","FormData","append","name","getIn","helperFunctions","getTimeZone","window","location","href","substring","protocol","length","customFields","getCustomFieldsSubmit","submitData","JSON","stringify","submitOfflineForm","preventDefault","obj","currentState","id","value","setState","size","map","dep","data","prefillFields","field","prevProps","prevState","snapshot","document","getElementById","headerContent","offsetHeight","sendMessageParent","t","className","role","mappedFields","chatUI","isInvalid","hasIn","attrPrefill","defaultValueField","onChangeContent","mappedFieldsCustom","key","dangerouslySetInnerHTML","__html","onSubmit","setDefaultValue","departments","type","disabled","Component","withTranslation"],"mappings":"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","file":"3.de732dbe47fd01650382.ie.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ChatField from './ChatField';\nimport StartChat from './StartChat';\nimport { withTranslation } from 'react-i18next';\nimport { initOfflineForm, submitOfflineForm } from \"../actions/chatActions\"\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport ChatDepartment from './ChatDepartment';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass OfflineChat extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        \n        this.initOfflineFormCall();\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleContentChange = this.handleContentChange.bind(this);\n        this.handleContentChangeCustom = this.handleContentChangeCustom.bind(this);\n    }\n\n    initOfflineFormCall(dep_default){\n        // Init offline form with all attributes\n        this.props.dispatch(initOfflineForm({\n            'department':this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'bot_id' : this.props.chatwidget.get('bot_id'),\n            'online' : 0,\n            'dep_default' : (dep_default || this.props.chatwidget.get('departmentDefault') || 0),\n        }));\n    }\n\n    handleSubmit(event) {\n\n        var fields = this.state;\n        var hasFile = false;\n        const formData = new FormData();\n\n        if (typeof fields['File'] !== 'undefined') {\n            hasFile = true;\n            formData.append(\"File\", fields['File'], fields['File'].name);\n        }\n\n        fields['jsvar'] = this.props.chatwidget.get('jsVars');\n        fields['captcha_' + this.props.chatwidget.getIn(['captcha','hash'])] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['tscaptcha'] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['user_timezone'] = helperFunctions.getTimeZone();\n        fields['URLRefer'] = window.location.href.substring(window.location.protocol.length);\n        fields['r'] = this.props.chatwidget.get('ses_ref');\n\n        if (this.props.chatwidget.get('operator') != '') {\n            fields['operator'] = this.props.chatwidget.get('operator');\n        }\n        \n        if (this.props.chatwidget.get('priority') !== null) {\n            fields['priority'] = this.props.chatwidget.get('priority');\n        }\n\n        const customFields = helperFunctions.getCustomFieldsSubmit(this.props.chatwidget.getIn(['customData','fields']));\n        if (customFields !== null) {\n            fields = {...fields, ...customFields};\n        }\n\n        let submitData = {\n            'department': this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'vid' : this.props.chatwidget.get('vid'),\n            'fields' : fields\n        };\n\n        if (hasFile) {\n            formData.append('document', JSON.stringify(submitData));\n        }\n\n        this.props.dispatch(submitOfflineForm(hasFile ? formData : submitData));\n        event.preventDefault();\n    }\n\n    handleContentChange(obj) {\n        var currentState = this.state;\n        currentState[obj.id] = obj.value;\n        this.setState(currentState);\n\n        if (obj.id == 'DepartamentID') {\n            if (this.props.chatwidget.getIn(['offlineData','department','departments']).size > 0){\n                this.props.chatwidget.getIn(['offlineData','department','departments']).map(dep => {\n                    if (dep.get('value') == obj.value) {\n                        if (dep.get('online') == true) {\n                            this.props.dispatch({'type' : 'dep_default', data : obj.value});\n                            this.props.dispatch({'type' : 'onlineStatus', data : true});\n                        }\n\n                        // Update online fields settings if different department\n                        if (this.props.chatwidget.getIn(['onlineData','dep_forms']) != obj.value) {\n                            this.initOfflineFormCall(obj.value);\n                        }\n\n                    }\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        helperFunctions.prefillFields(this);\n    }\n\n    handleContentChangeCustom(obj) {\n        this.props.dispatch({'type' : 'CUSTOM_FIELDS_ITEM', data : {id : obj.field.get('index'), value : obj.value}});\n    }\n    \n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (document.getElementById('id-container-fluid')) {\n\n            var headerContent = 0;\n\n            if (document.getElementById('widget-header-content')){\n                headerContent = document.getElementById('widget-header-content').offsetHeight;\n            }\n\n            helperFunctions.sendMessageParent('widgetHeight', [{\n                'height' : document.getElementById('id-container-fluid').offsetHeight + headerContent + 10\n            }]);\n        }\n    }\n    \n    render() {\n\n        const { t } = this.props;\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === true && this.props.chatwidget.getIn(['offlineData','disabled']) === true) {\n            return (\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\n                    {t('start_chat.cant_start_a_chat')}\n                </div>\n            )\n        }\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === false)\n        {\n            return null;\n        }\n\n        if (this.props.chatwidget.getIn(['offlineData','fields']).size > 0) {\n            var mappedFields = this.props.chatwidget.getIn(['offlineData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} attrPrefill={{'attr_prefill_admin' : this.props.chatwidget.get('attr_prefill_admin'), 'attr_prefill' : this.props.chatwidget.get('attr_prefill')}} defaultValueField={this.state[field.get('name')] || field.get('value')} onChangeContent={this.handleContentChange} field={field} />);\n        } else {\n            var mappedFields = \"\";\n        }\n\n        if (this.props.chatwidget.getIn(['customData','fields']).size > 0) {\n            var mappedFieldsCustom = this.props.chatwidget.getIn(['customData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} key={field.get('identifier')} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} defaultValueField={field.get('value')} onChangeContent={this.handleContentChangeCustom} field={field} />);\n        } else {\n            var mappedFieldsCustom = \"\";\n        }\n\n        if (this.props.chatwidget.get('processStatus') == 0 || this.props.chatwidget.get('processStatus') == 1) {\n            return (\n                  <div id=\"id-container-fluid\">\n                    {this.props.chatwidget.get('leave_message') && this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && this.props.chatwidget.getIn(['chat_ui','operator_profile']) != '' && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','operator_profile'])}}></div>}\n\n                    {this.props.chatwidget.get('leave_message') && this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && this.props.chatwidget.getIn(['chat_ui','offline_intro']) != '' && <p className=\"pb-1 mb-0 pt-2 px-3 font-weight-bold offline-intro\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    {!this.props.chatwidget.get('leave_message') && <p className=\"pb-1 mb-0 pt-2 px-3 font-weight-bold offline-intro\">{this.props.chatwidget.getIn(['chat_ui','chat_unavailable'])}</p>}\n\n                    {this.props.chatwidget.get('leave_message') &&\n                    <div className=\"container-fluid\" >\n                        <form onSubmit={this.handleSubmit} className=\"offline-form\">\n                            <div className=\"row pt-2\">\n                                {mappedFields}\n                                {mappedFieldsCustom}\n                                {this.props.chatwidget.hasIn(['offlineData','department']) && <ChatDepartment defaultValueField={this.state['DepartamentID']} setDefaultValue={this.props.chatwidget.get('departmentDefault')} onChangeContent={this.handleContentChange} isInvalid={this.props.chatwidget.hasIn(['validationErrors','department'])} departments={this.props.chatwidget.getIn(['offlineData','department'])} />}\n                            </div>\n                            {(!this.props.chatwidget.hasIn(['chat_ui','hstr_btn']) || mappedFieldsCustom !== \"\" || mappedFields !== \"\") && <div className=\"row\">\n                                <div className=\"col-12 pb-2\">\n                                    <button type=\"submit\" disabled={this.props.chatwidget.get('processStatus') == 1} className=\"btn btn-secondary btn-sm\">{this.props.chatwidget.get('processStatus') == 1 && <i className=\"material-icons\">&#xf113;</i>}{this.props.chatwidget.getIn(['chat_ui','custom_start_button']) || t('start_chat.leave_a_message')}</button>\n                                </div>\n                            </div>}\n                        </form>\n                    </div>}\n                      \n                      \n                  </div>\n            )\n        } else if (this.props.chatwidget.get('processStatus') == 2) {\n            return (\n                <div id=\"id-container-fluid\">\n\n                {this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && this.props.chatwidget.getIn(['chat_ui','operator_profile']) != '' && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','operator_profile'])}}></div>}\n\n                {this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && this.props.chatwidget.getIn(['chat_ui','offline_intro']) != '' && <p className=\"pb-1 mb-0 pt-2 px-3 font-weight-bold offline-intro\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <p className=\"pt-2\">{this.props.chatwidget.getIn(['chat_ui','thank_feedback']) || t('start_chat.thank_you_for_feedback')}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\nexport default withTranslation()(OfflineChat);\n"],"sourceRoot":""}