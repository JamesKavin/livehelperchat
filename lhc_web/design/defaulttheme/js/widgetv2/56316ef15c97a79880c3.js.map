{"version":3,"sources":["webpack://LiveHelperChat/./src/util/proactiveChat.js"],"names":["proactiveChat","this","params","timeoutStatuscheck","timeoutActivity","attributes","chatEvents","dynamicInvitations","iddleTimeoutActivity","checkMessageTimeout","nextRescheduleTimeout","initCall","inProgress","events","length","storeEvents","initInvitation","eventEmitter","addListener","init","onlineStatus","subscribe","data","getSessionAttributes","proactive","invitation","mainWidget","isLoaded","sendChildEvent","hideInvitation","emitEvent","chatParams","widgetStatus","value","mode","inject_html","th","document","getElementsByTagName","s","createElement","setAttribute","LHC_API","args","lhc_base_url","Date","now","appendChild","only_inject","bootstrap","clearTimeout","helperFunctions","makeRequest","userSession","getVID","JSON","stringify","paramsExecution","department","join","priority","operator","encodeURIComponent","window","location","href","substring","protocol","title","vid_id","qinv","setTimeout","showInvitation","delay","check_messages","next_reschedule","dynamic","forEach","item","push","id","type","domEventsHandler","listen","e","from","event","relatedTarget","toElement","nodeName","every_time","unlisten","iddleTimeoutActivityReset","element","iddle_for"],"mappings":"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","file":"56316ef15c97a79880c3.js","sourcesContent":["import {helperFunctions} from '../lib/helperFunctions';\nimport {domEventsHandler} from '../util/domEventsHandler';\n\nclass _proactiveChat {\n\n    constructor() {\n        this.params = {};\n        this.timeoutStatuscheck = null;\n        this.timeoutActivity = null;\n        this.attributes = null;\n        this.chatEvents = null;\n        this.dynamicInvitations = [];\n\n        this.iddleTimeoutActivity = null;\n        this.checkMessageTimeout = null;\n        this.nextRescheduleTimeout = null;\n        this.initCall = true;\n        this.inProgress = false;\n    }\n\n    setParams(params, attributes, chatEvents) {\n        this.params = params;\n        this.attributes = attributes;\n        this.chatEvents = chatEvents;\n\n        if (this.attributes.events.length > 0) {\n            this.storeEvents(this.attributes.events);\n        } else {\n            this.initInvitation();\n        }\n\n        // check invitaiton then tag is added\n        this.attributes.eventEmitter.addListener('tagAdded', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('eventAdded', () => {\n            this.storeEvents(this.attributes.events);\n        });\n\n        this.attributes.eventEmitter.addListener('checkMessageOperator', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('endChat', () => {\n             this.initInvitation({init: 0});\n        });\n\n        this.attributes.onlineStatus.subscribe((data) => {\n            if (data == true) {\n                this.initInvitation({init: 0});\n            } else {\n                const chatParams = this.attributes['userSession'].getSessionAttributes();\n                if (!chatParams['id'] && this.attributes.proactive.invitation) {\n                    this.attributes.proactive = {};\n                    if (this.attributes.mainWidget.isLoaded !== false) {\n                        this.chatEvents.sendChildEvent('proactive', [{}]);\n                    }\n                    this.attributes.mainWidget.hideInvitation();\n                    this.attributes.eventEmitter.emitEvent('closeWidget', [{'sender' : 'closeButton'}]);\n                }\n            }\n        });\n    }\n\n    showInvitation(params, init) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        // Show invitation only if widget is not open\n        if ((init === 0 && (this.attributes.widgetStatus.value === true && !this.attributes.mode == 'embed')) || chatParams['id']) {\n            return;\n        }\n\n        if (params.inject_html && params.invitation) {\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src', this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'chat/htmlsnippet/'+params.invitation+'/inv/0/?ts='+Date.now());\n            th.appendChild(s);\n        }\n\n        if (!params.only_inject) {\n            this.attributes.proactive = params;\n\n            if (this.attributes.mainWidget.isLoaded === false) {\n                this.attributes.mainWidget.bootstrap();\n            } else {\n                this.chatEvents.sendChildEvent('proactive', [params]);\n            }\n\n            clearTimeout(this.checkMessageTimeout);\n            clearTimeout(this.nextRescheduleTimeout);\n        }\n    }\n\n    storeEvents(events) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'chat/logevent/(vid)/' + this.attributes.userSession.getVID(), {params: {'data' : JSON.stringify(events)}}, (data) => {\n                this.initInvitation({init: 0});\n            })\n        }\n    }\n\n    initInvitation(paramsExecution) {\n\n        if (this.inProgress == true) {\n            return ;\n        }\n\n        clearTimeout(this.checkMessageTimeout);\n\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        const init = (paramsExecution && paramsExecution['init'] === 0) ? 0 : 1;\n\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n\n            this.inProgress = true;\n\n            let params = {\n                'vid': this.attributes.userSession.getVID(),\n                'dep': this.attributes.department.join(',')\n            };\n\n            if (this.attributes.LHC_API.args.priority) {\n                params['priority'] = this.attributes.LHC_API.args.priority;\n            }\n\n            if (this.attributes.LHC_API.args.operator) {\n                params['operator'] = this.attributes.LHC_API.args.operator;\n            }\n\n            if (this.attributes['identifier']) {\n                params['idnt'] = this.attributes['identifier']\n            }\n\n            if (this.attributes['tag']) {\n                params['tag'] = this.attributes['tag']\n            }\n\n            params['l'] = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n            params['dt'] = encodeURIComponent(document.title);\n            params['init'] = this.initCall == true ? 1 : init;\n\n            this.initCall = false;\n\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'widgetrestapi/checkinvitation', {params: params}, (data) => {\n\n                this.inProgress = false;\n                \n                if (data.invitation) {\n                    const params = {'vid_id' : data.vid_id, 'invitation' : data.invitation, 'inject_html' :  data.inject_html, 'qinv' : data.qinv};\n                    setTimeout(() => {\n                        this.showInvitation(params, init);\n                    }, this.attributes.widgetStatus.value === true ? 0 : (data.delay || 0));\n                } else {\n                    if (this.attributes.LHC_API.args.check_messages) {\n                        this.checkMessageTimeout = setTimeout(() => {\n                            this.initInvitation({init: 0});\n                        },this.params['interval'] * 1000);\n                    }\n                }\n\n                if (data.next_reschedule) {\n                    this.nextRescheduleTimeout = setTimeout(() => {\n                        this.initInvitation({init: 0});\n                    }, data.next_reschedule);\n                }\n\n                if (data.dynamic) {\n                    data.dynamic.forEach((item) => {\n                        this.dynamicInvitations.push(item.id);\n                        if (item.type === 1) {\n                            domEventsHandler.listen(document, 'mouseout', (e) => {\n                                e = e ? e : window.event;\n                                var from = e.relatedTarget || e.toElement;\n                                if (!from || from.nodeName == \"HTML\") {\n                                    this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'qinv' : data.qinv, 'only_inject' : item.only_inject});\n                                    if (!item.every_time) {\n                                        domEventsHandler.unlisten('lhc_inv_mouse_out_'+item.id);\n                                    }\n                                }\n                            }, 'lhc_inv_mouse_out_' + item.id);\n                        } else if (item.type === 2) {\n\n                            var iddleTimeout = () => {\n\n                                this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'qinv' : data.qinv, 'only_inject' : item.only_inject});\n\n                                clearTimeout(this.iddleTimeoutActivity);\n\n                                if (!item.every_time) {\n                                    ['mousemove','mousedown','click','scroll','keypress','load'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_win_'+element);\n                                    });\n\n                                    ['mousemove','scroll','touchstart','touchend'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_doc_'+element);\n                                    });\n                                }\n                            };\n\n                            this.iddleTimeoutActivityReset = () => {\n                                clearTimeout(this.iddleTimeoutActivity);\n                                this.iddleTimeoutActivity = setTimeout( () => { iddleTimeout(); }, item.iddle_for *1000);\n                            }\n\n                            this.iddleTimeoutActivityReset();\n\n                            ['mousemove','mousedown','click','scroll','keypress','load'].forEach((event) => {\n                                    domEventsHandler.listen(window, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_win_'+event);\n                            });\n\n                            ['mousemove','scroll','touchstart','touchend'].forEach((event) => {\n                                domEventsHandler.listen(document, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_doc_'+event);\n                            });\n                        }\n                    })\n                }\n            });\n        }\n    }\n}\n\nconst proactiveChat = new _proactiveChat();\nexport {proactiveChat};\n\n"],"sourceRoot":""}