{"version":3,"file":"Services.ISLpxZ-Z.js","sources":["../../src/lib/Services.js"],"sourcesContent":["export default {\n    setInactive : async function (status) {\n        const response = await fetch(WWW_DIR_JAVASCRIPT + 'user/setinactive/'+status, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n        return response.json();\n    },\n    setLocalSettings : async function (attr,val) {\n        const response = await fetch(WWW_DIR_JAVASCRIPT + 'front/settings/', {\n            method: \"POST\",\n            body: JSON.stringify({\"attr\":attr,\"val\":val}),\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n        return response.json();\n    },\n\n    searchProvider : async function (scope, keyword){\n        const responseTrack = await fetch(WWW_DIR_JAVASCRIPT  + 'chat/searchprovider/'+scope+'/?exclude_disabled=1&q=' +keyword, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n\n        return responseTrack.json();\n    },\n\n    restoreLocalSetting : function(variable,defaultValue,split) {\n        try {\n            if (localStorage) {\n                var value = localStorage.getItem(variable);\n                if (value !== null){\n                    if (split == true){\n\n                        var values = value.split('/');\n                        var valuesInt = new Array();\n\n                        values.forEach(function(val) {\n                            valuesInt.push(parseInt(val));\n                        });\n\n                        return valuesInt;\n                    } else {\n                        return value;\n                    }\n                } else {\n                    return defaultValue;\n                }\n            }\n        } catch(e) {}\n        return defaultValue;\n    },\n    getChatData : async function(id) {\n        const response = await fetch(WWW_DIR_JAVASCRIPT + 'chat/getchatdata/' + id, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n\n        return response.json();\n    },\n    getToggleWidget : function(lhcList, variable, defaultValue) {\n        lhcList.update((list) => {\n            list.toggleWidgetData[variable] = this.restoreLocalSetting(variable,(typeof defaultValue === 'undefined' ? 'false' : defaultValue), false) == 'false' ? false : true;\n            return list;\n        });\n    },\n\n    getToggleWidgetSort : function(lhcList, variable, defaultValue) {\n        lhcList.update((list) => {\n            list.toggleWidgetData[variable] = this.restoreLocalSetting(variable,(typeof defaultValue === 'undefined' ? '' : defaultValue),false);\n            return list;\n        });\n    },\n\n    toggleWidget : function(lhcList, variable, forceReload) {\n\n        lhcList.update((list) => {\n            list.toggleWidgetData[variable] = typeof list.toggleWidgetData[variable] !== 'undefined' ? !list.toggleWidgetData[variable] : true;\n\n            if (localStorage) {\n                try {\n                    localStorage.setItem(variable,list.toggleWidgetData[variable]);\n                } catch(err) {\n                };\n            };\n\n            return list;\n        });\n\n        if (typeof forceReload !== 'undefined' && forceReload == true) {\n            ee.emitEvent('angularLoadChatList');\n        }\n    },\n    toggleWidgetSort : function(lhcList, variable, val, val_desc, forceReload) {\n\n        lhcList.update((list) => {\n            list.toggleWidgetData[variable] = typeof list.toggleWidgetData[variable] === 'undefined' ? val : (list.toggleWidgetData[variable] == val ? val_desc : val);\n\n            if (localStorage) {\n                try {\n                    localStorage.setItem(variable, list.toggleWidgetData[variable]);\n                } catch(err) {\n                };\n            };\n\n            return list;\n        });\n\n        if (typeof forceReload !== 'undefined' && forceReload == true) {\n            ee.emitEvent('angularLoadChatList');\n        }\n    },\n    previewChat : function(chat_id,event){\n        if (event) {\n            event.stopPropagation();\n        }\n        lhc.previewChat(chat_id);\n    },\n    deleteChat : function(chat_id, tabs, hidetab) {\n        return lhinst.deleteChat(chat_id, tabs, hidetab);\n    },\n    redirectContact : function(chat_id,message,event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        return lhinst.redirectContact(chat_id,message);\n    },\n    openModal : function(url, event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT+url, hidecallback: function() { ee.emitEvent('angularLoadChatList'); }});\n    },\n    changeWidgetHeight : function(lhcList, widget, expand) {\n        let elm = document.getElementById(widget+'-panel-list');\n        if (elm) {\n            lhcList.update((list) => {\n                list[widget + '_m_h'] = expand === true ? parseInt(elm.offsetHeight + 28) + 'px' : parseInt(elm.offsetHeight - 28) + 'px';\n                localStorage.setItem(widget+'_m_h', list[widget + '_m_h']);\n                return list;\n            });\n        }\n    },\n    startChatTransfer : function(chat_id,name,transfer_id) {\n        return lhinst.startChatTransfer(chat_id,$('#tabs'),name,transfer_id);\n    },\n    startChatNewWindowTransfer : function(chat_id,name,transfer_id) {\n        return lhinst.startChatNewWindowTransfer(chat_id,name,transfer_id);\n    },\n    startChat : function (chat_id,name) {\n        if ($('#tabs').length > 0) {\n            lhinst.addOpenTrace('click');\n            return lhinst.startChat(chat_id,$('#tabs'),this.truncate((name || 'Visitor'),10));\n        } else {\n            lhinst.startChatNewWindow(chat_id,name);\n        }\n    },\n    truncate : function (text, length, end) {\n        if (isNaN(length))\n            length = 10;\n\n        if (end === undefined)\n            end = \"...\";\n\n        if (text.length <= length || text.length - end.length <= length) {\n            return text;\n        }\n        else {\n            return String(text).substring(0, length-end.length) + end;\n        }\n    },\n    storeLocalSetting : function(variable, value) {\n        if (localStorage) {\n            try {\n                var value = localStorage.setItem(variable, value);\n            } catch(e) {}\n        }\n    },\n    removeLocalSetting : function(listId) {\n        if (localStorage) {\n            try {\n                localStorage.removeItem(listId);\n            } catch(err) {\n            };\n        }\n    },\n    loadActiveChats : async function() {\n        const responseTrack = await fetch(WWW_DIR_JAVASCRIPT  + 'chat/loadactivechats', {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n        return responseTrack.json();\n    },\n    startGroupChat : function (chat_id, name) {\n        if (jQuery('#tabs').length > 0) {\n            return lhinst.startGroupChat(chat_id,$('#tabs'),this.truncate(name,10));\n        }\n    },\n    rejectGroupChat : async function (groupChatId, event) {\n\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const responseTrack = await fetch(WWW_DIR_JAVASCRIPT  + 'groupchat/leave/' + groupChatId, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n\n        let response = await responseTrack.json();\n\n        ee.emitEvent('angularLoadChatList');\n    },\n    startNewGroupChat : async function (lhcList, groupName, publicChat) {\n\n        const responseTrack = await fetch(WWW_DIR_JAVASCRIPT  + 'groupchat/newgroupajax', {\n            method: \"POST\",\n            body: JSON.stringify({\"name\":groupName,\"public\":publicChat}),\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n\n        let data = await responseTrack.json();\n\n        lhcList.update((list) => {\n            list.new_group_name = \"\";\n            list.new_group_type = \"\";\n            return list;\n        });\n\n        lhinst.startGroupChat(data.id,jQuery('#tabs'),this.truncate(data.name,10));\n\n        ee.emitEvent('angularLoadChatList');\n    },\n    startChatOperator : async function(user_id) {\n\n        const responseTrack = await fetch(WWW_DIR_JAVASCRIPT  + 'groupchat/startchatwithoperator/' + user_id, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n\n        let data = await responseTrack.json();\n\n        lhinst.startGroupChat(data.id,jQuery('#tabs'),this.truncate(data.name,10));\n    },\n    getNotificationsData : async function(id) {\n        const responseTrack = await fetch(WWW_DIR_JAVASCRIPT  + 'chat/getnotificationsdata/(id)/' + id, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": confLH.csrf_token\n            }\n        });\n\n        return responseTrack.json();\n    }\n}\n\n\n\n\n"],"names":["lhcServices","setInactive","async","status","fetch","WWW_DIR_JAVASCRIPT","method","headers","Accept","confLH","csrf_token","json","setLocalSettings","attr","val","body","JSON","stringify","searchProvider","scope","keyword","restoreLocalSetting","variable","defaultValue","split","localStorage","value","getItem","values","valuesInt","Array","forEach","push","parseInt","e","getChatData","id","getToggleWidget","lhcList","update","list","toggleWidgetData","this","getToggleWidgetSort","toggleWidget","forceReload","setItem","err","ee","emitEvent","toggleWidgetSort","val_desc","previewChat","chat_id","event","stopPropagation","lhc","deleteChat","tabs","hidetab","lhinst","redirectContact","message","openModal","url","revealModal","hidecallback","changeWidgetHeight","widget","expand","elm","document","getElementById","offsetHeight","startChatTransfer","name","transfer_id","$","startChatNewWindowTransfer","startChat","length","addOpenTrace","truncate","startChatNewWindow","text","end","isNaN","undefined","String","substring","storeLocalSetting","removeLocalSetting","listId","removeItem","loadActiveChats","startGroupChat","jQuery","rejectGroupChat","groupChatId","responseTrack","startNewGroupChat","groupName","publicChat","public","data","new_group_name","new_group_type","startChatOperator","user_id","getNotificationsData"],"mappings":"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"}