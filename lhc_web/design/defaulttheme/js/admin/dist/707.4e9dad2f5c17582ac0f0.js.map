{"version":3,"file":"707.4e9dad2f5c17582ac0f0.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/DashboardChatTabs.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.chats.unshift(action.value);\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Set last appended messages as first array element\n            state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst DashboardChatTabs = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        group_offline : false\n    });\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const getChatIds = () => {\n        var chatIds = [];\n        state.chats.map((chat, index) => chatIds.push(chat.id));\n        return chatIds;\n    }\n\n    const loadChatTabIntro = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + (typeof chatIds !== 'undefined' ? chatIds.join('/') : getChatIds().join('/'))).then(result => {\n            result.data.map((chat, index) => {\n\n                // If nodeJS extension is enabled check chat live status\n                // As on page reload react app can be yet not started and we might not receive event\n                // at that moment react app starts\n                var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                if (nodeJSStatus !== null) {\n                    chat.live_status = nodeJSStatus.textContent == 'wifi';\n                }\n\n                dispatch({\n                    type: 'update_chat',\n                    id: chat.id,\n                    value: chat\n                })\n\n            })\n        });\n    }\n\n    useEffect(() => {\n\n        function addTab(chatId, params) {\n            if (params.focus) {\n                dispatch({\n                    type: 'attr_remove',\n                    id: true,\n                    attr: 'active',\n                    value: {\n                        \"active\" : false\n                    }\n                });\n            }\n\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\" : chatId,\n                    active: params.focus\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function addTabBackground(chatId, params) {\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\" : chatId,\n                    active: false,\n                    mn : 1\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function removeTab(chatId) {\n            dispatch({\n                type: 'remove',\n                id: chatId\n            });\n        }\n\n        function tabClicked(chatId) {\n            dispatch({\n                type: 'refocus',\n                id: chatId\n            });\n        }\n\n        function chatAdminSync(data) {\n\n            dispatch({\n                type: 'group_offline',\n                value: lhinst.hidenicknamesstatus\n            })\n\n            Object.keys(data.result_status).map((key) => {\n                dispatch({\n                    type: 'update_chat',\n                    id: data.result_status[key].chat_id,\n                    value: data.result_status[key]\n                })\n            });\n\n            if (data.result !== 'false') {\n                Object.keys(data.result).map((key) => {\n                    dispatch({\n                        type: 'msg_received',\n                        id: data.result[key].chat_id,\n                        value: {msg: data.result[key].msg, mn: data.result[key].mn}\n                    })\n                });\n            }\n        }\n\n        function supportUnreadChat(params) {\n            if (params.id && params.unread == true) {\n                dispatch({\n                    type: 'update_chat',\n                    id: params.id,\n                    value: {support_chat: true}\n                })\n            }\n        }\n\n        function typingVisitor(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'true','tx' : params.txt}\n            })\n        }\n\n        function typingVisitorStopped(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'false'}\n            })\n        }\n\n        function nodeJsVisitorStatus(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {live_status: params.status}\n            })\n        }\n\n        function activateNextTab(chatid,up) {\n            var index = chatsRef.current.chats.findIndex(x => x.active == true);\n            if (index === -1) { return; }\n            if ((chatsRef.current.chats.length - 1) > index && up == false) {\n                chatTabClick(chatsRef.current.chats[index + 1]);\n            } else if (index > 0 && up == true) {\n                chatTabClick(chatsRef.current.chats[index - 1]);\n            }\n        }\n\n        ee.addListener('chatStartTab',addTab)\n        ee.addListener('chatStartBackground',addTabBackground)\n        ee.addListener('removeSynchroChat',removeTab)\n        ee.addListener('chatTabClicked',tabClicked)\n        ee.addListener('chatTabFocused',tabClicked)\n        ee.addListener('chatAdminSync',chatAdminSync)\n        ee.addListener('supportUnreadChat',supportUnreadChat)\n        ee.addListener('nodeJsTypingVisitor',typingVisitor)\n        ee.addListener('nodeJsTypingVisitorStopped',typingVisitorStopped)\n        ee.addListener('nodeJsVisitorStatus',nodeJsVisitorStatus)\n        ee.addListener('activateNextTab',activateNextTab)\n\n        if (localStorage) {\n            var achat_id = localStorage.getItem('achat_id');\n            if (achat_id !== null && achat_id !== '') {\n                var ids = achat_id.split(',');\n                var entries = [];\n                ids.forEach((id) => {\n                   var el = document.getElementById('chat-tab-link-'+id);\n                   if (el !== null) {\n                       var active = el.classList.contains('active');\n                       entries.push({id: parseInt(id), active: active})\n                   }\n               });\n               dispatch({\n                    type: 'update',\n                    value: {\n                        \"chats\" : entries\n                    }\n                });\n               ids.length > 0 && loadChatTabIntro(ids);\n\n               // Find active chat\n               setTimeout(() => {\n                   ids.forEach((id) => {\n                       var el = document.getElementById('chat-tab-link-'+id);\n                       if (el !== null) {\n                           el.classList.contains('active') && tabClicked(parseInt(id));\n                       }\n                   });\n               },1000);\n            }\n         }\n\n        // Cleanup\n        return function cleanup() {\n            ee.removeListener('chatStartTab', addTab);\n            ee.removeListener('chatStartBackground', addTabBackground);\n            ee.removeListener('removeSynchroChat', removeTab);\n            ee.removeListener('chatTabClicked', tabClicked);\n            ee.removeListener('chatTabFocused', tabClicked);\n            ee.removeListener('chatAdminSync', chatAdminSync);\n            ee.removeListener('supportUnreadChat', chatAdminSync);\n            ee.removeListener('nodeJsTypingVisitor', typingVisitor);\n            ee.removeListener('nodeJsTypingVisitorStopped', typingVisitorStopped);\n            ee.removeListener('nodeJsVisitorStatus', nodeJsVisitorStatus);\n            ee.removeListener('activateNextTab', activateNextTab);\n        };\n\n    },[]);\n\n    const chatTabClick = (chat) => {\n        $('#chat-tab-link-'+chat.id).click();\n    }\n\n    const closeDialog = (e,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        lhinst.removeDialogTab(chat.id,$('#tabs'),true);\n    }\n\n    const { t, i18n } = useTranslation('chat_tabs');\n\n    /*{chat.aicons && Object.keys(chat.aicons).map((keyIndex) => {\n        return (<span style={{color: chat.aicons[keyIndex].c}} title={chat.aicons[keyIndex].t} className=\"material-icons\">{chat.aicons[keyIndex].i}</span>)\n    })}*/\n\n    return (\n        <React.Fragment>\n            {(!state.chats || state.chats.length == 0) && <div className=\"text-center text-muted p-2\"><span className=\"material-icons\">chat</span>{t('chat_tabs.open_chats')}</div>}\n            {state.chats.map((chat, index) => (\n                <div title={chat.id} onClick={() => chatTabClick(chat)} className={\"p-1 action-image chat-tabs-row\"+(chat.active ? ' chat-tab-active' : '')+(chat.vwa ? ' long-response-chat' : '')}>\n                        <div className=\"fs12\">\n                            <span className={\"material-icons\"+(chat.pnd_rsp == true ? ' text-danger' : ' text-success')}>{chat.pnd_rsp == true ? 'call_received' : 'call_made'}</span>\n\n                            {chat.vwa && <span title={chat.vwa} className=\"material-icons text-danger\">timer</span>}\n                            {chat.support_chat && <span className=\"whatshot blink-ani text-warning material-icons\">whatshot</span>}<i className={\"material-icons \"+(typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'icon-user-online' : 'icon-user-offline') : (chat.us == 2 ? \"icon-user-away\" : (chat.us == 0 ? \"icon-user-online\" : \"icon-user-offline\")))}  >face</i><i className={\"material-icons icon-user-online \" + (chat.um == 1 ? \"icon-user-offline\" : \"icon-user-online\")}>send</i>{chat.cc && <img title={chat.cn} src={chat.cc} alt=\"\" />} {(state.group_offline == false || !(chat.us != 0)) && <span className={(chat.mn > 0 ? \"font-weight-bold \" : '') + (chat.cs == 0 ? 'text-warning' : '')}>{chat.nick || chat.id}</span>}{chat.mn > 0 && <span className=\"msg-nm pl-1\">({chat.mn})</span>}{chat.lmsg && <span className=\"text-muted\"> {chat.lmsg}</span>}\n                            <button type=\"button\" onClick={(e) => closeDialog(e,chat)} className=\"float-right btn-link m-0 ml-1 p-0 btn btn-xs\"><i className=\"material-icons mr-0\">close</i></button>\n                            {chat.dep && <span className=\"float-right text-muted text-truncate mw-80px\"><span className=\"material-icons\">home</span>{chat.dep}</span>}\n                            {chat.co == confLH.user_id && <span className=\"float-right text-muted\"><span title={t('chat_tabs.chat_owner')} className=\"material-icons\">account_box</span></span>}\n                        </div>\n\n                        {(chat.msg || (chat.tp == 'true' && chat.tx)) && <div className=\"fs13 text-muted pt-1\">\n                            <span title={chat.tp == 'true' && chat.tx ? chat.tx : chat.msg} className={\"d-inline-block text-truncate mw-100 \"+(chat.mn > 0 ? 'font-weight-bold' : '')+(chat.tp == 'true' && chat.tx ? ' font-italic': '')}>\n                                {chat.tp == 'true' && chat.tx ? chat.tx : chat.msg}\n                            </span>\n                        </div>}\n                </div>\n            ))}\n        </React.Fragment>\n    );\n}\n\nexport default DashboardChatTabs"],"names":["reducer","state","action","type","foundIndex","chats","findIndex","x","id","value","attr","unshift","active","mn","support_chat","splice","msg","el","document","getElementById","classList","contains","group_offline","Error","props","useReducer","dispatch","chatsRef","useRef","useEffect","current","loadChatTabIntro","chatIds","axios","WWW_DIR_JAVASCRIPT","join","map","chat","index","push","getChatIds","then","result","data","nodeJSStatus","live_status","textContent","addTab","chatId","params","focus","addTabBackground","removeTab","tabClicked","chatAdminSync","lhinst","hidenicknamesstatus","Object","keys","result_status","key","chat_id","typingVisitor","tp","txt","typingVisitorStopped","nodeJsVisitorStatus","status","activateNextTab","chatid","up","length","chatTabClick","ee","addListener","unread","localStorage","achat_id","getItem","ids","split","entries","forEach","parseInt","setTimeout","removeListener","$","click","useTranslation","t","i18n","className","title","onClick","vwa","pnd_rsp","us","um","cc","cn","src","alt","cs","nick","lmsg","e","preventDefault","stopPropagation","removeDialogTab","closeDialog","dep","co","confLH","user_id","tx"],"sourceRoot":""}