{"version":3,"file":"707.0aa6735bc3f4b05d05e0.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/DashboardChatTabs.js","webpack://LHCReactAPPAdmin/./src/components/lib/useInterval.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"./lib/useInterval\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.chats.unshift(action.value);\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Set last appended messages as first array element\n            state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst DashboardChatTabs = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        group_offline : false\n    });\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const getChatIds = () => {\n        var chatIds = [];\n        state.chats.map((chat, index) => chatIds.push(chat.id));\n        return chatIds;\n    }\n\n    const loadChatTabIntro = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + (typeof chatIds !== 'undefined' ? chatIds.join('/') : getChatIds().join('/'))).then(result => {\n\n            result.data.map((chat, index) => {\n\n                // If nodeJS extension is enabled check chat live status\n                // As on page reload react app can be yet not started and we might not receive event\n                // at that moment react app starts\n                var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                if (nodeJSStatus !== null) {\n                    chat.live_status = nodeJSStatus.textContent == 'wifi';\n                }\n\n                dispatch({\n                    type: 'update_chat',\n                    id: chat.id,\n                    value: chat\n                })\n\n            })\n        });\n    }\n\n    if (!document.getElementById('tabs')) {\n        useInterval(() => {\n\n            if (!state.chats || state.chats.length == 0) {\n                return;\n            }\n\n            axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + getChatIds().join('/')).then(result => {\n                result.data.map((chat, index) => {\n\n                    // If nodeJS extension is enabled check chat live status\n                    // As on page reload react app can be yet not started and we might not receive event\n                    // at that moment react app starts\n                    var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                    if (nodeJSStatus !== null) {\n                        chat.live_status = nodeJSStatus.textContent == 'wifi';\n                    }\n\n                    if (!(!state.chats || state.chats.length == 0)) {\n                        var foundIndex = state.chats.findIndex(x => x.id == chat.id);\n                        if (foundIndex !== -1 ) {\n                            if (state.chats[foundIndex].lmsg_id !== chat.lmsg_id) {\n                                chat.mn = 1;\n                            } else {\n                                chat.mn = state.chats[foundIndex].mn;\n                            }\n                        }\n                    }\n\n                    dispatch({\n                        type: 'update_chat',\n                        id: chat.id,\n                        value: chat\n                    })\n\n                })\n            });\n\n        }, 1000);\n    }\n\n\n    useEffect(() => {\n\n        function addTabPreload(chatId, params) {\n\n            if (!(!chatsRef.current.chats || chatsRef.current.chats.length == 0) && chatsRef.current.chats.findIndex(x => x.id == chatId) !== -1) {\n                return; // We already have this chat tab\n            }\n\n            addTab(chatId, params);\n        }\n\n        function addTab(chatId, params) {\n            if (params.focus) {\n                dispatch({\n                    type: 'attr_remove',\n                    id: true,\n                    attr: 'active',\n                    value: {\n                        \"active\" : false\n                    }\n                });\n            }\n\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\" : chatId,\n                    active: params.focus\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function addTabBackground(chatId, params) {\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\" : chatId,\n                    active: false,\n                    mn : 1\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function removeTab(chatId) {\n            dispatch({\n                type: 'remove',\n                id: chatId\n            });\n        }\n\n        function tabClicked(chatId) {\n            dispatch({\n                type: 'refocus',\n                id: chatId\n            });\n        }\n\n        function chatAdminSync(data) {\n\n            dispatch({\n                type: 'group_offline',\n                value: lhinst.hidenicknamesstatus\n            })\n\n            Object.keys(data.result_status).map((key) => {\n                dispatch({\n                    type: 'update_chat',\n                    id: data.result_status[key].chat_id,\n                    value: data.result_status[key]\n                })\n            });\n\n            if (data.result !== 'false') {\n                Object.keys(data.result).map((key) => {\n                    dispatch({\n                        type: 'msg_received',\n                        id: data.result[key].chat_id,\n                        value: {msg: data.result[key].msg, mn: data.result[key].mn}\n                    })\n                });\n            }\n        }\n\n        function supportUnreadChat(params) {\n            if (params.id && params.unread == true) {\n                dispatch({\n                    type: 'update_chat',\n                    id: params.id,\n                    value: {support_chat: true}\n                })\n            }\n        }\n\n        function typingVisitor(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'true','tx' : params.txt}\n            })\n        }\n\n        function typingVisitorStopped(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'false'}\n            })\n        }\n\n        function nodeJsVisitorStatus(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {live_status: params.status}\n            })\n        }\n\n        function activateNextTab(chatid,up) {\n            var index = chatsRef.current.chats.findIndex(x => x.active == true);\n            if (index === -1) { return; }\n            if ((chatsRef.current.chats.length - 1) > index && up == false) {\n                chatTabClick(chatsRef.current.chats[index + 1]);\n            } else if (index > 0 && up == true) {\n                chatTabClick(chatsRef.current.chats[index - 1]);\n            }\n        }\n\n        ee.addListener('chatStartTab',addTab)\n        ee.addListener('chatTabPreload',addTabPreload)\n        ee.addListener('chatStartBackground',addTabBackground)\n        ee.addListener('removeSynchroChat',removeTab)\n        ee.addListener('chatTabClicked',tabClicked)\n        ee.addListener('chatTabFocused',tabClicked)\n        ee.addListener('chatAdminSync',chatAdminSync)\n        ee.addListener('supportUnreadChat',supportUnreadChat)\n        ee.addListener('nodeJsTypingVisitor',typingVisitor)\n        ee.addListener('nodeJsTypingVisitorStopped',typingVisitorStopped)\n        ee.addListener('nodeJsVisitorStatus',nodeJsVisitorStatus)\n        ee.addListener('activateNextTab',activateNextTab)\n\n        if (localStorage) {\n            var achat_id = localStorage.getItem('achat_id');\n            if (achat_id !== null && achat_id !== '') {\n                var ids = achat_id.split(',');\n                var entries = [];\n                ids.forEach((id) => {\n                   var el = document.getElementById('chat-tab-link-'+id);\n                   if (parseInt(id) > 0) {\n                       entries.push({id: parseInt(id), active: el !== null && el.classList.contains('active')})\n                   }\n               });\n               dispatch({\n                    type: 'update',\n                    value: {\n                        \"chats\" : entries\n                    }\n                });\n               ids.length > 0 && loadChatTabIntro(ids);\n\n               // Find active chat\n               setTimeout(() => {\n                   ids.forEach((id) => {\n                       var el = document.getElementById('chat-tab-link-'+id);\n                       if (el !== null) {\n                           el.classList.contains('active') && tabClicked(parseInt(id));\n                       }\n                   });\n               },1000);\n            }\n         }\n\n        // Cleanup\n        return function cleanup() {\n            ee.removeListener('chatStartTab', addTab);\n            ee.removeListener('chatStartBackground', addTabBackground);\n            ee.removeListener('removeSynchroChat', removeTab);\n            ee.removeListener('chatTabClicked', tabClicked);\n            ee.removeListener('chatTabFocused', tabClicked);\n            ee.removeListener('chatAdminSync', chatAdminSync);\n            ee.removeListener('supportUnreadChat', chatAdminSync);\n            ee.removeListener('nodeJsTypingVisitor', typingVisitor);\n            ee.removeListener('nodeJsTypingVisitorStopped', typingVisitorStopped);\n            ee.removeListener('nodeJsVisitorStatus', nodeJsVisitorStatus);\n            ee.removeListener('activateNextTab', activateNextTab);\n        };\n\n    },[]);\n\n    const chatTabClick = (chat) => {\n        if (document.getElementById('chat-tab-link-'+chat.id) !== null) {\n            $('#chat-tab-link-'+chat.id).click();\n        } else {\n            document.location = WWW_DIR_JAVASCRIPT + 'front/default/(cid)/' + chat.id + '/#!#chat-id-' + chat.id;\n        }\n    }\n\n    const closeDialog = (e,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        lhinst.removeDialogTab(chat.id,$('#tabs'),true);\n    }\n\n    const iconClick = (e,icon,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (icon.has_popup) {\n            lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + 'chat/icondetailed/' + chat.id + '/' + icon.icon_id});\n        }\n    }\n\n    const { t, i18n } = useTranslation('chat_tabs');\n\n    return (\n        <React.Fragment>\n            {(!state.chats || state.chats.length == 0) && <div className=\"text-center text-muted p-2\"><span className=\"material-icons\">chat</span>{t('chat_tabs.open_chats')}</div>}\n            {state.chats.map((chat, index) => (\n\n                <div title={chat.id} onClick={() => chatTabClick(chat)} className={\"p-1 action-image chat-tabs-row\"+(chat.active ? ' chat-tab-active' : '')+(chat.vwa ? ' long-response-chat' : '')}>\n                        <div className=\"fs12\">\n                            <span className={\"material-icons\"+(chat.pnd_rsp == true ? ' text-danger' : ' text-success')}>{chat.pnd_rsp == true ? 'call_received' : 'call_made'}</span>\n                            {chat.adicons && chat.adicons.map((icon, index) => <span onClick={(event) => iconClick(event,icon,chat)} style={{'color': icon.color}} className=\"material-icons\" title={icon.title}>{icon.icon}</span>)}\n                            {chat.vwa && <span title={chat.vwa} className=\"material-icons text-danger\">timer</span>}\n                            {chat.support_chat && <span className=\"whatshot blink-ani text-warning material-icons\">whatshot</span>}<i className={\"material-icons \"+(typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'icon-user-online' : 'icon-user-offline') : (chat.us == 2 ? \"icon-user-away\" : (chat.us == 0 ? \"icon-user-online\" : \"icon-user-offline\")))}  >{typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'wifi' : 'wifi_off') : (chat.us == 2 ? \"wifi_1_bar\" : (chat.us == 0 ? \"wifi\" : \"wifi_off\"))}</i><i className={\"material-icons icon-user-online \" + (chat.um == 1 ? \"icon-user-offline\" : \"icon-user-online\")}>send</i>{chat.cc && <img title={chat.cn} src={chat.cc} alt=\"\" />} {(state.group_offline == false || !(chat.us != 0)) && <span className={(chat.mn > 0 || chat.cs == 0 ? \"font-weight-bold \" : '') + (chat.cs == 0 ? 'text-danger' : '')}>{chat.nick || chat.id}</span>}{chat.mn > 0 && <span className=\"msg-nm pl-1\">({chat.mn})</span>}{chat.lmsg && <span className=\"text-muted\"> {chat.lmsg}</span>}\n                            <button type=\"button\" onClick={(e) => closeDialog(e,chat)} className=\"float-right btn-link m-0 ml-1 p-0 btn btn-xs\"><i className=\"material-icons mr-0\">close</i></button>\n                            {chat.dep && <span className=\"float-right text-muted text-truncate mw-80px\"><span className=\"material-icons\">home</span>{chat.dep}</span>}\n                            {chat.co == confLH.user_id && <span className=\"float-right text-muted\"><span title={t('chat_tabs.chat_owner')} className=\"material-icons\">account_box</span></span>}\n                        </div>\n\n                        {(chat.msg || (chat.tp == 'true' && chat.tx)) && <div className=\"fs13 text-muted pt-1\">\n                            <span title={chat.tp == 'true' && chat.tx ? chat.tx : chat.msg} className={\"d-inline-block text-truncate mw-100 \"+(chat.mn > 0 ? 'font-weight-bold' : '')+(chat.tp == 'true' && chat.tx ? ' font-italic': '')}>\n                                {chat.tp == 'true' && chat.tx ? chat.tx : chat.msg}\n                            </span>\n                        </div>}\n                </div>\n            ))}\n        </React.Fragment>\n    );\n}\n\nexport default DashboardChatTabs","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;"],"names":["reducer","state","action","type","foundIndex","chats","findIndex","x","id","value","attr","unshift","active","mn","support_chat","splice","msg","el","document","getElementById","classList","contains","group_offline","Error","props","useReducer","dispatch","chatsRef","useRef","useEffect","current","getChatIds","chatIds","map","chat","index","push","loadChatTabIntro","axios","WWW_DIR_JAVASCRIPT","join","then","result","data","nodeJSStatus","live_status","textContent","useInterval","length","lmsg_id","addTab","chatId","params","focus","addTabBackground","removeTab","tabClicked","chatAdminSync","lhinst","hidenicknamesstatus","Object","keys","result_status","key","chat_id","typingVisitor","tp","txt","typingVisitorStopped","nodeJsVisitorStatus","status","activateNextTab","chatid","up","chatTabClick","ee","addListener","unread","localStorage","achat_id","getItem","ids","split","entries","forEach","parseInt","setTimeout","removeListener","$","click","location","useTranslation","t","i18n","className","title","onClick","vwa","pnd_rsp","adicons","icon","event","e","preventDefault","stopPropagation","has_popup","lhc","revealModal","icon_id","iconClick","style","color","us","um","cc","cn","src","alt","cs","nick","lmsg","removeDialogTab","closeDialog","dep","co","confLH","user_id","tx","callback","delay","savedCallback","setInterval","clearInterval"],"sourceRoot":""}