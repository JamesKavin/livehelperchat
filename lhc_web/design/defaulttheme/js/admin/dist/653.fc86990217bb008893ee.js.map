{"version":3,"file":"653.fc86990217bb008893ee.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatQuote.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatAttachement.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailReplyRecipient.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailSendStatus.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatReply.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatMessage.js","webpack://LHCReactAPPAdmin/./src/components/MailChat.js"],"sourcesContent":["import React, { useState} from \"react\";\n\nconst MailChatQuote = ({children}) => {\n\n    const [expandBody, setExpandBody] = useState(false);\n\n    return <React.Fragment>\n        <div className=\"pb-2\"><button onClick={() => setExpandBody(!expandBody)} className=\"btn btn-sm btn-outline-secondary\">...</button></div>\n        {expandBody && children}\n    </React.Fragment>\n\n}\n\nexport default React.memo(MailChatQuote);","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\n\n/**\n * https://github.com/LukasMarx/react-file-upload\n * */\nclass MailChatAttatchement extends PureComponent {\n\n    state = {\n        hightlight: false,\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false,\n        progress: ''\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.fileInputRef = React.createRef();\n        this.dropAreaRef = React.createRef();\n\n        // UI Actions\n        this.openFileDialog = this.openFileDialog.bind(this);\n        this.onFilesAddedUI = this.onFilesAddedUI.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onPaste = this.onPaste.bind(this);\n\n        // Backend actions\n        this.onFilesAdded = this.onFilesAdded.bind(this);\n        this.uploadFiles = this.uploadFiles.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n        this.chooseFromUploaded = this.chooseFromUploaded.bind(this);\n        this.fileUploaded = this.fileUploaded.bind(this);\n    }\n\n    onFilesAdded(files) {\n        const { t } = this.props;\n\n        const ruleTest = new RegExp(\"(\\.|\\/)(\" + this.props.moptions['fop_op'] + \")$\",\"i\");\n\n        let uploadErrors = [];\n        files.forEach(file => {\n\n            if (!(ruleTest.test(file.type) || ruleTest.test(file.name))) {\n                uploadErrors.push(file.name + ': ' + t('file.incorrect_type'));\n            }\n\n            if (file.size > this.props.moptions['fop_size']) {\n                uploadErrors.push(file.name + ': '+ t('file.to_big_file'));\n            }\n        });\n\n        if (uploadErrors.length > 0) {\n            alert(uploadErrors.join(\"\\n\"));\n        } else {\n            this.setState({\n                'files': files\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.files.length > 0 && this.state.uploading == false) {\n            this.uploadFiles();\n        }\n    }\n\n    async uploadFiles() {\n        this.setState({ uploadProgress: {}, uploading: true });\n        const promises = [];\n        this.state.files.forEach(file => {\n            promises.push(this.sendRequest(file));\n        });\n        try {\n            await Promise.all(promises);\n            this.setState({ successfullUploaded: true, uploading: false,  files : []});\n        } catch (e) {\n            // Not Production ready! Do some error handling here instead...\n            this.setState({ successfullUploaded: true, uploading: false,  files : [] });\n        }\n    }\n\n    fileUploaded(file) {\n        this.props.fileAttached(file);\n    }\n\n    sendRequest(file) {\n        const { t } = this.props;\n\n        return new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n\n            req.upload.addEventListener(\"progress\", event => {\n                if (event.lengthComputable) {\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                        state: \"pending\",\n                        percentage: (event.loaded / event.total) * 100\n                    };\n                    this.setState({ progress: t('file.uploading') + ' ' + Math.round((event.loaded / event.total) * 100) + '%' });\n                }\n            });\n\n            req.upload.addEventListener(\"load\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                this.setState({ progress: '' });\n                resolve(req.response);\n            });\n\n            var _inst = this;\n\n            req.onreadystatechange = function() {\n                if (req.readyState === 4) {\n                    _inst.fileUploaded(JSON.parse(req.response));\n                }\n            }\n\n            req.upload.addEventListener(\"error\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"error\", percentage: 0 };\n                this.setState({ progress: copy });\n                reject(req.response);\n            });\n\n            const formData = new FormData();\n            formData.append(\"files\", file, file.name);\n\n            req.open(\"POST\", WWW_DIR_JAVASCRIPT + 'mailconv/uploadfile/(csrf)/' + confLH.csrf_token);\n            req.send(formData);\n        });\n    }\n\n    openFileDialog() {\n        if (this.state.uploading) return;\n        this.fileInputRef.current.click();\n    }\n\n    onFilesAddedUI(evt) {\n        const files = evt.target.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        this.setState({hightlight: true})\n    }\n\n    componentDidMount() {\n        if (this.dropAreaRef.current) {\n            this.dropAreaRef.current.ondragover = this.onDragOver;\n            this.dropAreaRef.current.ondragleave = this.onDragLeave;\n            this.dropAreaRef.current.ondrop = this.onDrop;\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.dropAreaRef.current) {\n            this.dropAreaRef.current.ondragover = null;\n            this.dropAreaRef.current.ondragleave = null;\n            this.dropAreaRef.current.ondrop = null;\n        }\n\n        window.attatchReplyCurrent = null;\n    }\n\n    onPaste(e) {\n        var items = e && e.clipboardData &&\n            e.clipboardData.items,\n            data = {files: []};\n\n        if (items && items.length) {\n            const array = [];\n            for (var i = 0; i < items.length; i++) {\n                var file = items[i].getAsFile && items[i].getAsFile();\n                if (file){\n                    array.push(file);\n                }\n            }\n\n            if (array.length > 0) {\n                this.onFilesAdded(array);\n            }\n        }\n    }\n\n    onDragLeave(event) {\n        this.setState({hightlight: false})\n    }\n\n    onDrop(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        const files = event.dataTransfer.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n        this.setState({hightlight: false})\n    }\n\n    fileListToArray(list) {\n        const array = [];\n        for (var i = 0; i < list.length; i++) {\n            array.push(list.item(i));\n        }\n        return array;\n    }\n\n    chooseFromUploaded() {\n\n        const { t } = this.props;\n        \n        lhc.revealModal({\n            'title' : t('file.choose_uploaded'),\n            'iframe':true,\n            'height':500,\n            'url':WWW_DIR_JAVASCRIPT +'mailconv/attatchfile/(attachment)/1'\n        });\n\n        var _inst = this;\n\n        window.attatchReplyCurrent = function(file) {\n             _inst.props.fileAttached(file);\n        }\n    }\n\n    render() {\n\n            const { t } = this.props;\n\n            return (\n                <React.Fragment>\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={this.chooseFromUploaded} ><i className=\"material-icons\">list</i> {t('file.choose_uploaded')}</button>\n                    <button ref={this.dropAreaRef} onClick={this.openFileDialog} className={\"btn btn-sm \" + (this.state.hightlight == true ? 'btn-outline-primary' : 'btn-outline-secondary')}><i className=\"material-icons\">attach_file</i> {this.state.progress || t('file.drop_here')}</button>\n                    <input onChange={this.onFilesAddedUI} ref={this.fileInputRef} id=\"fileupload\" type=\"file\" name=\"files[]\" multiple className=\"d-none\" />\n                </React.Fragment>\n            );\n     }\n}\n\nexport default withTranslation('mail_chat')(MailChatAttatchement);","import React, { useEffect, useState, useReducer } from \"react\";\n\nimport {useTranslation} from 'react-i18next';\n\nconst MailReplyRecipient = props => {\n\n    const [recipients, dispatch] = useReducer((recipients, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...recipients, value];\n\n            case \"add_recipient\":\n                recipients = { ... recipients};\n                recipients[value].push({\"name\" : \"\", \"email\" : \"\"});\n                return recipients;\n\n            case \"remove_recipient\":\n                recipients = { ... recipients};\n                recipients[value.recipient] = recipients[value.recipient].filter((_, index) => index !== value.index);\n                return recipients;\n\n            case \"set\":\n                return value;\n\n            case 'set_attribute':\n                recipients = { ... recipients};\n                recipients[value.value.type][value.value.index][value.value.field] = value.value.value;\n                return recipients;\n                break;\n\n            case \"cleanup\":\n                return [];\n            case \"remove\":\n                return recipients.filter((_, index) => index !== value);\n            default:\n                return recipients;\n        }\n    }, []);\n\n    const setReciepints = (type, value) => {\n        dispatch({'type' : type, \"value\" : value});\n        props.setRecipients(recipients);\n    }\n\n    useEffect(() => {\n        dispatch({\"type\" : \"set\", \"value\" : props.recipients});\n        props.setRecipients(props.recipients);\n    },[props.recipients]);\n\n    const { t, i18n } = useTranslation('mail_chat');\n    \n    return <div className=\"row\">\n\n        {!props.readOnly && <div className=\"col-12 text-secondary font-weight-bold fs13 pb-1\">{t('r.recipients')} <i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"add_recipient\",\"reply\")} style={{fontSize: \"20px\"}}>add</i> Cc <i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"add_recipient\",\"cc\")} style={{fontSize: \"20px\"}}>add</i> Bcc <i onClick={(e) => setReciepints(\"add_recipient\",\"bcc\")} className=\"material-icons settings text-muted\" style={{fontSize: \"20px\"}}>add</i></div>}\n\n        <div className=\"col-6\">\n            {recipients.reply && recipients.reply.map((mail, index) => (\n                <div className=\"form-row pb-1\">\n                    <div className=\"col-1 text-secondary fs13 pt-1\">{t('r.to')}:</div>\n                    <div className=\"col-5\">\n                        <div className=\"input-group input-group-sm\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                            </div>\n                            <input disabled={props.readOnly} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"reply\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                        </div>\n                    </div>\n                    <div className=\"col-5\"><input type=\"text\" disabled={props.readOnly} placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"reply\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                    {!props.readOnly && index > 0 && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"reply\", \"index\" : index})}>remove</i></div>}\n                </div>\n            ))}\n        </div>\n\n        <div className=\"col-6\">\n        {recipients.cc && recipients.cc.map((mail, index) => (\n            <div className=\"form-row pb-1\">\n                <div className=\"col-1 text-secondary fs13 pt-1\">Cc:</div>\n                <div className=\"col-5\">\n                    <div className=\"input-group input-group-sm\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                        </div>\n                        <input type=\"text\" disabled={props.readOnly} className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"cc\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                    </div>\n                </div>\n                <div className=\"col-5\"><input disabled={props.readOnly} type=\"text\" placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"cc\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                {!props.readOnly && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"cc\", \"index\" : index})}>remove</i></div>}\n            </div>\n        ))}\n        </div>\n\n        <div className=\"col-6\">\n        {recipients.bcc && recipients.bcc.map((mail, index) => (\n            <div className=\"form-row pb-1\">\n                <div className=\"col-1 text-secondary fs13 pt-1\">Bcc:</div>\n                <div className=\"col-5\">\n                    <div className=\"input-group input-group-sm\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                        </div>\n                        <input type=\"text\" disabled={props.readOnly} className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"bcc\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                    </div>\n                </div>\n                <div className=\"col-5\"><input type=\"text\" disabled={props.readOnly} placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"bcc\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                {!props.readOnly && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"bcc\", \"index\" : index})}>remove</i></div>}\n            </div>\n        ))}\n        </div>\n\n\n    </div>\n}\n\nexport default React.memo(MailReplyRecipient);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\n\nconst MailSendStatus = props => {\n\n    const [expandBody, setExpandBody] = useState(false);\n\n    return <React.Fragment>\n        {props.status.send && <div className=\"alert alert-success p-1 pl-2\" role=\"alert\">Success!</div>}\n        {!props.status.send && <div className=\"alert alert-danger p-1 pl-2\" role=\"alert\">\n            <ul className=\"mb-0\">\n                {props.status.errors.general && <li>{props.status.errors.general}</li>}\n                {props.status.errors.reply && <li>{props.status.errors.reply}</li>}\n                {props.status.errors.content && <li>{props.status.errors.content}</li>}\n            </ul>\n            {props.status.errors.raw_error &&\n                <div>\n                    <h5>An unknown error happened while sending an email. Please reload a window!</h5>\n                    <div><button onClick={() => {document.location.reload()}} className=\"btn btn-danger btn-sm\">Reload this window</button></div>\n                    <p>Please copy error text and send to your manager!</p>\n                    <textarea className=\"form-control form-control-sm\" rows=\"5\">{props.status.errors.raw_error}</textarea>\n                </div>\n            }\n        </div>}\n        \n    </React.Fragment>\n\n}\n\nexport default React.memo(MailSendStatus);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from \"axios\";\nimport MailChatAttachement from \"./MailChatAttachement\";\nimport MailReplyRecipient from \"./MailReplyRecipient\";\nimport MailSendStatus from \"./MailSendStatus\";\nimport {useTranslation} from 'react-i18next';\n\nconst MailChatReply = props => {\n\n    const [replyMode, setReplyMode] = useState(false);\n    const [forwardMode, setForwardMode] = useState(false);\n    const [replyContent, setReplyContent] = useState(null);\n    const [replyIntro, setReplyIntro] = useState(null);\n    const [replySignature, setReplySignature] = useState(null);\n    const [loadedReplyData, setLoadedReplyData] = useState(false);\n    const [recipients, setRecipients] = useState([]);\n    const [recipientsModified, setModifiedRecipients] = useState([]);\n    const [replySendStatus, setReplySendStatus] = useState([]);\n    const [sendInProgress, setSendInProgress] = useState(false);\n    const [underReplySignature, setUnderReplySignature] = useState(false);\n    const [isOwner, setIsOwner] = useState(true);\n\n    const [attachedFiles, dispatch] = useReducer((attachedFiles, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...attachedFiles, value];\n            case \"cleanup\":\n                return [];\n            case \"remove\":\n                return attachedFiles.filter((_, index) => index !== value);\n            default:\n                return attachedFiles;\n        }\n    }, []);\n\n    const currentAttatchedFiles = useRef();\n    currentAttatchedFiles.current = attachedFiles;\n\n    let replyContentDirect = null;\n\n    const handleEditorChange = (content, editor) => {\n        replyContentDirect = content;\n    }\n\n    const sendReply = (status) => {\n        let replyPayload = {\n            'recipients' : recipientsModified,\n            'content' : tinyMCE.get(\"reply-to-mce-\"+props.message.id).getContent(),\n            'attatchements' : attachedFiles,\n            'status': status,\n            'mode' : (replyMode == true ? 'reply' : 'forward')\n        };\n\n        setSendInProgress(true);\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apisendreply/\" + props.message.id, replyPayload).then(result => {\n\n            // We always expect an object\n            if (typeof result.data !== 'object') {\n                setSendInProgress(false);\n                setReplySendStatus({\n                    'send' : false,\n                    'send_tried': true,\n                    'errors': {\n                        'raw_error': result.data\n                    }\n                });\n                return;\n            }\n\n            setReplySendStatus(result.data);\n            setSendInProgress(false);\n\n            if (result.data.send == true) {\n                props.fetchMessages();\n                props.setConversationStatus(result.data.conv_status);\n            }\n\n        }).catch(error => {\n            setSendInProgress(false);\n            // Error 😨\n            if (error.response) {\n                /*\n                 * The request was made and the server responded with a\n                 * status code that falls out of the range of 2xx\n                 */\n                if (error.response.status === 400) {\n                    setReplySendStatus(error.response.data);\n                } else {\n                    setReplySendStatus({\n                        'send' : false,\n                        'send_tried': true,\n                        'errors': {\n                            'raw_error': error.response.data\n                        }\n                    });\n                }\n\n            } else if (error.request) {\n                /*\n                 * The request was made but no response was received, `error.request`\n                 * is an instance of XMLHttpRequest in the browser and an instance\n                 * of http.ClientRequest in Node.js\n                 */\n                console.log(error.request);\n            } else {\n                // Something happened in setting up the request and triggered an Error\n                console.log('Error', error.message);\n            }\n\n            console.log(error.config);\n\n        });\n    }\n\n    const removeAttatchedFile = (file, index) => {\n        dispatch({ type: \"remove\", value: index });\n        if (file.new === true) {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            currentAttatchedFiles.current.map((file, index) => {\n                if (file.new === true) {\n                    axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n                }\n            })\n        }\n    },[]);\n\n    useEffect(() => {\n        if ((replyMode == true || forwardMode == true) && loadedReplyData == false) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/getreplydata/\" + props.message.id + '/' + (replyMode == true ? 'reply' : 'forward')).then(result => {\n                setLoadedReplyData(true);\n                setReplyIntro(result.data.intro);\n                setReplySignature(result.data.signature);\n                setRecipients(result.data.recipients);\n                setUnderReplySignature(result.data.signature_under);\n                if (result.data.user_id > 0) {\n                    props.verifyOwner(result.data.user_id);\n                    setIsOwner(result.data.is_owner);\n                }\n            });\n        } else if (replyMode == false && forwardMode == false && loadedReplyData == true) {\n            setLoadedReplyData(false);\n            if (currentAttatchedFiles.current.length > 0) {\n                currentAttatchedFiles.current.map((file, index) => {\n                    if (file.new === true) {\n                        axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n                    }\n                });\n                dispatch({ type: \"cleanup\"})\n            }\n        }\n    },[replyMode,forwardMode]);\n\n    if (props.replyMode == true && replyMode == false) {\n        if (forwardMode == true) {\n            setLoadedReplyData(false);\n            setForwardMode(false);\n        }\n        setReplyMode(true);\n    }\n\n    if (props.forwardMode == true && forwardMode == false) {\n        if (replyMode == true) {\n            setLoadedReplyData(false);\n            setReplyMode(false);\n        }\n        setForwardMode(true);\n    }\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    return <React.Fragment>\n        <div className=\"col-12 mt-2 pt-3 pb-2\">\n\n            {!isOwner && <div className=\"alert alert-warning\" role=\"alert\"><span className=\"material-icons\">warning</span>\n                {t('msg.not_an_owner')}\n            </div>}\n\n            {!replyMode && !forwardMode && !props.fetchingMessages && <div className=\"btn-group\" role=\"group\" aria-label=\"Mail actions\">\n                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => {setForwardMode(false);setReplyMode(true);}}><i className=\"material-icons\">reply</i>{t('msg.reply')}</button>\n                <button disabled={props.message.response_type == 1} type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => props.noReplyRequired()}><i className=\"material-icons\">done</i>{t('msg.nrr')}</button>\n                {!props.moptions.hide_recipients && <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => {setReplyMode(false);setForwardMode(true)}}><i className=\"material-icons\">forward</i>{t('msg.forward')}</button>}\n            </div>}\n\n            {!props.fetchingMessages && (replyMode || forwardMode) && loadedReplyData && <div className=\"shadow p-2\">\n\n                {replySendStatus.send_tried && <MailSendStatus status={replySendStatus} />}\n\n                <MailReplyRecipient readOnly={props.moptions.hide_recipients} setRecipients={(recipients) => setModifiedRecipients(recipients)} mode={replyMode == true ? 'reply' : 'forward'} message={props.message} recipients={recipients} />\n\n                <Editor\n                    tinymceScriptSrc={props.moptions.tiny_mce_path}\n                    initialValue={\"<p></p>\" + replyIntro + \"<blockquote>\" + props.message.body_front + \"</blockquote>\" + (underReplySignature == false ? replySignature : \"\")}\n                    onInit={() => {\n                        tinyMCE.get(\"reply-to-mce-\"+props.message.id).focus();\n                    }}\n                    id={\"reply-to-mce-\"+props.message.id}\n                    init={{\n                        cache_suffix: \"?v=1.0\",\n                        height: 320,\n                        automatic_uploads: props.moptions.files_enabled,\n                        file_picker_types: 'image',\n                        images_upload_url: WWW_DIR_JAVASCRIPT + 'mailconv/uploadimage/(csrf)/' + confLH.csrf_token,\n                        templates: WWW_DIR_JAVASCRIPT + 'mailconv/apiresponsetemplates/'+props.message.id,\n                        paste_data_images: props.moptions.files_enabled,\n                        relative_urls : false,\n                        browser_spellcheck: true,\n                        paste_as_text: true,\n                        contextmenu: false,\n                        menubar: false,\n                        plugins: props.moptions.mce_plugins,\n                        toolbar_mode: 'wrap',\n                        toolbar: props.moptions.mce_toolbar\n                    }}\n                />\n\n                {replyMode && <div className=\"float-right\">\n                    <a className=\"action-image\" onClick={() => {setReplyMode(false); props.cancelReply()}}><i className=\"material-icons\">delete</i></a>\n                </div>}\n\n                {forwardMode && <div className=\"float-right\">\n                    <a className=\"action-image\" onClick={() => {setForwardMode(false); props.cancelForward()}}><i className=\"material-icons\">delete</i></a>\n                </div>}\n\n                <div className=\"btn-group mt-2\" role=\"group\" aria-label=\"Mail actions\">\n                    <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-primary\" onClick={() => sendReply(2)}><i className=\"material-icons\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send_and_close')}</button>\n                    {props.moptions.send_as_new && <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-outline-secondary\" onClick={() => sendReply(0)}><i className=\"material-icons text-warning\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send_as_pending')}</button>}\n                    <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-outline-secondary\" onClick={() => sendReply(1)}><i className=\"material-icons text-success\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send_as_active')}</button>\n                </div>\n\n                {props.moptions.files_enabled && <div className=\"btn-group d-block mt-2\" role=\"group\" aria-label=\"Mail actions\">\n                     <MailChatAttachement moptions={props.moptions} fileAttached={(file) => dispatch({ type: \"add\", value: file})} message={props.message}></MailChatAttachement>\n                </div>}\n\n                {attachedFiles && attachedFiles.length > 0 &&\n                <div className=\"pt-2\">{attachedFiles.map((file, index) => (\n                    <button title={t('msg.click_to_remove')} onClick={() => removeAttatchedFile(file, index)} className=\"btn btn-sm btn-outline-info mr-1 mb-1\" title={file.id}>{file.name}</button>\n                ))}</div>}\n\n            </div>}\n\n        </div>\n    </React.Fragment>\n\n}\n\nexport default React.memo(MailChatReply);","import parse, { domToReact } from 'html-react-parser';\nimport React, { useState } from \"react\";\nimport MailChatQuote from \"./MailChatQuote\";\nimport MailChatReply from \"./MailChatReply\";\nimport {useTranslation} from 'react-i18next';\nimport axios from \"axios\";\n\nconst MailChatMessage = ({message, index, totalMessages, noReplyRequired, mode, addLabel, moptions, fetchMessages, fetchingMessages, verifyOwner, setConversationStatus, updateMessages}) => {\n\n    const [expandHeader, setExpandHeader] = useState(false);\n    const [expandBody, setExpandBody] = useState(index + 1 == totalMessages);\n    const [plainBody, setPlainBody] = useState(!!message.undelivered);\n    const [replyMode, setReplyMode] = useState(false);\n    const [forwardMode, setForwardMode] = useState(false);\n    const [expandDeliveryInformation, setExpandDeliveryInformation] = useState(false);\n\n    const formatStringToCamelCase = str => {\n        const splitted = str.split(\"-\");\n        if (splitted.length === 1) return splitted[0];\n        return (\n            splitted[0] +\n            splitted\n                .slice(1)\n                .map(word => word[0].toUpperCase() + word.slice(1))\n                .join(\"\")\n        );\n    };\n\n    const getStyleObjectFromString = str => {\n        const style = {};\n        str.split(\";\").forEach(el => {\n            const [property, value] = el.split(\":\");\n            if (!property) return;\n\n            const formattedProperty = formatStringToCamelCase(property.trim());\n            style[formattedProperty] = value.trim();\n        });\n\n        return style;\n    };\n\n    const processRestAPIError = (err) => {\n        if (!!err.isAxiosError && !err.response) {\n            alert(t('system.error'));\n        } else {\n            if (err.response.data.error) {\n                alert(err.response.data.error);\n            } else {\n                alert(JSON.stringify(err.response.data));\n            }\n        }\n    }\n\n    const unMerge = message => {\n        if (confirm(t('status.are_you_sure'))) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apiunmerge/\" + message.id).then(result => {\n                updateMessages();\n            }).catch((error) => processRestAPIError(error));\n        }\n    }\n\n    if (fetchingMessages == true && (replyMode == true || forwardMode == true)) {\n        setReplyMode(false);\n        setForwardMode(false);\n    }\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    return <div className={\"row pb-2 mb-2 border-secondary\" + (mode !== 'preview' ? ' border-top pt-2' : ' border-bottom')}>\n        <div className=\"col-7 action-image\" onClick={() => setExpandBody(!expandBody)}>\n            <span title={\"Expand message \" + message.id} ><i className=\"material-icons\">{expandBody ? 'expand_less' : 'expand_more'}</i></span>\n            <b>{message.from_name}</b>\n            <small>&nbsp;&lt;{message.from_address}&gt;&nbsp;</small>\n            {message.opened_at && <span className=\"material-icons text-success\" title={message.opened_at_front}>visibility</span>}\n            <small className={!message.status || message.status == 1 ? 'chat-pending' : (message.cls_time ? 'chat-closed' : 'chat-active')}>\n                <i className=\"material-icons\">mail_outline</i>\n                {!message.status || message.status == 1 ? 'Pending response' : 'Responded'}\n            </small>\n            {message.conversation_id_old && <small className=\"text-muted\" title={t('msg.merged_message')} ><span className=\"material-icons mr-0\">merge_type</span>{message.conversation_id_old}</small>}\n        </div>\n        <div className=\"col-5 text-right text-muted\">\n            <small className=\"pr-1\">\n                {message.subjects && message.subjects.map((label, index) => (\n                        <span className=\"badge badge-info mr-1\">{label.name}</span>\n                    ))}\n                {mode !== 'preview' && moptions.can_write && <React.Fragment><i title={t('msg.ar_label')} onClick={() => addLabel(message)} className=\"material-icons action-image text-muted\">label</i> |</React.Fragment>}\n            </small>\n            <small className=\"pr-2\">{message.opened_at && <span className=\"material-icons\" title={t('msg.opened_at_message') + message.opened_at_front}>visibility</span>}{message.udate_front} | {message.udate_ago} {t('msg.ago')}.</small>\n            {mode !== 'preview' && <i onClick={(e) => {e.stopPropagation();setForwardMode(false);setReplyMode(true)}} className=\"material-icons settings text-muted\">reply</i>}\n\n            <i onClick={(e) => {e.stopPropagation(); setExpandHeader(!expandHeader)}} className=\"material-icons settings text-muted\">{expandHeader ? 'expand_less' : 'expand_more'}</i>\n\n            {mode !== 'preview' && <div className=\"dropdown float-right\">\n                <i className=\"material-icons settings text-muted\" id={\"message-id-\"+message.id} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">more_vert</i>\n                <div className=\"dropdown-menu\" aria-labelledby={\"message-id-\"+message.id}>\n                    {moptions.can_write && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();setForwardMode(false);setReplyMode(true)}}><i className=\"material-icons text-muted\" >reply</i>{t('msg.reply')}</a>}\n                    {moptions.can_write && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();setReplyMode(false);setForwardMode(true)}}><i className=\"material-icons text-muted\">forward</i>{t('msg.forward')}</a>}\n                    {message.conversation_id_old && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();unMerge(message);}} ><i className=\"material-icons\">alt_route</i>{t('msg.unmerge')}</a>}\n                    <a className=\"dropdown-item\" target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/mailprint/\" + message.id} ><i className=\"material-icons text-muted\">print</i>{t('mail.print')}</a>\n                    <a className=\"dropdown-item\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/apimaildownload/\" + message.id} ><i className=\"material-icons text-muted\">cloud_download</i>{t('msg.download')}</a>\n                    {moptions.mail_links && moptions.mail_links.map((link, index) => <a className=\"dropdown-item\" target=\"_blank\" href={link.link.replace('{msg_id}',message.id)}>{link.icon && <i className=\"material-icons text-muted\">{link.icon}</i>}{link.title}</a>)}\n                    {moptions.can_write && <a className=\"dropdown-item\" href=\"#\" onClick={() => noReplyRequired(message)}><i className=\"material-icons text-muted\">done</i>{t('msg.no_reply')}</a>}\n                    {message.alt_body && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => setPlainBody(!plainBody)}><i className=\"material-icons text-muted\">visibility</i>{t('msg.plain_html')}</a>}\n                </div>\n            </div>}\n        </div>\n\n\n\n        {expandHeader && <div className=\"col-12\">\n\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{t('msg.info')}</h6>\n\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <ul className=\"fs13 mb-0 list-unstyled\">\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.from')}:</span> <b>{message.from_name}</b> &lt;{message.from_address}&gt;\n                                </li>\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.to')}:</span> {message.to_data_front}\n                                </li>\n                                {message.cc_data_front && <li>\n                                    <span className=\"text-muted\">cc:</span> {message.cc_data_front}\n                                </li>}\n                                {message.bcc_data_front && <li>\n                                    <span className=\"text-muted\">bcc:</span> {message.bcc_data_front}\n                                </li>}\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.reply_to')}:</span> {message.reply_to_data_front}\n                                </li>\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.mailed_by')}:</span> {message.from_host}\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"col-6\">\n                            <ul className=\"fs13 mb-0 list-unstyled\">\n                                {message.accept_time_front && <li>{t('mail.accepted_at')}: {message.accept_time_front}</li>}\n                                {message.plain_user_name && <li>{t('mail.accepted_by')}: <b>{message.plain_user_name}</b></li>}\n                                {message.wait_time && <li>{t('mail.accept_wait_time')}: {message.wait_time_pending}</li>}\n                                {message.lr_time && message.response_time && <li>{t('mail.response_wait_time')}: {message.wait_time_response}, {t('mail.exc_pending_time')}</li>}\n                                {message.lr_time && <li>Response type: {message.response_type == 1 ? t('msg.nrr') : (message.response_type == 2 ? t('msg.orm') : t('msg.rbe'))}</li>}\n                                {message.interaction_time && <li>{t('mail.interaction_time')}: {message.interaction_time_duration}</li>}\n                                {message.cls_time && <li>{t('mail.closed_at')}: {message.cls_time_front}</li>}\n                                {message.conv_duration_front && <li>{t('mail.response_wait_time')}: {message.conv_duration_front}</li>}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>}\n\n        {expandBody && message.undelivered && <div className=\"col-12 alert alert-warning mt-2\">\n            This message was undelivered. <a href={WWW_DIR_JAVASCRIPT  + \"mailconv/downloadrfc822/\" + message.id}>Download sent message.</a>\n\n            <div className=\"text-danger border-bottom my-2 py-2 fs13\">\n                <ul className=\"m-0 pl-3\">\n                {message.delivery_status_keyed.Diagnostic_Code && <li>{message.delivery_status_keyed.Diagnostic_Code}</li>}\n                {message.delivery_status_keyed.taken && <li>{message.delivery_status_keyed.taken}</li>}\n                </ul>\n            </div>\n\n            {message.delivery_status_keyed && <button onClick={(e) => setExpandDeliveryInformation(!expandDeliveryInformation)} className=\"btn fs12 btn-link\">Show technical information.</button>}\n\n            {expandDeliveryInformation && message.delivery_status_keyed && <div>\n\n                <pre>{JSON.stringify(message.delivery_status_keyed, null, 2)}</pre>\n            </div>}\n        </div>}\n\n        {expandBody && plainBody && message.alt_body && <div className=\"col-12 mail-message-body pt-2 pb-2\">\n            <pre className=\"fs12\">{message.alt_body}</pre>\n        </div>}\n\n        {expandBody && message.body_front && !plainBody && <div className=\"col-12 mail-message-body pt-2 pb-2\">\n         {parse(message.body_front, {\n            replace: domNode => {\n                if (domNode.attribs) {\n\n                    var cloneAttr = Object.assign({}, domNode.attribs);\n\n                    if (domNode.attribs.class) {\n                        domNode.attribs.className = domNode.attribs.class;\n                        delete domNode.attribs.class;\n                    }\n\n                    if (domNode.name && domNode.name === 'blockquote') {\n                        if (domNode.attribs.style) {\n                            domNode.attribs.style = getStyleObjectFromString(domNode.attribs.style);\n                        }\n\n                        return <blockquote {...domNode.attribs}><MailChatQuote>{domToReact(domNode.children)}</MailChatQuote></blockquote>\n                    }\n                }\n            }\n    })}\n    </div>}\n\n        {expandBody && message.attachments && message.attachments.length > 0 &&\n            <div className=\"pb-2 col-12\">{message.attachments.map((file) => (\n                <a className=\"btn btn-sm btn-outline-info mr-1\" href={file.download_url} title={file.description}>{file.name}</a>\n            ))}</div>\n        }\n\n\n        {mode !== 'preview' && moptions.can_write && !fetchingMessages && ((index + 1 == totalMessages) || replyMode || forwardMode) && <MailChatReply setConversationStatus={setConversationStatus} verifyOwner={verifyOwner} fetchingMessages={fetchingMessages} fetchMessages={(e) => fetchMessages()} moptions={moptions} forwardMode={forwardMode} cancelForward={(e) => setForwardMode(false)} cancelReply={(e) => setReplyMode(false)} replyMode={replyMode} lastMessage={index + 1 == totalMessages} message={message} noReplyRequired={() => noReplyRequired(message)} />}\n\n    </div>\n}\n\nexport default React.memo(MailChatMessage);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport MailChatMessage from \"./parts_mail/MailChatMessage\";\n\naxios.defaults.headers.common['X-CSRFToken'] = confLH.csrf_token;\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'increment':\n            return {count: state.count + 1};\n        case 'decrement':\n            return {count: state.count - 1};\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n        case 'update_conversation': {\n            state.conv = { ...state.conv, ...action.value };\n            return { ... state};\n        }\n        case 'update_message': {\n            var foundIndex = state.messages.findIndex(x => x.id == action.message.id);\n            state.messages[foundIndex] = action.message;\n\n            if (action.conv) {\n                state.conv = action.conv;\n            }\n\n            if (action.fetching_messages) {\n                state.fetching_messages = action.fetching_messages;\n            }\n\n            state = { ... state};\n\n            return state;\n        }\n\n        case 'update_history': {\n            state = { ...state, ...action.value };\n            if (action.history.msg != '') {\n                state.messages.unshift(action.history);\n            }\n            return state;\n        }\n        case 'init':\n            return {count: state.count - 1};\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst MailChat = props => {\n\n    const messageElement = useRef(null);\n    const messagesElement = useRef(null);\n    const tabsContainer = useRef(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n        messages: [],\n        operators: [],\n        conv: null,\n        loaded: false,\n        saving_remarks: false,\n        old_message_id: 0,\n        last_message: '',\n        remarks: '',\n        last_message_id: 0,\n        lmsop: 0,\n        lgsync: 0,\n        fetching_messages: false\n    });\n\n    const rememberChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('machat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) === -1){\n                    achat_id_array.push(chatId);\n                    localStorage.setItem('machat_id',achat_id_array.join(','));\n                }\n\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const processRestAPIError = (err) => {\n        if (!!err.isAxiosError && !err.response) {\n            alert(t('system.error'));\n        } else {\n            if (err.response.data.error) {\n                alert(err.response.data.error);\n            } else {\n                alert(JSON.stringify(err.response.data));\n            }\n        }\n    }\n\n    const changeStatus = (e) => {\n        if (confirm(t('status.are_you_sure'))) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apichangestatus/\" + state.conv.id + '/' + e.target.value).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        'conv': result.data.conv,\n                    }\n                });\n            }).catch((error) => processRestAPIError(error));\n        }\n    }\n\n    const deleteConversation = () => {\n        if (confirm('Are you sure?')) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apideleteconversation/\" + state.conv.id).then(result => {\n                // If we are in the tab close tab also\n                if (document.getElementById('chat-tab-link-mc'+state.conv.id)) {\n                    lhinst.removeDialogTabMail('mc'+state.conv.id,$('#tabs'),true);\n                } else {\n                    document.location = WWW_DIR_JAVASCRIPT + \"mailconv/conversations\";\n                }\n            }).catch((error) => {\n\n            });\n        }\n    }\n\n    const closeConversation = () => {\n        let hasUnrespondedMessages = false;\n        state.messages.forEach((message) => {\n            if (message.status != 2) {\n                hasUnrespondedMessages = true;\n            }\n        });\n\n        if (hasUnrespondedMessages == false || confirm(t('status.unresponded_messages'))) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apicloseconversation/\" + state.conv.id).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        'conv': result.data.conv,\n                        'messages' : result.data.messages\n                    }\n                });\n\n                // If we are in the tab close tab also\n                if (document.getElementById('chat-tab-link-mc'+state.conv.id)) {\n                    lhinst.removeDialogTabMail('mc'+state.conv.id,$('#tabs'),true);\n                }\n\n            }).catch((error) => {\n\n            });\n        }\n    }\n\n    const noReplyRequired = (message) => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apinoreplyrequired/\" + message.id).then(result => {\n            dispatch({\n                type: 'update_message',\n                message: result.data.message,\n                conv: result.data.conv\n            });\n        }).catch((error) => {\n\n        });\n    }\n\n    const addLabel = (message) => {\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + \"mailconv/apilabelmessage/\" + message.id,hidecallback : () => {\n            updateLabels(message);\n        }});\n    }\n\n    const updateLabels = (message) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"mailconv/apigetlabels/\" + message.id).then(result => {\n            dispatch({\n                type: 'update_message',\n                message: result.data.message\n            });\n        }).catch((error) => {\n\n        });\n    }\n\n    const verifyOwner = (userId) => {\n        if (userId != state.conv.user_id) {\n            loadMainData();\n        }\n    }\n\n    const loadMainData = () => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/loadmainconv/\" + props.chatId + '/(mode)/' + (props.mode != '' ? props.mode : 'normal')).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    'conv': result.data.conv,\n                    'customer_remarks': result.data.customer_remarks,\n                    'messages' : result.data.messages,\n                    'moptions' : result.data.moptions,\n                    'loaded' : true,\n                    'fetching_messages' : false,\n                }\n            });\n\n            if (props.disableRemember === false && props.mode !== 'preview') {\n                rememberChat(props.chatId);\n            }\n\n            if (props.mode !== 'preview' && result.data.conv.pending_sync) {\n                fetchMessages();\n            }\n\n        }).catch((error) => {\n            lhinst.removeDialogTabMail('mc'+ props.chatId,$('#tabs'),true);\n        });\n    }\n\n    const fetchMessages = (message) => {\n        // Reset previous state\n        dispatch({\n            type: 'update',\n            value: {\n                'fetching_messages': true\n            }\n        });\n\n        fetchUntillUpdate(Math.floor(Date.now() / 1000));\n    }\n\n    const fetchUntillUpdate = (ts) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"mailconv/apifetchmails/\" + props.chatId + '/' + ts).then(result => {\n            if (result.data.updated == true) {\n                loadMainData();\n            } else {\n                // Todo handle cleanup\n                setTimeout(() => fetchUntillUpdate(ts),3000);\n            }\n        });\n    }\n\n    const showModal = (params) => {\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + params.url});\n    }\n\n    useEffect(() => {\n        if (state.conv !== null) {\n            const timeout = setTimeout(() => {\n                axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/saveremarks/\" + props.chatId, {data: state.remarks}).then(result => {\n                    dispatch({\n                        type: 'update',\n                        value: {\n                            'saving_remarks': false\n                        }\n                    });\n                });\n            }, 500);\n            return () => clearTimeout(timeout);\n        }\n    },[state.remarks]);\n\n    useEffect(() => {\n        if (state.conv !== null) {\n            const timeout = setTimeout(() => {\n                axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/saveremarks/\" + props.chatId + '/(type)/customer', {data: state.customer_remarks}).then(result => {\n                    dispatch({\n                        type: 'update',\n                        value: {\n                            'saving_customer_remarks': false\n                        }\n                    });\n                });\n            }, 500);\n            return () => clearTimeout(timeout);\n        }\n    },[state.customer_remarks]);\n\n    const saveRemarks = (params) => {\n        dispatch({\n            type: 'update',\n            value: {\n                'saving_remarks': true,\n                'remarks': params\n            }\n        });\n    }\n\n    const saveCustomerRemarks = (params) => {\n        dispatch({\n            type: 'update',\n            value: {\n                'saving_customer_remarks': true,\n                'customer_remarks': params\n            }\n        });\n    }\n\n    const forgetChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('machat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) !== -1) {\n                    achat_id_array.splice(achat_id_array.indexOf(chatId),1);\n                }\n\n                localStorage.setItem('machat_id',achat_id_array.join(','));\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const setConversationStatus = (status) => {\n        dispatch({\n            type: 'update_conversation',\n            value: {\n                'status' : status\n            }\n        });\n    }\n\n    useEffect(() => {\n        loadMainData();\n\n        function mailChatModified(chatId) {\n            if (props.chatId == chatId) {\n                loadMainData();\n            }\n        }\n\n        function mailLabelsModified(chatId, messageId) {\n            if (props.chatId == chatId) {\n                updateLabels({\"id\": messageId});\n            }\n        }\n\n        ee.addListener('mailChatModified', mailChatModified);\n        ee.addListener('mailLabelsModified', mailLabelsModified);\n        ee.addListener('mailMerged', mailChatModified);\n\n        return function cleanup() {\n           ee.removeListener('mailChatModified', mailChatModified);\n           ee.removeListener('mailLabelsModified', mailLabelsModified);\n           forgetChat(props.chatId)\n        };\n    },[]);\n\n    useEffect(() => {\n        if (state.loaded == true) {\n            var container = tabsContainer.current;\n            ee.emitEvent('mailChatContentLoaded', [props.chatId]);\n        }\n    },[state.loaded]);\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    if (state.loaded == false) {\n        return <span>...</span>\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"row\">\n                <div className={\"chat-main-left-column \" + (props.mode == 'preview' ? 'col-12' : 'col-7')}>\n\n                    {props.mode !== 'preview' && <h1 className=\"pb-2\">\n                        <i className=\"material-icons\">{state.conv.start_type == 1 ? 'call_made' : 'call_received'}</i>{state.conv.undelivered && <i title=\"Undelivered e-mail\" className=\"text-danger material-icons\">sms_failed</i>}{state.conv.subject}\n                    </h1>}\n\n                    <div>\n                        {state.messages.map((message, index) => (\n                            <MailChatMessage setConversationStatus={(e) => setConversationStatus(e)} verifyOwner={(e) => verifyOwner(e)} moptions={state.moptions} fetchMessages={(e) => fetchMessages(message)} fetchingMessages={state.fetching_messages} mode={props.mode} key={'msg_mail_' + props.chatId + '_' + index + '_' + message.id} totalMessages={state.messages.length} index={index} message={message} noReplyRequired={(e) => noReplyRequired(message)} addLabel={(e) => addLabel(message)} updateMessages={(e) => loadMainData()}/>\n                        ))}\n\n                        {state.fetching_messages && <div className=\"alert alert-success p-1 pl-2\" role=\"alert\">{t('mail.send_fetching')}</div>}\n                    </div>\n                </div>\n                <div className={\"chat-main-right-column \" + (props.mode == 'preview' ? 'd-none' : 'col-5')}>\n                    <div role=\"tabpanel\">\n                        <ul className=\"nav nav-pills\" role=\"tablist\" ref={tabsContainer}>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link active\" href={\"#mail-chat-info-\"+props.chatId} aria-controls={\"#mail-chat-info-\"+props.chatId} title={t('mail.information')} role=\"tab\" data-toggle=\"tab\"><i className=\"material-icons mr-0\">info_outline</i></a></li>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link\" href={\"#mail-chat-remarks-\"+props.chatId} aria-controls={\"#mail-chat-remarks-\"+props.chatId} role=\"tab\" data-toggle=\"tab\" title={t('mail.remarks')}><i className=\"material-icons mr-0\">mode_edit</i></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div role=\"tabpanel\" className=\"tab-pane\" id={\"mail-chat-remarks-\"+props.chatId}>\n\n                                <div className={\"pb-1 text-success\" + (state.saving_customer_remarks ? ' text-warning' : '')}><span className=\"material-icons\">mode_edit</span> Customer remarks</div>\n                                <div>\n                                    <textarea disabled={!state.moptions.can_write} placeholder=\"Enter your remarks here.\" onKeyUp={(e) => saveCustomerRemarks(e.target.value)} className=\"form-control mh150\" defaultValue={state.customer_remarks}></textarea>\n                                </div>\n\n                                <div className={\"pb-1 text-success\" + (state.saving_remarks ? ' text-warning' : '')}><span className=\"material-icons\">mode_edit</span> Conversation remarks</div>\n                                <div>\n                                    {state.conv && <textarea disabled={!state.moptions.can_write} placeholder=\"Enter your remarks here.\" onKeyUp={(e) => saveRemarks(e.target.value)} class=\"form-control mh150\" defaultValue={state.conv.remarks}></textarea>}\n                                </div>\n\n                            </div>\n                            <div role=\"tabpanel\" className=\"tab-pane active\" id={\"mail-chat-info-\"+props.chatId}>\n\n                                {state.moptions.can_write && <div className=\"pb-2\">\n                                    <a className=\"btn btn-outline-secondary btn-sm\" onClick={() => closeConversation()}><i className=\"material-icons\">close</i>{t('mail.close')}</a>\n                                </div>}\n\n                                <div id={\"mail-external-details-\"+props.chatId}></div>\n\n                                {state.conv && <table className=\"table table-sm\">\n                                    <tr>\n                                        <td colSpan=\"2\">\n\n                                            <div className=\"row\">\n                                                <div className=\"col-6\">\n                                                    <span className=\"action-image\" onClick={() => showModal({url: \"mailconv/mailhistory/\" + props.chatId})}><i className=\"material-icons\">history</i>{t('mail.interactions_history')}</span>\n                                                </div>\n                                                {state.moptions.can_write && <div className=\"col-6\">\n                                                    <span className=\"action-image\" onClick={() => showModal({url: \"mailconv/transfermail/\" + props.chatId})}><i className=\"material-icons\">supervisor_account</i>{t('mail.transfer_chat')}</span>\n                                                </div>}\n                                                {state.moptions.can_write && <div className=\"col-6\">\n                                                    <span className=\"action-image\" onClick={() => showModal({url: \"mailconv/merge/\" + props.chatId})}><i className=\"material-icons\">merge_type</i>{t('mail.merge_chat')}</span>\n                                                </div>}\n                                                <div className=\"col-6\">\n                                                    <a className=\"text-dark\" target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/mailprintcovnersation/\" + props.chatId} ><i className=\"material-icons\">print</i>{t('mail.print')}</a>\n                                                </div>\n                                                {state.moptions.can_write && state.conv.can_delete && <div className=\"col-6\">\n                                                    <span className=\"action-image mr-0\" onClick={(e) => deleteConversation()}><i className=\"material-icons\">delete</i>{t('mail.delete')}</span>\n                                                </div>}\n                                           </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.sender')}</td>\n                                        <td>{state.conv.lang && state.moptions.lang_dir && <img src={state.moptions.lang_dir + '/' + state.conv.lang + '.png'} /> } {state.conv.from_name} &lt;{state.conv.from_address}&gt;</td>\n                                    </tr>\n                                    {state.conv.phone && <tr>\n                                        <td>{t('mail.phone')}</td>\n                                        <td><a href={\"tel:\"+state.conv.phone}><span className=\"material-icons\">dialpad</span>{state.conv.phone}</a></td>\n                                    </tr>}\n                                    <tr>\n                                        <td colSpan=\"2\">\n\n                                            {!state.conv.status && <span><i className=\"material-icons chat-pending\">mail_outline</i>{t('status.pending')}</span>}\n\n                                            {(!state.conv.status || state.conv.status == 1) && state.conv.opened_at && <span><span className=\"ml-2 material-icons text-success\" title={t('status.opened_at')}>visibility</span>{state.conv.opened_at_front}</span>}\n\n                                            {(state.conv.status == 2 || state.conv.status == 1) && <div className=\"input-group input-group-sm\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        {!state.conv.status && <i className=\"material-icons chat-pending mr-0\">mail_outline</i>}\n                                                        {state.conv.status == 1 && <i className=\"material-icons chat-active mr-0\">mail_outline</i>}\n                                                        {state.conv.status == 2 && <i className=\"material-icons chat-closed mr-0\">mail_outline</i>}\n                                                    </span>\n                                                </div>\n                                                <select className=\"form-control form-control-sm\" value={state.conv.status} onChange={(e) => changeStatus(e)} defaultValue={state.conv.status}>\n                                                    <option value=\"\">{t('status.pending')}</option>\n                                                    <option value=\"1\">{t('status.active')}</option>\n                                                    {state.conv.status == 2 && <option value=\"2\">{t('status.closed')}</option>}\n                                                </select>\n                                                {state.conv.opened_at && <div className=\"input-group-append\"><span className=\"input-group-text\"><span className=\"ml-2 material-icons text-success\" title={t('status.opened_at')}>visibility</span>{state.conv.opened_at_front}</span></div>}\n                                            </div>}\n\n\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.department')}</td>\n                                        <td>\n                                            <span title={state.conv.dep_id}>{state.conv.department_name}</span>, <span title={state.conv.mailbox_id}>{state.conv.mailbox_front.name} ({state.conv.mailbox_front.mail})</span>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.received')}</td>\n                                        <td>{state.conv.udate_front}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td>\n                                            <button data-success={t('mail.copied')}\n                                                    className=\"btn pl-0 btn-xs btn-link py-0\"\n                                                    data-copy={window.location.origin + WWW_DIR_JAVASCRIPT + \"front/default/(mid)/\" + state.conv.id + \"/#!#chat-id-mc\"+state.conv.id}\n                                                    onClick={(e) => {lhinst.copyContent($(e.target))}} type=\"button\"><i className=\"material-icons\">link</i>{t('mail.copy_link')}\n                                            </button>\n                                            {state.conv.id}\n                                            {state.conv.follow_up_id && <a target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/view/\" + state.conv.follow_up_id}><span className=\"material-icons\">launch</span>{t('mail.follow_up')} {state.conv.follow_up_id}</a>}\n                                        </td>\n                                    </tr>\n                                    {state.conv.accept_time && <tr>\n                                        <td>{t('mail.last_accepted_at')}</td>\n                                        <td>{state.conv.accept_time_front}{state.conv.wait_time_pending && <React.Fragment> | {t('mail.wait_time')} {state.conv.wait_time_pending}</React.Fragment>}</td>\n                                    </tr>}\n                                    {state.conv.response_time && <tr>\n                                        <td>{t('mail.last_responded_at')}</td>\n                                        <td>{state.conv.lr_time_front}{state.conv.wait_time_response && <React.Fragment> | {t('mail.wait_time')} {state.conv.wait_time_response}</React.Fragment>}</td>\n                                    </tr>}\n                                    {state.conv.cls_time && <tr>\n                                        <td>{t('mail.closed_at')}</td>\n                                        <td>{state.conv.cls_time_front}</td>\n                                    </tr>}\n                                    {state.conv.conv_duration && <tr>\n                                        <td>{t('mail.conv_duration')}</td>\n                                        <td>{state.conv.conv_duration_front}</td>\n                                    </tr>}\n                                    {state.conv.interaction_time && <tr>\n                                        <td>{t('mail.last_interaction_time')}</td>\n                                        <td>{state.conv.interaction_time_duration}</td>\n                                    </tr>}\n                                    {state.conv.priority && <tr>\n                                        <td>{t('mail.priority')}</td>\n                                        <td>{state.conv.priority}</td>\n                                    </tr>}\n                                    <tr>\n                                        <td title={state.conv.user_id}>{t('mail.chat_owner')}</td>\n                                        <td>{state.conv.plain_user_name}</td>\n                                    </tr>\n                                </table>}\n\n                                <div id={\"mail-external-below-\"+props.chatId}></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default MailChat"],"names":["MailChatQuote","children","useState","expandBody","setExpandBody","className","onClick","React","MailChatAttatchement","props","hightlight","files","uploading","uploadProgress","successfullUploaded","progress","fileInputRef","dropAreaRef","openFileDialog","bind","onFilesAddedUI","onDragOver","onDragLeave","onDrop","onPaste","onFilesAdded","uploadFiles","sendRequest","chooseFromUploaded","fileUploaded","t","this","ruleTest","RegExp","moptions","uploadErrors","forEach","file","test","type","name","push","size","length","alert","join","setState","prevProps","prevState","state","promises","Promise","all","fileAttached","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","Math","round","response","_inst","onreadystatechange","readyState","JSON","parse","copy","formData","FormData","append","open","WWW_DIR_JAVASCRIPT","confLH","csrf_token","send","current","click","evt","target","array","fileListToArray","preventDefault","ondragover","ondragleave","ondrop","window","attatchReplyCurrent","e","items","clipboardData","i","getAsFile","dataTransfer","list","item","lhc","revealModal","ref","onChange","id","multiple","PureComponent","withTranslation","MailReplyRecipient","useReducer","recipients","value","recipient","filter","_","index","field","dispatch","setReciepints","setRecipients","useEffect","useTranslation","i18n","readOnly","style","fontSize","reply","map","mail","disabled","placeholder","email","cc","bcc","MailSendStatus","status","role","errors","general","content","raw_error","document","location","reload","rows","MailChatReply","replyMode","setReplyMode","forwardMode","setForwardMode","replyIntro","setReplyIntro","replySignature","setReplySignature","loadedReplyData","setLoadedReplyData","recipientsModified","setModifiedRecipients","replySendStatus","setReplySendStatus","sendInProgress","setSendInProgress","underReplySignature","setUnderReplySignature","isOwner","setIsOwner","attachedFiles","currentAttatchedFiles","useRef","sendReply","replyPayload","tinyMCE","get","message","getContent","axios","then","result","data","fetchMessages","setConversationStatus","conv_status","error","request","console","log","config","intro","signature","signature_under","user_id","verifyOwner","is_owner","fetchingMessages","response_type","noReplyRequired","hide_recipients","send_tried","mode","tinymceScriptSrc","tiny_mce_path","initialValue","body_front","onInit","focus","init","cache_suffix","height","automatic_uploads","files_enabled","file_picker_types","images_upload_url","templates","paste_data_images","relative_urls","browser_spellcheck","paste_as_text","contextmenu","menubar","plugins","mce_plugins","toolbar_mode","toolbar","mce_toolbar","cancelReply","cancelForward","send_as_new","MailChatAttachement","title","removeAttatchedFile","MailChatMessage","totalMessages","addLabel","updateMessages","expandHeader","setExpandHeader","undelivered","plainBody","setPlainBody","expandDeliveryInformation","setExpandDeliveryInformation","from_name","from_address","opened_at","opened_at_front","cls_time","conversation_id_old","subjects","label","can_write","udate_front","udate_ago","stopPropagation","href","confirm","err","isAxiosError","stringify","unMerge","mail_links","link","replace","icon","alt_body","to_data_front","cc_data_front","bcc_data_front","reply_to_data_front","from_host","accept_time_front","plain_user_name","wait_time","wait_time_pending","lr_time","response_time","wait_time_response","interaction_time","interaction_time_duration","cls_time_front","conv_duration_front","delivery_status_keyed","Diagnostic_Code","taken","domNode","attribs","Object","assign","str","split","el","property","formattedProperty","splitted","slice","word","toUpperCase","formatStringToCamelCase","trim","domToReact","attachments","download_url","description","lastMessage","reducer","action","count","conv","foundIndex","messages","findIndex","x","fetching_messages","history","msg","unshift","Error","tabsContainer","operators","saving_remarks","old_message_id","last_message","remarks","last_message_id","lmsop","lgsync","updateLabels","loadMainData","chatId","customer_remarks","disableRemember","localStorage","achat_id_array","achat_id","getItem","indexOf","setItem","rememberChat","pending_sync","lhinst","removeDialogTabMail","$","fetchUntillUpdate","floor","Date","now","ts","updated","setTimeout","showModal","params","url","timeout","clearTimeout","mailChatModified","mailLabelsModified","messageId","ee","addListener","removeListener","splice","forgetChat","emitEvent","start_type","subject","key","hidecallback","saving_customer_remarks","onKeyUp","defaultValue","class","hasUnrespondedMessages","getElementById","colSpan","can_delete","lang","lang_dir","src","phone","changeStatus","dep_id","department_name","mailbox_id","mailbox_front","origin","copyContent","follow_up_id","accept_time","lr_time_front","conv_duration","priority"],"sourceRoot":""}