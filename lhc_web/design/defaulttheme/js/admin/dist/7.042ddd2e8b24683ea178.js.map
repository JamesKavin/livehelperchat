{"version":3,"sources":["webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatQuote.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatAttachement.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailReplyRecipient.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailSendStatus.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatReply.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatMessage.js","webpack://LHCReactAPPAdmin/./src/components/MailChat.js"],"names":["React","memo","children","useState","expandBody","setExpandBody","Fragment","className","onClick","MailChatAttatchement","props","hightlight","files","uploading","uploadProgress","successfullUploaded","progress","fileInputRef","createRef","dropAreaRef","openFileDialog","bind","onFilesAddedUI","onDragOver","onDragLeave","onDrop","onPaste","onFilesAdded","uploadFiles","sendRequest","chooseFromUploaded","fileUploaded","t","this","ruleTest","RegExp","moptions","uploadErrors","forEach","file","test","type","name","push","size","length","alert","join","setState","prevProps","prevState","state","promises","Promise","all","fileAttached","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","Math","round","response","_inst","onreadystatechange","readyState","JSON","parse","copy","formData","FormData","append","open","WWW_DIR_JAVASCRIPT","send","current","click","evt","target","array","fileListToArray","preventDefault","ondragover","ondragleave","ondrop","window","attatchReplyCurrent","e","items","clipboardData","i","getAsFile","dataTransfer","list","item","lhc","revealModal","ref","onChange","id","multiple","PureComponent","withTranslation","useReducer","recipients","value","recipient","filter","_","index","field","dispatch","setReciepints","setRecipients","useEffect","useTranslation","i18n","style","fontSize","reply","map","mail","placeholder","email","cc","bcc","status","role","errors","general","content","replyMode","setReplyMode","forwardMode","setForwardMode","replyIntro","setReplyIntro","replySignature","setReplySignature","loadedReplyData","setLoadedReplyData","recipientsModified","setModifiedRecipients","replySendStatus","setReplySendStatus","sendInProgress","setSendInProgress","underReplySignature","setUnderReplySignature","attachedFiles","currentAttatchedFiles","useRef","axios","get","confLH","csrf_token","post","message","then","result","data","intro","signature","signature_under","fetchingMessages","aria-label","disabled","response_type","noReplyRequired","send_tried","mode","tinymceScriptSrc","initialValue","body_front","onInit","tinyMCE","focus","init","height","automatic_uploads","file_picker_types","images_upload_url","templates","paste_data_images","relative_urls","browser_spellcheck","paste_as_text","contextmenu","menubar","plugins","toolbar_mode","toolbar","cancelReply","cancelForward","replyPayload","getContent","fetchMessages","error","request","console","log","config","MailChatAttachement","title","removeAttatchedFile","totalMessages","addLabel","expandHeader","setExpandHeader","from_name","from_address","cls_time","subjects","label","udate_front","udate_ago","stopPropagation","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","to_data_front","cc_data_front","bcc_data_front","reply_to_data_front","from_host","accept_time_front","plain_user_name","wait_time","wait_time_pending","lr_time","response_time","wait_time_response","interaction_time","interaction_time_duration","cls_time_front","conv_duration_front","replace","domNode","attribs","Object","assign","str","split","el","property","formattedProperty","splitted","slice","word","toUpperCase","formatStringToCamelCase","trim","domToReact","attachments","download_url","description","lastMessage","reducer","action","count","foundIndex","messages","findIndex","x","conv","fetching_messages","history","msg","unshift","Error","MailChat","tabsContainer","operators","saving_remarks","old_message_id","last_message","remarks","last_message_id","lmsop","lgsync","loadMainData","chatId","disableRemember","localStorage","achat_id_array","achat_id","getItem","indexOf","setItem","rememberChat","lhinst","removeDialogTabMail","$","showModal","params","url","timeout","setTimeout","clearTimeout","splice","forgetChat","start_type","subject","key","hidecallback","aria-controls","onKeyUp","class","defaultValue","hasUnrespondedMessages","confirm","document","getElementById","colSpan","can_delete","location","department_name","accept_time","lr_time_front","conv_duration","priority"],"mappings":"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","file":"7.042ddd2e8b24683ea178.js","sourcesContent":["import React, { useState} from \"react\";\n\nconst MailChatQuote = ({children}) => {\n\n    const [expandBody, setExpandBody] = useState(false);\n\n    return <React.Fragment>\n        <div className=\"pb-2\"><button onClick={() => setExpandBody(!expandBody)} className=\"btn btn-sm btn-outline-secondary\">...</button></div>\n        {expandBody && children}\n    </React.Fragment>\n\n}\n\nexport default React.memo(MailChatQuote);","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\n\n/**\n * https://github.com/LukasMarx/react-file-upload\n * */\nclass MailChatAttatchement extends PureComponent {\n\n    state = {\n        hightlight: false,\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false,\n        progress: ''\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.fileInputRef = React.createRef();\n        this.dropAreaRef = React.createRef();\n\n        // UI Actions\n        this.openFileDialog = this.openFileDialog.bind(this);\n        this.onFilesAddedUI = this.onFilesAddedUI.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onPaste = this.onPaste.bind(this);\n\n        // Backend actions\n        this.onFilesAdded = this.onFilesAdded.bind(this);\n        this.uploadFiles = this.uploadFiles.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n        this.chooseFromUploaded = this.chooseFromUploaded.bind(this);\n        this.fileUploaded = this.fileUploaded.bind(this);\n    }\n\n    onFilesAdded(files) {\n        const { t } = this.props;\n\n        const ruleTest = new RegExp(\"(\\.|\\/)(\" + this.props.moptions['fop_op'] + \")$\",\"i\");\n\n        let uploadErrors = [];\n        files.forEach(file => {\n\n            if (!(ruleTest.test(file.type) || ruleTest.test(file.name))) {\n                uploadErrors.push(file.name + ': ' + t('file.incorrect_type'));\n            }\n\n            if (file.size > this.props.moptions['fop_size']) {\n                uploadErrors.push(file.name + ': '+ t('file.to_big_file'));\n            }\n        });\n\n        if (uploadErrors.length > 0) {\n            alert(uploadErrors.join(\"\\n\"));\n        } else {\n            this.setState({\n                'files': files\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.files.length > 0 && this.state.uploading == false) {\n            this.uploadFiles();\n        }\n    }\n\n    async uploadFiles() {\n        this.setState({ uploadProgress: {}, uploading: true });\n        const promises = [];\n        this.state.files.forEach(file => {\n            promises.push(this.sendRequest(file));\n        });\n        try {\n            await Promise.all(promises);\n            this.setState({ successfullUploaded: true, uploading: false,  files : []});\n        } catch (e) {\n            // Not Production ready! Do some error handling here instead...\n            this.setState({ successfullUploaded: true, uploading: false,  files : [] });\n        }\n    }\n\n    fileUploaded(file) {\n        this.props.fileAttached(file);\n    }\n\n    sendRequest(file) {\n        const { t } = this.props;\n\n        return new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n\n            req.upload.addEventListener(\"progress\", event => {\n                if (event.lengthComputable) {\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                        state: \"pending\",\n                        percentage: (event.loaded / event.total) * 100\n                    };\n                    this.setState({ progress: t('file.uploading') + ' ' + Math.round((event.loaded / event.total) * 100) + '%' });\n                }\n            });\n\n            req.upload.addEventListener(\"load\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                this.setState({ progress: '' });\n                resolve(req.response);\n            });\n\n            var _inst = this;\n\n            req.onreadystatechange = function() {\n                if (req.readyState === 4) {\n                    _inst.fileUploaded(JSON.parse(req.response));\n                }\n            }\n\n            req.upload.addEventListener(\"error\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"error\", percentage: 0 };\n                this.setState({ progress: copy });\n                reject(req.response);\n            });\n\n            const formData = new FormData();\n            formData.append(\"files\", file, file.name);\n\n            req.open(\"POST\", WWW_DIR_JAVASCRIPT + 'mailconv/uploadfile');\n            req.send(formData);\n        });\n    }\n\n    openFileDialog() {\n        if (this.state.uploading) return;\n        this.fileInputRef.current.click();\n    }\n\n    onFilesAddedUI(evt) {\n        const files = evt.target.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        this.setState({hightlight: true})\n    }\n\n    componentDidMount() {\n        if (this.dropAreaRef.current) {\n            this.dropAreaRef.current.ondragover = this.onDragOver;\n            this.dropAreaRef.current.ondragleave = this.onDragLeave;\n            this.dropAreaRef.current.ondrop = this.onDrop;\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.dropAreaRef.current) {\n            this.dropAreaRef.current.ondragover = null;\n            this.dropAreaRef.current.ondragleave = null;\n            this.dropAreaRef.current.ondrop = null;\n        }\n\n        window.attatchReplyCurrent = null;\n    }\n\n    onPaste(e) {\n        var items = e && e.clipboardData &&\n            e.clipboardData.items,\n            data = {files: []};\n\n        if (items && items.length) {\n            const array = [];\n            for (var i = 0; i < items.length; i++) {\n                var file = items[i].getAsFile && items[i].getAsFile();\n                if (file){\n                    array.push(file);\n                }\n            }\n\n            if (array.length > 0) {\n                this.onFilesAdded(array);\n            }\n        }\n    }\n\n    onDragLeave(event) {\n        this.setState({hightlight: false})\n    }\n\n    onDrop(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        const files = event.dataTransfer.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n        this.setState({hightlight: false})\n    }\n\n    fileListToArray(list) {\n        const array = [];\n        for (var i = 0; i < list.length; i++) {\n            array.push(list.item(i));\n        }\n        return array;\n    }\n\n    chooseFromUploaded() {\n\n        const { t } = this.props;\n        \n        lhc.revealModal({\n            'title' : t('file.choose_uploaded'),\n            'iframe':true,\n            'height':500,\n            'url':WWW_DIR_JAVASCRIPT +'mailconv/attatchfile/(attachment)/1'\n        });\n\n        var _inst = this;\n\n        window.attatchReplyCurrent = function(file) {\n             _inst.props.fileAttached(file);\n        }\n    }\n\n    render() {\n\n            const { t } = this.props;\n\n            return (\n                <React.Fragment>\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={this.chooseFromUploaded} ><i className=\"material-icons\">list</i> {t('file.choose_uploaded')}</button>\n                    <button ref={this.dropAreaRef} onClick={this.openFileDialog} className={\"btn btn-sm \" + (this.state.hightlight == true ? 'btn-outline-primary' : 'btn-outline-secondary')}><i className=\"material-icons\">attach_file</i> {this.state.progress || t('file.drop_here')}</button>\n                    <input onChange={this.onFilesAddedUI} ref={this.fileInputRef} id=\"fileupload\" type=\"file\" name=\"files[]\" multiple className=\"d-none\" />\n                </React.Fragment>\n            );\n     }\n}\n\nexport default withTranslation('mail_chat')(MailChatAttatchement);","import React, { useEffect, useState, useReducer } from \"react\";\n\nimport {useTranslation} from 'react-i18next';\n\nconst MailReplyRecipient = props => {\n\n    const [recipients, dispatch] = useReducer((recipients, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...recipients, value];\n\n            case \"add_recipient\":\n                recipients = { ... recipients};\n                recipients[value].push({\"name\" : \"\", \"email\" : \"\"});\n                return recipients;\n\n            case \"remove_recipient\":\n                recipients = { ... recipients};\n                recipients[value.recipient] = recipients[value.recipient].filter((_, index) => index !== value.index);\n                return recipients;\n\n            case \"set\":\n                return value;\n\n            case 'set_attribute':\n                recipients = { ... recipients};\n                recipients[value.value.type][value.value.index][value.value.field] = value.value.value;\n                return recipients;\n                break;\n\n            case \"cleanup\":\n                return [];\n            case \"remove\":\n                return recipients.filter((_, index) => index !== value);\n            default:\n                return recipients;\n        }\n    }, []);\n\n    const setReciepints = (type, value) => {\n        dispatch({'type' : type, \"value\" : value});\n        props.setRecipients(recipients);\n    }\n\n    useEffect(() => {\n        dispatch({\"type\" : \"set\", \"value\" : props.recipients});\n        props.setRecipients(props.recipients);\n    },[props.recipients]);\n\n    const { t, i18n } = useTranslation('mail_chat');\n    \n    return <div className=\"row\">\n\n        <div className=\"col-12 text-secondary font-weight-bold fs13 pb-1\">{t('r.recipients')} <i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"add_recipient\",\"reply\")} style={{fontSize: \"20px\"}}>add</i> Cc <i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"add_recipient\",\"cc\")} style={{fontSize: \"20px\"}}>add</i> Bcc <i onClick={(e) => setReciepints(\"add_recipient\",\"bcc\")} className=\"material-icons settings text-muted\" style={{fontSize: \"20px\"}}>add</i></div>\n\n        <div className=\"col-6\">\n            {recipients.reply && recipients.reply.map((mail, index) => (\n                <div className=\"form-row pb-1\">\n                    <div className=\"col-1 text-secondary fs13 pt-1\">{t('r.to')}:</div>\n                    <div className=\"col-5\">\n                        <div className=\"input-group input-group-sm\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                            </div>\n                            <input type=\"text\" className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"reply\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                        </div>\n                    </div>\n                    <div className=\"col-5\"><input type=\"text\" placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"reply\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                    {index > 0 && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"reply\", \"index\" : index})}>remove</i></div>}\n                </div>\n            ))}\n        </div>\n\n        <div className=\"col-6\">\n        {recipients.cc && recipients.cc.map((mail, index) => (\n            <div className=\"form-row pb-1\">\n                <div className=\"col-1 text-secondary fs13 pt-1\">Cc:</div>\n                <div className=\"col-5\">\n                    <div className=\"input-group input-group-sm\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                        </div>\n                        <input type=\"text\" className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"cc\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                    </div>\n                </div>\n                <div className=\"col-5\"><input type=\"text\" placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"cc\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"cc\", \"index\" : index})}>remove</i></div>\n            </div>\n        ))}\n        </div>\n\n        <div className=\"col-6\">\n        {recipients.bcc && recipients.bcc.map((mail, index) => (\n            <div className=\"form-row pb-1\">\n                <div className=\"col-1 text-secondary fs13 pt-1\">Bcc:</div>\n                <div className=\"col-5\">\n                    <div className=\"input-group input-group-sm\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                        </div>\n                        <input type=\"text\" className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"bcc\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                    </div>\n                </div>\n                <div className=\"col-5\"><input type=\"text\" placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"bcc\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"bcc\", \"index\" : index})}>remove</i></div>\n            </div>\n        ))}\n        </div>\n\n\n    </div>\n}\n\nexport default React.memo(MailReplyRecipient);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\n\nconst MailSendStatus = props => {\n\n    const [expandBody, setExpandBody] = useState(false);\n\n    return <React.Fragment>\n        {props.status.send && <div className=\"alert alert-success p-1 pl-2\" role=\"alert\">Success!</div>}\n        {!props.status.send && <div className=\"alert alert-danger p-1 pl-2\" role=\"alert\">\n            <ul className=\"mb-0\">\n                {props.status.errors.general && <li>{props.status.errors.general}</li>}\n                {props.status.errors.reply && <li>{props.status.errors.reply}</li>}\n                {props.status.errors.content && <li>{props.status.errors.content}</li>}\n            </ul>\n        </div>}\n        \n    </React.Fragment>\n\n}\n\nexport default React.memo(MailSendStatus);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from \"axios\";\nimport MailChatAttachement from \"./MailChatAttachement\";\nimport MailReplyRecipient from \"./MailReplyRecipient\";\nimport MailSendStatus from \"./MailSendStatus\";\nimport {useTranslation} from 'react-i18next';\n\nconst MailChatReply = props => {\n\n    const [replyMode, setReplyMode] = useState(false);\n    const [forwardMode, setForwardMode] = useState(false);\n    const [replyContent, setReplyContent] = useState(null);\n    const [replyIntro, setReplyIntro] = useState(null);\n    const [replySignature, setReplySignature] = useState(null);\n    const [loadedReplyData, setLoadedReplyData] = useState(false);\n    const [recipients, setRecipients] = useState([]);\n    const [recipientsModified, setModifiedRecipients] = useState([]);\n    const [replySendStatus, setReplySendStatus] = useState([]);\n    const [sendInProgress, setSendInProgress] = useState(false);\n    const [underReplySignature, setUnderReplySignature] = useState(false);\n\n    const [attachedFiles, dispatch] = useReducer((attachedFiles, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...attachedFiles, value];\n            case \"cleanup\":\n                return [];\n            case \"remove\":\n                return attachedFiles.filter((_, index) => index !== value);\n            default:\n                return attachedFiles;\n        }\n    }, []);\n\n    const currentAttatchedFiles = useRef();\n    currentAttatchedFiles.current = attachedFiles;\n\n    let replyContentDirect = null;\n\n    const handleEditorChange = (content, editor) => {\n        replyContentDirect = content;\n    }\n\n    const sendReply = () => {\n        let replyPayload = {\n            'recipients' : recipientsModified,\n            'content' : tinyMCE.get(\"reply-to-mce-\"+props.message.id).getContent(),\n            'attatchements' : attachedFiles,\n            'mode' : (replyMode == true ? 'reply' : 'forward')\n        };\n\n        setSendInProgress(true);\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apisendreply/\" + props.message.id, replyPayload).then(result => {\n            setReplySendStatus(result.data);\n            setSendInProgress(false);\n\n            if (result.data.send == true) {\n                props.fetchMessages();\n            }\n\n        }).catch(error => {\n            setSendInProgress(false);\n            // Error 😨\n            if (error.response) {\n                /*\n                 * The request was made and the server responded with a\n                 * status code that falls out of the range of 2xx\n                 */\n                if (error.response.status === 400) {\n                    setReplySendStatus(error.response.data);\n                } else {\n                    alert('Unhandled error.' + error.response.data);\n                }\n\n            } else if (error.request) {\n                /*\n                 * The request was made but no response was received, `error.request`\n                 * is an instance of XMLHttpRequest in the browser and an instance\n                 * of http.ClientRequest in Node.js\n                 */\n                console.log(error.request);\n            } else {\n                // Something happened in setting up the request and triggered an Error\n                console.log('Error', error.message);\n            }\n\n            console.log(error.config);\n\n        });\n    }\n\n    const removeAttatchedFile = (file, index) => {\n        dispatch({ type: \"remove\", value: index });\n        if (file.new === true) {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            currentAttatchedFiles.current.map((file, index) => {\n                if (file.new === true) {\n                    axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n                }\n            })\n        }\n    },[]);\n\n    useEffect(() => {\n        if ((replyMode == true || forwardMode == true) && loadedReplyData == false) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/getreplydata/\" + props.message.id + '/' + (replyMode == true ? 'reply' : 'forward')).then(result => {\n                setLoadedReplyData(true);\n                setReplyIntro(result.data.intro);\n                setReplySignature(result.data.signature);\n                setRecipients(result.data.recipients);\n                setUnderReplySignature(result.data.signature_under);\n            });\n        } else if (replyMode == false && forwardMode == false && loadedReplyData == true) {\n            setLoadedReplyData(false);\n            if (currentAttatchedFiles.current.length > 0) {\n                currentAttatchedFiles.current.map((file, index) => {\n                    if (file.new === true) {\n                        axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n                    }\n                });\n                dispatch({ type: \"cleanup\"})\n            }\n        }\n    },[replyMode,forwardMode]);\n\n    if (props.replyMode == true && replyMode == false) {\n        if (forwardMode == true) {\n            setLoadedReplyData(false);\n            setForwardMode(false);\n        }\n        setReplyMode(true);\n    }\n\n    if (props.forwardMode == true && forwardMode == false) {\n        if (replyMode == true) {\n            setLoadedReplyData(false);\n            setReplyMode(false);\n        }\n        setForwardMode(true);\n    }\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    return <React.Fragment>\n        <div className=\"col-12 mt-2 pt-3 pb-2\">\n\n            {!replyMode && !forwardMode && !props.fetchingMessages && <div className=\"btn-group\" role=\"group\" aria-label=\"Mail actions\">\n                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => {setForwardMode(false);setReplyMode(true);}}><i className=\"material-icons\">reply</i>{t('msg.reply')}</button>\n                <button disabled={props.message.response_type == 1} type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => props.noReplyRequired()}><i className=\"material-icons\">done</i>{t('msg.nrr')}</button>\n                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => {setReplyMode(false);setForwardMode(true)}}><i className=\"material-icons\">forward</i>{t('msg.forward')}</button>\n            </div>}\n\n            {!props.fetchingMessages && (replyMode || forwardMode) && loadedReplyData && <div className=\"shadow p-2\">\n\n                {replySendStatus.send_tried && <MailSendStatus status={replySendStatus} />}\n                \n                <MailReplyRecipient setRecipients={(recipients) => setModifiedRecipients(recipients)} mode={replyMode == true ? 'reply' : 'forward'} message={props.message} recipients={recipients} />\n\n                <Editor\n                    tinymceScriptSrc=\"/design/defaulttheme/js/tinymce/js/tinymce/tinymce.min.js\"\n                    initialValue={\"<p></p>\" + replyIntro + \"<blockquote>\" + props.message.body_front + \"</blockquote>\" + (underReplySignature == false ? replySignature : \"\")}\n                    onInit={() => {\n                        tinyMCE.get(\"reply-to-mce-\"+props.message.id).focus();\n                    }}\n                    id={\"reply-to-mce-\"+props.message.id}\n                    init={{\n                        height: 320,\n                        automatic_uploads: true,\n                        file_picker_types: 'image',\n                        images_upload_url: WWW_DIR_JAVASCRIPT + 'mailconv/uploadimage',\n                        templates: WWW_DIR_JAVASCRIPT + 'mailconv/apiresponsetemplates/'+props.message.id,\n                        paste_data_images: true,\n                        relative_urls : false,\n                        browser_spellcheck: true,\n                        paste_as_text: true,\n                        contextmenu: false,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor image lhfiles',\n                            'searchreplace visualblocks code fullscreen',\n                            'media table paste help',\n                            'print preview importcss searchreplace autolink save autosave directionality visualblocks visualchars fullscreen media template codesample charmap pagebreak nonbreaking anchor toc advlist lists wordcount textpattern noneditable help charmap emoticons'\n                        ],\n                        toolbar_mode: 'wrap',\n                        toolbar:\n                            'undo redo | fontselect formatselect fontsizeselect | table | paste pastetext | subscript superscript | bold italic underline strikethrough | forecolor backcolor | \\\n                            alignleft aligncenter alignright alignjustify | lhfiles insertfile image pageembed template link anchor codesample | \\\n                            bullist numlist outdent indent | removeformat permanentpen | charmap emoticons | fullscreen print preview paste code | help'\n                    }}\n                />\n\n                {replyMode && <div className=\"float-right\">\n                    <a className=\"action-image\" onClick={() => {setReplyMode(false); props.cancelReply()}}><i className=\"material-icons\">delete</i></a>\n                </div>}\n\n                {forwardMode && <div className=\"float-right\">\n                    <a className=\"action-image\" onClick={() => {setForwardMode(false); props.cancelForward()}}><i className=\"material-icons\">delete</i></a>\n                </div>}\n\n                <div className=\"btn-group mt-1\" role=\"group\" aria-label=\"Mail actions\">\n                    <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-outline-primary\" onClick={() => sendReply()}><i className=\"material-icons\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send')}</button>\n                    <MailChatAttachement moptions={props.moptions} fileAttached={(file) => dispatch({ type: \"add\", value: file})} message={props.message}></MailChatAttachement>\n                </div>\n\n                {attachedFiles && attachedFiles.length > 0 &&\n                <div className=\"pt-2\">{attachedFiles.map((file, index) => (\n                    <button title={t('msg.click_to_remove')} onClick={() => removeAttatchedFile(file, index)} className=\"btn btn-sm btn-outline-info mr-1 mb-1\" title={file.id}>{file.name}</button>\n                ))}</div>}\n\n            </div>}\n\n        </div>\n    </React.Fragment>\n\n}\n\nexport default React.memo(MailChatReply);","import parse, { domToReact } from 'html-react-parser';\nimport React, { useState } from \"react\";\nimport MailChatQuote from \"./MailChatQuote\";\nimport MailChatReply from \"./MailChatReply\";\nimport {useTranslation} from 'react-i18next';\n\nconst MailChatMessage = ({message, index, totalMessages, noReplyRequired, mode, addLabel, moptions, fetchMessages, fetchingMessages}) => {\n\n    const [expandHeader, setExpandHeader] = useState(false);\n    const [expandBody, setExpandBody] = useState(index + 1 == totalMessages);\n    const [replyMode, setReplyMode] = useState(false);\n    const [forwardMode, setForwardMode] = useState(false);\n\n    const formatStringToCamelCase = str => {\n        const splitted = str.split(\"-\");\n        if (splitted.length === 1) return splitted[0];\n        return (\n            splitted[0] +\n            splitted\n                .slice(1)\n                .map(word => word[0].toUpperCase() + word.slice(1))\n                .join(\"\")\n        );\n    };\n\n    const getStyleObjectFromString = str => {\n        const style = {};\n        str.split(\";\").forEach(el => {\n            const [property, value] = el.split(\":\");\n            if (!property) return;\n\n            const formattedProperty = formatStringToCamelCase(property.trim());\n            style[formattedProperty] = value.trim();\n        });\n\n        return style;\n    };\n\n    if (fetchingMessages == true && (replyMode == true || forwardMode == true)) {\n        setReplyMode(false);\n        setForwardMode(false);\n    }\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    return <div className={\"row pb-2 mb-2 border-secondary\" + (mode !== 'preview' ? ' border-top pt-2' : ' border-bottom')}>\n        <div className=\"col-7 action-image\" onClick={() => setExpandBody(!expandBody)}>\n            <span title={\"Expand message \" + message.id} ><i className=\"material-icons\">{expandBody ? 'expand_less' : 'expand_more'}</i></span>\n            <b>{message.from_name}</b>\n            <small>&nbsp;&lt;{message.from_address}&gt;&nbsp;</small>\n            <small className={!message.status || message.status == 1 ? 'chat-pending' : (message.cls_time ? 'chat-closed' : 'chat-active')}>\n                <i className=\"material-icons\">mail_outline</i>\n                {!message.status || message.status == 1 ? 'Pending response' : 'Responded'}\n            </small>\n        </div>\n        <div className=\"col-5 text-right text-muted\">\n            <small className=\"pr-1\">\n                {message.subjects && message.subjects.map((label, index) => (\n                        <span className=\"badge badge-info mr-1\">{label.name}</span>\n                    ))}\n                {mode !== 'preview' && <React.Fragment><i title={t('msg.ar_label')} onClick={() => addLabel(message)} className=\"material-icons action-image text-muted\">label</i> |</React.Fragment>}\n            </small>\n\n            <small className=\"pr-2\">{message.udate_front} | {message.udate_ago} {t('msg.ago')}.</small>\n            {mode !== 'preview' && <i onClick={(e) => {e.stopPropagation();setForwardMode(false);setReplyMode(true)}} className=\"material-icons settings text-muted\">reply</i>}\n\n            <i onClick={(e) => {e.stopPropagation(); setExpandHeader(!expandHeader)}} className=\"material-icons settings text-muted\">{expandHeader ? 'expand_less' : 'expand_more'}</i>\n\n            {mode !== 'preview' && <div className=\"dropdown float-right\">\n                <i className=\"material-icons settings text-muted\" id={\"message-id-\"+message.id} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">more_vert</i>\n                <div className=\"dropdown-menu\" aria-labelledby={\"message-id-\"+message.id}>\n                    <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();setForwardMode(false);setReplyMode(true)}}><i className=\"material-icons text-muted\" >reply</i>{t('msg.reply')}</a>\n                    <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();setReplyMode(false);setForwardMode(true)}}><i className=\"material-icons text-muted\">forward</i>{t('msg.forward')}</a>\n                    <a className=\"dropdown-item\" target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/mailprint/\" + message.id} ><i className=\"material-icons text-muted\">print</i>{t('mail.print')}</a>\n                    <a className=\"dropdown-item\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/apimaildownload/\" + message.id} ><i className=\"material-icons text-muted\">cloud_download</i>{t('msg.download')}</a>\n                    <a className=\"dropdown-item\" href=\"#\" onClick={() => noReplyRequired(message)}><i className=\"material-icons text-muted\">done</i>{t('msg.no_reply')}</a>\n                </div>\n            </div>}\n        </div>\n\n        {expandHeader && <div className=\"col-12\">\n\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{t('msg.info')}</h6>\n\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <ul className=\"fs13 mb-0 list-unstyled\">\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.from')}:</span> <b>{message.from_name}</b> &lt;{message.from_address}&gt;\n                                </li>\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.to')}:</span> {message.to_data_front}\n                                </li>\n                                {message.cc_data_front && <li>\n                                    <span className=\"text-muted\">cc:</span> {message.cc_data_front}\n                                </li>}\n                                {message.bcc_data_front && <li>\n                                    <span className=\"text-muted\">bcc:</span> {message.bcc_data_front}\n                                </li>}\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.reply_to')}:</span> {message.reply_to_data_front}\n                                </li>\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.mailed_by')}:</span> {message.from_host}\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"col-6\">\n                            <ul className=\"fs13 mb-0 list-unstyled\">\n                                {message.accept_time_front && <li>{t('mail.accepted_at')}: {message.accept_time_front}</li>}\n                                {message.plain_user_name && <li>{t('mail.accepted_by')}: <b>{message.plain_user_name}</b></li>}\n                                {message.wait_time && <li>{t('mail.accept_wait_time')}: {message.wait_time_pending}</li>}\n                                {message.lr_time && message.response_time && <li>{t('mail.response_wait_time')}: {message.wait_time_response}, {t('mail.exc_pending_time')}</li>}\n                                {message.lr_time && <li>Response type: {message.response_type == 1 ? t('msg.nrr') : (message.response_type == 2 ? t('msg.orm') : t('msg.rbe'))}</li>}\n                                {message.interaction_time && <li>{t('mail.interaction_time')}: {message.interaction_time_duration}</li>}\n                                {message.cls_time && <li>{t('mail.closed_at')}: {message.cls_time_front}</li>}\n                                {message.conv_duration_front && <li>{t('mail.response_wait_time')}: {message.conv_duration_front}</li>}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>}\n\n        {expandBody && message.body_front && <div className=\"col-12 mail-message-body pt-2 pb-2\">\n\n         {parse(message.body_front, {\n        replace: domNode => {\n            if (domNode.attribs) {\n\n                var cloneAttr = Object.assign({}, domNode.attribs);\n\n                if (domNode.attribs.class) {\n                    domNode.attribs.className = domNode.attribs.class;\n                    delete domNode.attribs.class;\n                }\n\n                if (domNode.name && domNode.name === 'blockquote') {\n                    if (domNode.attribs.style) {\n                        domNode.attribs.style = getStyleObjectFromString(domNode.attribs.style);\n                    }\n\n                    return <blockquote {...domNode.attribs}><MailChatQuote>{domToReact(domNode.children)}</MailChatQuote></blockquote>\n                }\n            }\n        }\n    })}\n\n        {message.attachments && message.attachments.length > 0 &&\n            <div className=\"pt-2\">{message.attachments.map((file) => (\n                <a className=\"btn btn-sm btn-outline-info mr-1\" href={file.download_url} title={file.description}>{file.name}</a>\n            ))}</div>\n        }\n\n\n    </div>}\n\n        {mode !== 'preview' && !fetchingMessages && ((index + 1 == totalMessages) || replyMode || forwardMode) && <MailChatReply fetchingMessages={fetchingMessages} fetchMessages={(e) => fetchMessages()} moptions={moptions} forwardMode={forwardMode} cancelForward={(e) => setForwardMode(false)} cancelReply={(e) => setReplyMode(false)} replyMode={replyMode} lastMessage={index + 1 == totalMessages} message={message} noReplyRequired={() => noReplyRequired(message)} />}\n\n    </div>\n}\n\nexport default React.memo(MailChatMessage);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport MailChatMessage from \"./parts_mail/MailChatMessage\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'increment':\n            return {count: state.count + 1};\n        case 'decrement':\n            return {count: state.count - 1};\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'update_message': {\n            var foundIndex = state.messages.findIndex(x => x.id == action.message.id);\n            state.messages[foundIndex] = action.message;\n\n            if (action.conv) {\n                state.conv = action.conv;\n            }\n\n            if (action.fetching_messages) {\n                state.fetching_messages = action.fetching_messages;\n            }\n\n            state = { ... state};\n\n            return state;\n        }\n\n        case 'update_history': {\n            state = { ...state, ...action.value };\n            if (action.history.msg != '') {\n                state.messages.unshift(action.history);\n            }\n            return state;\n        }\n        case 'init':\n            return {count: state.count - 1};\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst MailChat = props => {\n\n    const messageElement = useRef(null);\n    const messagesElement = useRef(null);\n    const tabsContainer = useRef(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n        messages: [],\n        operators: [],\n        conv: null,\n        loaded: false,\n        saving_remarks: false,\n        old_message_id: 0,\n        last_message: '',\n        remarks: '',\n        last_message_id: 0,\n        lmsop: 0,\n        lgsync: 0,\n        fetching_messages: false\n    });\n\n    const rememberChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('machat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) === -1){\n                    achat_id_array.push(chatId);\n                    localStorage.setItem('machat_id',achat_id_array.join(','));\n                }\n\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const deleteConversation = () => {\n        if (confirm('Are you sure?')) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apideleteconversation/\" + state.conv.id).then(result => {\n                // If we are in the tab close tab also\n                if (document.getElementById('chat-tab-link-mc'+state.conv.id)) {\n                    lhinst.removeDialogTabMail('mc'+state.conv.id,$('#tabs'),true);\n                } else {\n                    document.location = WWW_DIR_JAVASCRIPT + \"mailconv/conversations\";\n                }\n            }).catch((error) => {\n\n            });\n        }\n    }\n\n    const closeConversation = () => {\n        let hasUnrespondedMessages = false;\n        state.messages.forEach((message) => {\n            if (message.status != 2) {\n                hasUnrespondedMessages = true;\n            }\n        });\n\n        if (hasUnrespondedMessages == false || confirm('There is still unresponded messages, are you sure you want to close this conversation?')) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apicloseconversation/\" + state.conv.id).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        'conv': result.data.conv,\n                        'messages' : result.data.messages\n                    }\n                });\n\n                // If we are in the tab close tab also\n                if (document.getElementById('chat-tab-link-mc'+state.conv.id)) {\n                    lhinst.removeDialogTabMail('mc'+state.conv.id,$('#tabs'),true);\n                }\n\n            }).catch((error) => {\n\n            });\n        }\n    }\n\n    const noReplyRequired = (message) => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apinoreplyrequired/\" + message.id).then(result => {\n            dispatch({\n                type: 'update_message',\n                message: result.data.message,\n                conv: result.data.conv\n            });\n        }).catch((error) => {\n\n        });\n    }\n\n    const addLabel = (message) => {\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + \"mailconv/apilabelmessage/\" + message.id,hidecallback : () => {\n                axios.get(WWW_DIR_JAVASCRIPT  + \"mailconv/apigetlabels/\" + message.id).then(result => {\n                    dispatch({\n                        type: 'update_message',\n                        message: result.data.message\n                    });\n                }).catch((error) => {\n\n                });\n        }});\n    }\n\n    const loadMainData = () => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/loadmainconv/\" + props.chatId + '/(mode)/' + (props.mode != '' ? props.mode : 'normal')).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    'conv': result.data.conv,\n                    'messages' : result.data.messages,\n                    'moptions' : result.data.moptions,\n                    'loaded' : true,\n                    'fetching_messages' : false,\n                }\n            });\n\n            if (props.disableRemember === false && props.mode !== 'preview') {\n                rememberChat(props.chatId);\n            }\n\n        }).catch((error) => {\n            lhinst.removeDialogTabMail('mc'+ props.chatId,$('#tabs'),true);\n        });\n    }\n\n    const fetchMessages = (message) => {\n        // Reset previous state\n        dispatch({\n            type: 'update',\n            value: {\n                'fetching_messages': true\n            }\n        });\n\n        // We have send an e-mail so we have to fetch a new e-mail now\n        axios.get(WWW_DIR_JAVASCRIPT  + \"mailconv/apifetchmails/\" + props.chatId).then(result => {\n            loadMainData();\n        });\n    }\n\n    const showModal = (params) => {\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + params.url});\n    }\n\n    useEffect(() => {\n        if (state.conv !== null) {\n            const timeout = setTimeout(() => {\n                axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/saveremarks/\" + props.chatId, {data: state.remarks}).then(result => {\n                    dispatch({\n                        type: 'update',\n                        value: {\n                            'saving_remarks': false\n                        }\n                    });\n                });\n            }, 500);\n            return () => clearTimeout(timeout);\n        }\n    },[state.remarks]);\n\n    const saveRemarks = (params) => {\n        dispatch({\n            type: 'update',\n            value: {\n                'saving_remarks': true,\n                'remarks': params\n            }\n        });\n    }\n\n    const forgetChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('machat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) !== -1) {\n                    achat_id_array.splice(achat_id_array.indexOf(chatId),1);\n                }\n\n                localStorage.setItem('machat_id',achat_id_array.join(','));\n            } catch(e) {\n\n            }\n        }\n    }\n\n    useEffect(() => {\n        loadMainData();\n        return function cleanup() {\n           forgetChat(props.chatId)\n        };\n    },[]);\n\n    useEffect(() => {\n        if (state.loaded == true) {\n            var container = tabsContainer.current;\n        }\n\n    },[state.loaded]);\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    if (state.loaded == false) {\n        return <span>...</span>\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"row\">\n                <div className={\"chat-main-left-column \" + (props.mode == 'preview' ? 'col-12' : 'col-7')}>\n\n                    {props.mode !== 'preview' && <h1 className=\"pb-2\"><i className=\"material-icons\">{state.conv.start_type == 1 ? 'call_made' : 'call_received'}</i>{state.conv.subject}</h1>}\n\n                    <div>\n                        {state.messages.map((message, index) => (\n                            <MailChatMessage moptions={state.moptions} fetchMessages={(e) => fetchMessages(message)} fetchingMessages={state.fetching_messages} mode={props.mode} key={'msg_mail_' + props.chatId + '_' + index + '_' + message.id} totalMessages={state.messages.length} index={index} message={message} noReplyRequired={(e) => noReplyRequired(message)} addLabel={(e) => addLabel(message)} />\n                        ))}\n\n                        {state.fetching_messages && <div className=\"alert alert-success p-1 pl-2\" role=\"alert\">{t('mail.send_fetching')}</div>}\n                    </div>\n                </div>\n                <div className={\"chat-main-right-column \" + (props.mode == 'preview' ? 'd-none' : 'col-5')}>\n                    <div role=\"tabpanel\">\n                        <ul className=\"nav nav-pills\" role=\"tablist\" ref={tabsContainer}>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link active\" href={\"#mail-chat-info-\"+props.chatId} aria-controls={\"#mail-chat-info-\"+props.chatId} title={t('mail.information')} role=\"tab\" data-toggle=\"tab\"><i className=\"material-icons mr-0\">info_outline</i></a></li>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link\" href={\"#mail-chat-remarks-\"+props.chatId} aria-controls={\"#mail-chat-remarks-\"+props.chatId} role=\"tab\" data-toggle=\"tab\" title={t('mail.remarks')}><i className=\"material-icons mr-0\">mode_edit</i></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div role=\"tabpanel\" className=\"tab-pane\" id={\"mail-chat-remarks-\"+props.chatId}>\n                                <div className={\"material-icons pb-1 text-success\" + (state.saving_remarks ? ' text-warning' : '')}>mode_edit</div>\n                                <div>\n                                    {state.conv && <textarea placeholder=\"Enter your remarks here.\" onKeyUp={(e) => saveRemarks(e.target.value)} class=\"form-control mh150\" defaultValue={state.conv.remarks}></textarea>}\n                                </div>\n                            </div>\n                            <div role=\"tabpanel\" className=\"tab-pane active\" id={\"mail-chat-info-\"+props.chatId}>\n\n                                <div className=\"pb-2\">\n                                    <a className=\"btn btn-outline-secondary btn-sm\" onClick={() => closeConversation()}><i className=\"material-icons\">close</i>{t('mail.close')}</a>\n                                </div>\n\n                                {state.conv && <table className=\"table table-sm\">\n                                    <tr>\n                                        <td colSpan=\"2\">\n                                            <i className=\"material-icons action-image\" title={t('mail.interactions_history')} onClick={() => showModal({url: \"mailconv/mailhistory/\" + props.chatId})}>history</i>\n                                            <a className=\"material-icons action-image\" onClick={() => showModal({url: \"mailconv/transfermail/\" + props.chatId})} title={t('mail.transfer_chat')} >supervisor_account</a>\n                                            <a className=\"text-dark material-icons\" title={t('mail.print')} target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/mailprintcovnersation/\" + props.chatId} >print</a>\n                                            {state.conv.can_delete && <a className=\"material-icons mr-0\" onClick={(e) => deleteConversation()} title=\"Delete chat\">delete</a>}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.sender')}</td>\n                                        <td>{state.conv.from_name} &lt;{state.conv.from_address}&gt;</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.status')}</td>\n                                        <td>\n                                            {!state.conv.status && <span><i className=\"material-icons chat-pending\">mail_outline</i>{t('status.pending')}</span>}\n                                            {state.conv.status == 1 && <span><i className=\"material-icons chat-active\">mail_outline</i>{t('status.active')}</span>}\n                                            {state.conv.status == 2 && <span><i className=\"material-icons chat-closed\">mail_outline</i>{t('status.closed')}</span>}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.department')}</td>\n                                        <td>{state.conv.department_name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.received')}</td>\n                                        <td>{state.conv.udate_front}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td>{state.conv.id}</td>\n                                    </tr>\n                                    {state.conv.accept_time && <tr>\n                                        <td>{t('mail.last_accepted_at')}</td>\n                                        <td>{state.conv.accept_time_front}{state.conv.wait_time_pending && <React.Fragment> | Wait time {state.conv.wait_time_pending}</React.Fragment>}</td>\n                                    </tr>}\n                                    {state.conv.response_time && <tr>\n                                        <td>{t('mail.last_responded_at')}</td>\n                                        <td>{state.conv.lr_time_front}{state.conv.wait_time_response && <React.Fragment> | Wait time {state.conv.wait_time_response}</React.Fragment>}</td>\n                                    </tr>}\n                                    {state.conv.cls_time && <tr>\n                                        <td>{t('mail.closed_at')}</td>\n                                        <td>{state.conv.cls_time_front}</td>\n                                    </tr>}\n                                    {state.conv.conv_duration && <tr>\n                                        <td>{t('mail.conv_duration')}</td>\n                                        <td>{state.conv.conv_duration_front}</td>\n                                    </tr>}\n                                    {state.conv.interaction_time && <tr>\n                                        <td>{t('mail.last_interaction_time')}</td>\n                                        <td>{state.conv.interaction_time_duration}</td>\n                                    </tr>}\n                                    {state.conv.priority && <tr>\n                                        <td>{t('mail.priority')}</td>\n                                        <td>{state.conv.priority}</td>\n                                    </tr>}\n                                    <tr>\n                                        <td>{t('mail.chat_owner')}</td>\n                                        <td>{state.conv.plain_user_name}</td>\n                                    </tr>\n                                </table>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default MailChat"],"sourceRoot":""}