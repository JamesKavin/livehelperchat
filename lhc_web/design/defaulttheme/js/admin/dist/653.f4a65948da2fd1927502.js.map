{"version":3,"file":"653.f4a65948da2fd1927502.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatQuote.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatAttachement.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailReplyRecipient.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailSendStatus.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatReply.js","webpack://LHCReactAPPAdmin/./src/components/parts_mail/MailChatMessage.js","webpack://LHCReactAPPAdmin/./src/components/MailChat.js"],"sourcesContent":["import React, { useState} from \"react\";\n\nconst MailChatQuote = ({children}) => {\n\n    const [expandBody, setExpandBody] = useState(false);\n\n    return <React.Fragment>\n        <div className=\"pb-2\"><button onClick={() => setExpandBody(!expandBody)} className=\"btn btn-sm btn-outline-secondary\">...</button></div>\n        {expandBody && children}\n    </React.Fragment>\n\n}\n\nexport default React.memo(MailChatQuote);","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\n\n/**\n * https://github.com/LukasMarx/react-file-upload\n * */\nclass MailChatAttatchement extends PureComponent {\n\n    state = {\n        hightlight: false,\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false,\n        progress: ''\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.fileInputRef = React.createRef();\n        this.dropAreaRef = React.createRef();\n\n        // UI Actions\n        this.openFileDialog = this.openFileDialog.bind(this);\n        this.onFilesAddedUI = this.onFilesAddedUI.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onPaste = this.onPaste.bind(this);\n\n        // Backend actions\n        this.onFilesAdded = this.onFilesAdded.bind(this);\n        this.uploadFiles = this.uploadFiles.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n        this.chooseFromUploaded = this.chooseFromUploaded.bind(this);\n        this.fileUploaded = this.fileUploaded.bind(this);\n    }\n\n    onFilesAdded(files) {\n        const { t } = this.props;\n\n        const ruleTest = new RegExp(\"(\\.|\\/)(\" + this.props.moptions['fop_op'] + \")$\",\"i\");\n\n        let uploadErrors = [];\n        files.forEach(file => {\n\n            if (!(ruleTest.test(file.type) || ruleTest.test(file.name))) {\n                uploadErrors.push(file.name + ': ' + t('file.incorrect_type'));\n            }\n\n            if (file.size > this.props.moptions['fop_size']) {\n                uploadErrors.push(file.name + ': '+ t('file.to_big_file'));\n            }\n        });\n\n        if (uploadErrors.length > 0) {\n            alert(uploadErrors.join(\"\\n\"));\n        } else {\n            this.setState({\n                'files': files\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.files.length > 0 && this.state.uploading == false) {\n            this.uploadFiles();\n        }\n    }\n\n    async uploadFiles() {\n        this.setState({ uploadProgress: {}, uploading: true });\n        const promises = [];\n        this.state.files.forEach(file => {\n            promises.push(this.sendRequest(file));\n        });\n        try {\n            await Promise.all(promises);\n            this.setState({ successfullUploaded: true, uploading: false,  files : []});\n        } catch (e) {\n            // Not Production ready! Do some error handling here instead...\n            this.setState({ successfullUploaded: true, uploading: false,  files : [] });\n        }\n    }\n\n    fileUploaded(file) {\n        this.props.fileAttached(file);\n    }\n\n    sendRequest(file) {\n        const { t } = this.props;\n\n        return new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n\n            req.upload.addEventListener(\"progress\", event => {\n                if (event.lengthComputable) {\n                    const copy = { ...this.state.uploadProgress };\n                    copy[file.name] = {\n                        state: \"pending\",\n                        percentage: (event.loaded / event.total) * 100\n                    };\n                    this.setState({ progress: t('file.uploading') + ' ' + Math.round((event.loaded / event.total) * 100) + '%' });\n                }\n            });\n\n            req.upload.addEventListener(\"load\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"done\", percentage: 100 };\n                this.setState({ progress: '' });\n                resolve(req.response);\n            });\n\n            var _inst = this;\n\n            req.onreadystatechange = function() {\n                if (req.readyState === 4) {\n                    _inst.fileUploaded(JSON.parse(req.response));\n                }\n            }\n\n            req.upload.addEventListener(\"error\", event => {\n                const copy = { ...this.state.uploadProgress };\n                copy[file.name] = { state: \"error\", percentage: 0 };\n                this.setState({ progress: copy });\n                reject(req.response);\n            });\n\n            const formData = new FormData();\n            formData.append(\"files\", file, file.name);\n\n            req.open(\"POST\", WWW_DIR_JAVASCRIPT + 'mailconv/uploadfile');\n            req.send(formData);\n        });\n    }\n\n    openFileDialog() {\n        if (this.state.uploading) return;\n        this.fileInputRef.current.click();\n    }\n\n    onFilesAddedUI(evt) {\n        const files = evt.target.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        this.setState({hightlight: true})\n    }\n\n    componentDidMount() {\n        if (this.dropAreaRef.current) {\n            this.dropAreaRef.current.ondragover = this.onDragOver;\n            this.dropAreaRef.current.ondragleave = this.onDragLeave;\n            this.dropAreaRef.current.ondrop = this.onDrop;\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.dropAreaRef.current) {\n            this.dropAreaRef.current.ondragover = null;\n            this.dropAreaRef.current.ondragleave = null;\n            this.dropAreaRef.current.ondrop = null;\n        }\n\n        window.attatchReplyCurrent = null;\n    }\n\n    onPaste(e) {\n        var items = e && e.clipboardData &&\n            e.clipboardData.items,\n            data = {files: []};\n\n        if (items && items.length) {\n            const array = [];\n            for (var i = 0; i < items.length; i++) {\n                var file = items[i].getAsFile && items[i].getAsFile();\n                if (file){\n                    array.push(file);\n                }\n            }\n\n            if (array.length > 0) {\n                this.onFilesAdded(array);\n            }\n        }\n    }\n\n    onDragLeave(event) {\n        this.setState({hightlight: false})\n    }\n\n    onDrop(event) {\n        event.preventDefault();\n        if (this.state.uploading) return;\n        const files = event.dataTransfer.files;\n        const array = this.fileListToArray(files);\n        this.onFilesAdded(array);\n        this.setState({hightlight: false})\n    }\n\n    fileListToArray(list) {\n        const array = [];\n        for (var i = 0; i < list.length; i++) {\n            array.push(list.item(i));\n        }\n        return array;\n    }\n\n    chooseFromUploaded() {\n\n        const { t } = this.props;\n        \n        lhc.revealModal({\n            'title' : t('file.choose_uploaded'),\n            'iframe':true,\n            'height':500,\n            'url':WWW_DIR_JAVASCRIPT +'mailconv/attatchfile/(attachment)/1'\n        });\n\n        var _inst = this;\n\n        window.attatchReplyCurrent = function(file) {\n             _inst.props.fileAttached(file);\n        }\n    }\n\n    render() {\n\n            const { t } = this.props;\n\n            return (\n                <React.Fragment>\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={this.chooseFromUploaded} ><i className=\"material-icons\">list</i> {t('file.choose_uploaded')}</button>\n                    <button ref={this.dropAreaRef} onClick={this.openFileDialog} className={\"btn btn-sm \" + (this.state.hightlight == true ? 'btn-outline-primary' : 'btn-outline-secondary')}><i className=\"material-icons\">attach_file</i> {this.state.progress || t('file.drop_here')}</button>\n                    <input onChange={this.onFilesAddedUI} ref={this.fileInputRef} id=\"fileupload\" type=\"file\" name=\"files[]\" multiple className=\"d-none\" />\n                </React.Fragment>\n            );\n     }\n}\n\nexport default withTranslation('mail_chat')(MailChatAttatchement);","import React, { useEffect, useState, useReducer } from \"react\";\n\nimport {useTranslation} from 'react-i18next';\n\nconst MailReplyRecipient = props => {\n\n    const [recipients, dispatch] = useReducer((recipients, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...recipients, value];\n\n            case \"add_recipient\":\n                recipients = { ... recipients};\n                recipients[value].push({\"name\" : \"\", \"email\" : \"\"});\n                return recipients;\n\n            case \"remove_recipient\":\n                recipients = { ... recipients};\n                recipients[value.recipient] = recipients[value.recipient].filter((_, index) => index !== value.index);\n                return recipients;\n\n            case \"set\":\n                return value;\n\n            case 'set_attribute':\n                recipients = { ... recipients};\n                recipients[value.value.type][value.value.index][value.value.field] = value.value.value;\n                return recipients;\n                break;\n\n            case \"cleanup\":\n                return [];\n            case \"remove\":\n                return recipients.filter((_, index) => index !== value);\n            default:\n                return recipients;\n        }\n    }, []);\n\n    const setReciepints = (type, value) => {\n        dispatch({'type' : type, \"value\" : value});\n        props.setRecipients(recipients);\n    }\n\n    useEffect(() => {\n        dispatch({\"type\" : \"set\", \"value\" : props.recipients});\n        props.setRecipients(props.recipients);\n    },[props.recipients]);\n\n    const { t, i18n } = useTranslation('mail_chat');\n    \n    return <div className=\"row\">\n\n        {!props.readOnly && <div className=\"col-12 text-secondary font-weight-bold fs13 pb-1\">{t('r.recipients')} <i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"add_recipient\",\"reply\")} style={{fontSize: \"20px\"}}>add</i> Cc <i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"add_recipient\",\"cc\")} style={{fontSize: \"20px\"}}>add</i> Bcc <i onClick={(e) => setReciepints(\"add_recipient\",\"bcc\")} className=\"material-icons settings text-muted\" style={{fontSize: \"20px\"}}>add</i></div>}\n\n        <div className=\"col-6\">\n            {recipients.reply && recipients.reply.map((mail, index) => (\n                <div className=\"form-row pb-1\">\n                    <div className=\"col-1 text-secondary fs13 pt-1\">{t('r.to')}:</div>\n                    <div className=\"col-5\">\n                        <div className=\"input-group input-group-sm\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                            </div>\n                            <input disabled={props.readOnly} type=\"text\" className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"reply\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                        </div>\n                    </div>\n                    <div className=\"col-5\"><input type=\"text\" disabled={props.readOnly} placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"reply\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                    {!props.readOnly && index > 0 && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"reply\", \"index\" : index})}>remove</i></div>}\n                </div>\n            ))}\n        </div>\n\n        <div className=\"col-6\">\n        {recipients.cc && recipients.cc.map((mail, index) => (\n            <div className=\"form-row pb-1\">\n                <div className=\"col-1 text-secondary fs13 pt-1\">Cc:</div>\n                <div className=\"col-5\">\n                    <div className=\"input-group input-group-sm\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                        </div>\n                        <input type=\"text\" disabled={props.readOnly} className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"cc\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                    </div>\n                </div>\n                <div className=\"col-5\"><input disabled={props.readOnly} type=\"text\" placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"cc\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                {!props.readOnly && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"cc\", \"index\" : index})}>remove</i></div>}\n            </div>\n        ))}\n        </div>\n\n        <div className=\"col-6\">\n        {recipients.bcc && recipients.bcc.map((mail, index) => (\n            <div className=\"form-row pb-1\">\n                <div className=\"col-1 text-secondary fs13 pt-1\">Bcc:</div>\n                <div className=\"col-5\">\n                    <div className=\"input-group input-group-sm\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" ><i className=\"material-icons mr-0\">mail_outline</i></span>\n                        </div>\n                        <input type=\"text\" disabled={props.readOnly} className=\"form-control form-control-sm\" placeholder=\"E-mail\" onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"bcc\", index: index, \"field\" : \"email\"}})} value={mail.email} placeholder={t('r.email')} aria-describedby=\"validationTooltipUsernamePrepend\" />\n                    </div>\n                </div>\n                <div className=\"col-5\"><input type=\"text\" disabled={props.readOnly} placeholder={t('r.name')} onChange={(e) => setReciepints(\"set_attribute\",{value : {value: e.target.value, type: \"bcc\", index: index, \"field\" : \"name\"}})} value={mail.name} className=\"form-control form-control-sm\" /></div>\n                {!props.readOnly && <div className=\"col\"><i className=\"material-icons settings text-muted\" onClick={(e) => setReciepints(\"remove_recipient\",{\"recipient\":\"bcc\", \"index\" : index})}>remove</i></div>}\n            </div>\n        ))}\n        </div>\n\n\n    </div>\n}\n\nexport default React.memo(MailReplyRecipient);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\n\nconst MailSendStatus = props => {\n\n    const [expandBody, setExpandBody] = useState(false);\n\n    return <React.Fragment>\n        {props.status.send && <div className=\"alert alert-success p-1 pl-2\" role=\"alert\">Success!</div>}\n        {!props.status.send && <div className=\"alert alert-danger p-1 pl-2\" role=\"alert\">\n            <ul className=\"mb-0\">\n                {props.status.errors.general && <li>{props.status.errors.general}</li>}\n                {props.status.errors.reply && <li>{props.status.errors.reply}</li>}\n                {props.status.errors.content && <li>{props.status.errors.content}</li>}\n            </ul>\n        </div>}\n        \n    </React.Fragment>\n\n}\n\nexport default React.memo(MailSendStatus);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport axios from \"axios\";\nimport MailChatAttachement from \"./MailChatAttachement\";\nimport MailReplyRecipient from \"./MailReplyRecipient\";\nimport MailSendStatus from \"./MailSendStatus\";\nimport {useTranslation} from 'react-i18next';\n\nconst MailChatReply = props => {\n\n    const [replyMode, setReplyMode] = useState(false);\n    const [forwardMode, setForwardMode] = useState(false);\n    const [replyContent, setReplyContent] = useState(null);\n    const [replyIntro, setReplyIntro] = useState(null);\n    const [replySignature, setReplySignature] = useState(null);\n    const [loadedReplyData, setLoadedReplyData] = useState(false);\n    const [recipients, setRecipients] = useState([]);\n    const [recipientsModified, setModifiedRecipients] = useState([]);\n    const [replySendStatus, setReplySendStatus] = useState([]);\n    const [sendInProgress, setSendInProgress] = useState(false);\n    const [underReplySignature, setUnderReplySignature] = useState(false);\n    const [isOwner, setIsOwner] = useState(true);\n\n    const [attachedFiles, dispatch] = useReducer((attachedFiles, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...attachedFiles, value];\n            case \"cleanup\":\n                return [];\n            case \"remove\":\n                return attachedFiles.filter((_, index) => index !== value);\n            default:\n                return attachedFiles;\n        }\n    }, []);\n\n    const currentAttatchedFiles = useRef();\n    currentAttatchedFiles.current = attachedFiles;\n\n    let replyContentDirect = null;\n\n    const handleEditorChange = (content, editor) => {\n        replyContentDirect = content;\n    }\n\n    const sendReply = (status) => {\n        let replyPayload = {\n            'recipients' : recipientsModified,\n            'content' : tinyMCE.get(\"reply-to-mce-\"+props.message.id).getContent(),\n            'attatchements' : attachedFiles,\n            'status': status,\n            'mode' : (replyMode == true ? 'reply' : 'forward')\n        };\n\n        setSendInProgress(true);\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apisendreply/\" + props.message.id, replyPayload).then(result => {\n            setReplySendStatus(result.data);\n            setSendInProgress(false);\n\n            if (result.data.send == true) {\n                props.fetchMessages();\n                props.setConversationStatus(result.data.conv_status);\n            }\n\n        }).catch(error => {\n            setSendInProgress(false);\n            // Error 😨\n            if (error.response) {\n                /*\n                 * The request was made and the server responded with a\n                 * status code that falls out of the range of 2xx\n                 */\n                if (error.response.status === 400) {\n                    setReplySendStatus(error.response.data);\n                } else {\n                    alert('Unhandled error.' + error.response.data);\n                }\n\n            } else if (error.request) {\n                /*\n                 * The request was made but no response was received, `error.request`\n                 * is an instance of XMLHttpRequest in the browser and an instance\n                 * of http.ClientRequest in Node.js\n                 */\n                console.log(error.request);\n            } else {\n                // Something happened in setting up the request and triggered an Error\n                console.log('Error', error.message);\n            }\n\n            console.log(error.config);\n\n        });\n    }\n\n    const removeAttatchedFile = (file, index) => {\n        dispatch({ type: \"remove\", value: index });\n        if (file.new === true) {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            currentAttatchedFiles.current.map((file, index) => {\n                if (file.new === true) {\n                    axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n                }\n            })\n        }\n    },[]);\n\n    useEffect(() => {\n        if ((replyMode == true || forwardMode == true) && loadedReplyData == false) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/getreplydata/\" + props.message.id + '/' + (replyMode == true ? 'reply' : 'forward')).then(result => {\n                setLoadedReplyData(true);\n                setReplyIntro(result.data.intro);\n                setReplySignature(result.data.signature);\n                setRecipients(result.data.recipients);\n                setUnderReplySignature(result.data.signature_under);\n                if (result.data.user_id > 0) {\n                    props.verifyOwner(result.data.user_id);\n                    setIsOwner(result.data.is_owner);\n                }\n            });\n        } else if (replyMode == false && forwardMode == false && loadedReplyData == true) {\n            setLoadedReplyData(false);\n            if (currentAttatchedFiles.current.length > 0) {\n                currentAttatchedFiles.current.map((file, index) => {\n                    if (file.new === true) {\n                        axios.get(WWW_DIR_JAVASCRIPT  + \"file/delete/\" + file.id + '/(csfr)/' + confLH.csrf_token + '?react=1');\n                    }\n                });\n                dispatch({ type: \"cleanup\"})\n            }\n        }\n    },[replyMode,forwardMode]);\n\n    if (props.replyMode == true && replyMode == false) {\n        if (forwardMode == true) {\n            setLoadedReplyData(false);\n            setForwardMode(false);\n        }\n        setReplyMode(true);\n    }\n\n    if (props.forwardMode == true && forwardMode == false) {\n        if (replyMode == true) {\n            setLoadedReplyData(false);\n            setReplyMode(false);\n        }\n        setForwardMode(true);\n    }\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    return <React.Fragment>\n        <div className=\"col-12 mt-2 pt-3 pb-2\">\n\n            {!isOwner && <div className=\"alert alert-warning\" role=\"alert\"><span className=\"material-icons\">warning</span>\n                {t('msg.not_an_owner')}\n            </div>}\n\n            {!replyMode && !forwardMode && !props.fetchingMessages && <div className=\"btn-group\" role=\"group\" aria-label=\"Mail actions\">\n                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => {setForwardMode(false);setReplyMode(true);}}><i className=\"material-icons\">reply</i>{t('msg.reply')}</button>\n                <button disabled={props.message.response_type == 1} type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => props.noReplyRequired()}><i className=\"material-icons\">done</i>{t('msg.nrr')}</button>\n                {!props.moptions.hide_recipients && <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() => {setReplyMode(false);setForwardMode(true)}}><i className=\"material-icons\">forward</i>{t('msg.forward')}</button>}\n            </div>}\n\n            {!props.fetchingMessages && (replyMode || forwardMode) && loadedReplyData && <div className=\"shadow p-2\">\n\n                {replySendStatus.send_tried && <MailSendStatus status={replySendStatus} />}\n\n                <MailReplyRecipient readOnly={props.moptions.hide_recipients} setRecipients={(recipients) => setModifiedRecipients(recipients)} mode={replyMode == true ? 'reply' : 'forward'} message={props.message} recipients={recipients} />\n\n                <Editor\n                    tinymceScriptSrc=\"/design/defaulttheme/js/tinymce/js/tinymce/tinymce.min.js\"\n                    initialValue={\"<p></p>\" + replyIntro + \"<blockquote>\" + props.message.body_front + \"</blockquote>\" + (underReplySignature == false ? replySignature : \"\")}\n                    onInit={() => {\n                        tinyMCE.get(\"reply-to-mce-\"+props.message.id).focus();\n                    }}\n                    id={\"reply-to-mce-\"+props.message.id}\n                    init={{\n                        height: 320,\n                        automatic_uploads: props.moptions.files_enabled,\n                        file_picker_types: 'image',\n                        images_upload_url: WWW_DIR_JAVASCRIPT + 'mailconv/uploadimage',\n                        templates: WWW_DIR_JAVASCRIPT + 'mailconv/apiresponsetemplates/'+props.message.id,\n                        paste_data_images: props.moptions.files_enabled,\n                        relative_urls : false,\n                        browser_spellcheck: true,\n                        paste_as_text: true,\n                        contextmenu: false,\n                        menubar: false,\n                        plugins: props.moptions.mce_plugins,\n                        toolbar_mode: 'wrap',\n                        toolbar: props.moptions.mce_toolbar\n                    }}\n                />\n\n                {replyMode && <div className=\"float-right\">\n                    <a className=\"action-image\" onClick={() => {setReplyMode(false); props.cancelReply()}}><i className=\"material-icons\">delete</i></a>\n                </div>}\n\n                {forwardMode && <div className=\"float-right\">\n                    <a className=\"action-image\" onClick={() => {setForwardMode(false); props.cancelForward()}}><i className=\"material-icons\">delete</i></a>\n                </div>}\n\n                <div className=\"btn-group mt-2\" role=\"group\" aria-label=\"Mail actions\">\n                    <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-primary\" onClick={() => sendReply(2)}><i className=\"material-icons\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send_and_close')}</button>\n                    {props.moptions.send_as_new && <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-outline-secondary\" onClick={() => sendReply(0)}><i className=\"material-icons text-warning\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send_as_pending')}</button>}\n                    <button type=\"button\" disabled={sendInProgress} className=\"btn btn-sm btn-outline-secondary\" onClick={() => sendReply(1)}><i className=\"material-icons text-success\">send</i>{sendInProgress == true ? t('msg.sending') : t('msg.send_as_active')}</button>\n                </div>\n\n                {props.moptions.files_enabled && <div className=\"btn-group d-block mt-2\" role=\"group\" aria-label=\"Mail actions\">\n                     <MailChatAttachement moptions={props.moptions} fileAttached={(file) => dispatch({ type: \"add\", value: file})} message={props.message}></MailChatAttachement>\n                </div>}\n\n                {attachedFiles && attachedFiles.length > 0 &&\n                <div className=\"pt-2\">{attachedFiles.map((file, index) => (\n                    <button title={t('msg.click_to_remove')} onClick={() => removeAttatchedFile(file, index)} className=\"btn btn-sm btn-outline-info mr-1 mb-1\" title={file.id}>{file.name}</button>\n                ))}</div>}\n\n            </div>}\n\n        </div>\n    </React.Fragment>\n\n}\n\nexport default React.memo(MailChatReply);","import parse, { domToReact } from 'html-react-parser';\nimport React, { useState } from \"react\";\nimport MailChatQuote from \"./MailChatQuote\";\nimport MailChatReply from \"./MailChatReply\";\nimport {useTranslation} from 'react-i18next';\n\nconst MailChatMessage = ({message, index, totalMessages, noReplyRequired, mode, addLabel, moptions, fetchMessages, fetchingMessages, verifyOwner, setConversationStatus}) => {\n\n    const [expandHeader, setExpandHeader] = useState(false);\n    const [expandBody, setExpandBody] = useState(index + 1 == totalMessages);\n    const [plainBody, setPlainBody] = useState(!!message.undelivered);\n    const [replyMode, setReplyMode] = useState(false);\n    const [forwardMode, setForwardMode] = useState(false);\n    const [expandDeliveryInformation, setExpandDeliveryInformation] = useState(false);\n\n    const formatStringToCamelCase = str => {\n        const splitted = str.split(\"-\");\n        if (splitted.length === 1) return splitted[0];\n        return (\n            splitted[0] +\n            splitted\n                .slice(1)\n                .map(word => word[0].toUpperCase() + word.slice(1))\n                .join(\"\")\n        );\n    };\n\n    const getStyleObjectFromString = str => {\n        const style = {};\n        str.split(\";\").forEach(el => {\n            const [property, value] = el.split(\":\");\n            if (!property) return;\n\n            const formattedProperty = formatStringToCamelCase(property.trim());\n            style[formattedProperty] = value.trim();\n        });\n\n        return style;\n    };\n\n    if (fetchingMessages == true && (replyMode == true || forwardMode == true)) {\n        setReplyMode(false);\n        setForwardMode(false);\n    }\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    return <div className={\"row pb-2 mb-2 border-secondary\" + (mode !== 'preview' ? ' border-top pt-2' : ' border-bottom')}>\n        <div className=\"col-7 action-image\" onClick={() => setExpandBody(!expandBody)}>\n            <span title={\"Expand message \" + message.id} ><i className=\"material-icons\">{expandBody ? 'expand_less' : 'expand_more'}</i></span>\n            <b>{message.from_name}</b>\n            <small>&nbsp;&lt;{message.from_address}&gt;&nbsp;</small>\n            <small className={!message.status || message.status == 1 ? 'chat-pending' : (message.cls_time ? 'chat-closed' : 'chat-active')}>\n                <i className=\"material-icons\">mail_outline</i>\n                {!message.status || message.status == 1 ? 'Pending response' : 'Responded'}\n            </small>\n        </div>\n        <div className=\"col-5 text-right text-muted\">\n            <small className=\"pr-1\">\n                {message.subjects && message.subjects.map((label, index) => (\n                        <span className=\"badge badge-info mr-1\">{label.name}</span>\n                    ))}\n                {mode !== 'preview' && moptions.can_write && <React.Fragment><i title={t('msg.ar_label')} onClick={() => addLabel(message)} className=\"material-icons action-image text-muted\">label</i> |</React.Fragment>}\n            </small>\n\n            <small className=\"pr-2\">{message.udate_front} | {message.udate_ago} {t('msg.ago')}.</small>\n            {mode !== 'preview' && <i onClick={(e) => {e.stopPropagation();setForwardMode(false);setReplyMode(true)}} className=\"material-icons settings text-muted\">reply</i>}\n\n            <i onClick={(e) => {e.stopPropagation(); setExpandHeader(!expandHeader)}} className=\"material-icons settings text-muted\">{expandHeader ? 'expand_less' : 'expand_more'}</i>\n\n            {mode !== 'preview' && <div className=\"dropdown float-right\">\n                <i className=\"material-icons settings text-muted\" id={\"message-id-\"+message.id} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">more_vert</i>\n                <div className=\"dropdown-menu\" aria-labelledby={\"message-id-\"+message.id}>\n                    {moptions.can_write && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();setForwardMode(false);setReplyMode(true)}}><i className=\"material-icons text-muted\" >reply</i>{t('msg.reply')}</a>}\n                    {moptions.can_write && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => {e.stopPropagation();setReplyMode(false);setForwardMode(true)}}><i className=\"material-icons text-muted\">forward</i>{t('msg.forward')}</a>}\n                    <a className=\"dropdown-item\" target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/mailprint/\" + message.id} ><i className=\"material-icons text-muted\">print</i>{t('mail.print')}</a>\n                    <a className=\"dropdown-item\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/apimaildownload/\" + message.id} ><i className=\"material-icons text-muted\">cloud_download</i>{t('msg.download')}</a>\n                    {moptions.can_write && <a className=\"dropdown-item\" href=\"#\" onClick={() => noReplyRequired(message)}><i className=\"material-icons text-muted\">done</i>{t('msg.no_reply')}</a>}\n                    {message.alt_body && <a className=\"dropdown-item\" href=\"#\" onClick={(e) => setPlainBody(!plainBody)}><i className=\"material-icons text-muted\">visibility</i>{t('msg.plain_html')}</a>}\n                </div>\n            </div>}\n        </div>\n\n\n\n        {expandHeader && <div className=\"col-12\">\n\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{t('msg.info')}</h6>\n\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <ul className=\"fs13 mb-0 list-unstyled\">\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.from')}:</span> <b>{message.from_name}</b> &lt;{message.from_address}&gt;\n                                </li>\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.to')}:</span> {message.to_data_front}\n                                </li>\n                                {message.cc_data_front && <li>\n                                    <span className=\"text-muted\">cc:</span> {message.cc_data_front}\n                                </li>}\n                                {message.bcc_data_front && <li>\n                                    <span className=\"text-muted\">bcc:</span> {message.bcc_data_front}\n                                </li>}\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.reply_to')}:</span> {message.reply_to_data_front}\n                                </li>\n                                <li>\n                                    <span className=\"text-muted\">{t('msg.mailed_by')}:</span> {message.from_host}\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"col-6\">\n                            <ul className=\"fs13 mb-0 list-unstyled\">\n                                {message.accept_time_front && <li>{t('mail.accepted_at')}: {message.accept_time_front}</li>}\n                                {message.plain_user_name && <li>{t('mail.accepted_by')}: <b>{message.plain_user_name}</b></li>}\n                                {message.wait_time && <li>{t('mail.accept_wait_time')}: {message.wait_time_pending}</li>}\n                                {message.lr_time && message.response_time && <li>{t('mail.response_wait_time')}: {message.wait_time_response}, {t('mail.exc_pending_time')}</li>}\n                                {message.lr_time && <li>Response type: {message.response_type == 1 ? t('msg.nrr') : (message.response_type == 2 ? t('msg.orm') : t('msg.rbe'))}</li>}\n                                {message.interaction_time && <li>{t('mail.interaction_time')}: {message.interaction_time_duration}</li>}\n                                {message.cls_time && <li>{t('mail.closed_at')}: {message.cls_time_front}</li>}\n                                {message.conv_duration_front && <li>{t('mail.response_wait_time')}: {message.conv_duration_front}</li>}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>}\n\n        {expandBody && message.undelivered && <div className=\"col-12 alert alert-warning mt-2\">\n            This message was undelivered. <a href={WWW_DIR_JAVASCRIPT  + \"mailconv/downloadrfc822/\" + message.id}>Download sent message.</a>\n\n            <div className=\"text-danger border-bottom my-2 py-2 fs13\">\n                <ul className=\"m-0 pl-3\">\n                {message.delivery_status_keyed.Diagnostic_Code && <li>{message.delivery_status_keyed.Diagnostic_Code}</li>}\n                {message.delivery_status_keyed.taken && <li>{message.delivery_status_keyed.taken}</li>}\n                </ul>\n            </div>\n\n            {message.delivery_status_keyed && <button onClick={(e) => setExpandDeliveryInformation(!expandDeliveryInformation)} className=\"btn fs12 btn-link\">Show technical information.</button>}\n\n            {expandDeliveryInformation && message.delivery_status_keyed && <div>\n\n                <pre>{JSON.stringify(message.delivery_status_keyed, null, 2)}</pre>\n            </div>}\n        </div>}\n\n        {expandBody && plainBody && message.alt_body && <div className=\"col-12 mail-message-body pt-2 pb-2\">\n            <pre className=\"fs12\">{message.alt_body}</pre>\n        </div>}\n\n        {expandBody && message.body_front && !plainBody && <div className=\"col-12 mail-message-body pt-2 pb-2\">\n\n         {parse(message.body_front, {\n        replace: domNode => {\n            if (domNode.attribs) {\n\n                var cloneAttr = Object.assign({}, domNode.attribs);\n\n                if (domNode.attribs.class) {\n                    domNode.attribs.className = domNode.attribs.class;\n                    delete domNode.attribs.class;\n                }\n\n                if (domNode.name && domNode.name === 'blockquote') {\n                    if (domNode.attribs.style) {\n                        domNode.attribs.style = getStyleObjectFromString(domNode.attribs.style);\n                    }\n\n                    return <blockquote {...domNode.attribs}><MailChatQuote>{domToReact(domNode.children)}</MailChatQuote></blockquote>\n                }\n            }\n        }\n    })}\n\n        {message.attachments && message.attachments.length > 0 &&\n            <div className=\"pt-2\">{message.attachments.map((file) => (\n                <a className=\"btn btn-sm btn-outline-info mr-1\" href={file.download_url} title={file.description}>{file.name}</a>\n            ))}</div>\n        }\n\n\n    </div>}\n\n        {mode !== 'preview' && moptions.can_write && !fetchingMessages && ((index + 1 == totalMessages) || replyMode || forwardMode) && <MailChatReply setConversationStatus={setConversationStatus} verifyOwner={verifyOwner} fetchingMessages={fetchingMessages} fetchMessages={(e) => fetchMessages()} moptions={moptions} forwardMode={forwardMode} cancelForward={(e) => setForwardMode(false)} cancelReply={(e) => setReplyMode(false)} replyMode={replyMode} lastMessage={index + 1 == totalMessages} message={message} noReplyRequired={() => noReplyRequired(message)} />}\n\n    </div>\n}\n\nexport default React.memo(MailChatMessage);","import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport MailChatMessage from \"./parts_mail/MailChatMessage\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'increment':\n            return {count: state.count + 1};\n        case 'decrement':\n            return {count: state.count - 1};\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n        case 'update_conversation': {\n            state.conv = { ...state.conv, ...action.value };\n            return { ... state};\n        }\n        case 'update_message': {\n            var foundIndex = state.messages.findIndex(x => x.id == action.message.id);\n            state.messages[foundIndex] = action.message;\n\n            if (action.conv) {\n                state.conv = action.conv;\n            }\n\n            if (action.fetching_messages) {\n                state.fetching_messages = action.fetching_messages;\n            }\n\n            state = { ... state};\n\n            return state;\n        }\n\n        case 'update_history': {\n            state = { ...state, ...action.value };\n            if (action.history.msg != '') {\n                state.messages.unshift(action.history);\n            }\n            return state;\n        }\n        case 'init':\n            return {count: state.count - 1};\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst MailChat = props => {\n\n    const messageElement = useRef(null);\n    const messagesElement = useRef(null);\n    const tabsContainer = useRef(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n        messages: [],\n        operators: [],\n        conv: null,\n        loaded: false,\n        saving_remarks: false,\n        old_message_id: 0,\n        last_message: '',\n        remarks: '',\n        last_message_id: 0,\n        lmsop: 0,\n        lgsync: 0,\n        fetching_messages: false\n    });\n\n    const rememberChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('machat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) === -1){\n                    achat_id_array.push(chatId);\n                    localStorage.setItem('machat_id',achat_id_array.join(','));\n                }\n\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const deleteConversation = () => {\n        if (confirm('Are you sure?')) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apideleteconversation/\" + state.conv.id).then(result => {\n                // If we are in the tab close tab also\n                if (document.getElementById('chat-tab-link-mc'+state.conv.id)) {\n                    lhinst.removeDialogTabMail('mc'+state.conv.id,$('#tabs'),true);\n                } else {\n                    document.location = WWW_DIR_JAVASCRIPT + \"mailconv/conversations\";\n                }\n            }).catch((error) => {\n\n            });\n        }\n    }\n\n    const closeConversation = () => {\n        let hasUnrespondedMessages = false;\n        state.messages.forEach((message) => {\n            if (message.status != 2) {\n                hasUnrespondedMessages = true;\n            }\n        });\n\n        if (hasUnrespondedMessages == false || confirm('There is still unresponded messages, are you sure you want to close this conversation?')) {\n            axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apicloseconversation/\" + state.conv.id).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        'conv': result.data.conv,\n                        'messages' : result.data.messages\n                    }\n                });\n\n                // If we are in the tab close tab also\n                if (document.getElementById('chat-tab-link-mc'+state.conv.id)) {\n                    lhinst.removeDialogTabMail('mc'+state.conv.id,$('#tabs'),true);\n                }\n\n            }).catch((error) => {\n\n            });\n        }\n    }\n\n    const noReplyRequired = (message) => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/apinoreplyrequired/\" + message.id).then(result => {\n            dispatch({\n                type: 'update_message',\n                message: result.data.message,\n                conv: result.data.conv\n            });\n        }).catch((error) => {\n\n        });\n    }\n\n    const addLabel = (message) => {\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + \"mailconv/apilabelmessage/\" + message.id,hidecallback : () => {\n            updateLabels(message);\n        }});\n    }\n\n    const updateLabels = (message) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"mailconv/apigetlabels/\" + message.id).then(result => {\n            dispatch({\n                type: 'update_message',\n                message: result.data.message\n            });\n        }).catch((error) => {\n\n        });\n    }\n\n    const verifyOwner = (userId) => {\n        if (userId != state.conv.user_id) {\n            loadMainData();\n        }\n    }\n\n    const loadMainData = () => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/loadmainconv/\" + props.chatId + '/(mode)/' + (props.mode != '' ? props.mode : 'normal')).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    'conv': result.data.conv,\n                    'customer_remarks': result.data.customer_remarks,\n                    'messages' : result.data.messages,\n                    'moptions' : result.data.moptions,\n                    'loaded' : true,\n                    'fetching_messages' : false,\n                }\n            });\n\n            if (props.disableRemember === false && props.mode !== 'preview') {\n                rememberChat(props.chatId);\n            }\n\n        }).catch((error) => {\n            lhinst.removeDialogTabMail('mc'+ props.chatId,$('#tabs'),true);\n        });\n    }\n\n    const fetchMessages = (message) => {\n        // Reset previous state\n        dispatch({\n            type: 'update',\n            value: {\n                'fetching_messages': true\n            }\n        });\n\n        fetchUntillUpdate(Math.floor(Date.now() / 1000));\n    }\n\n    const fetchUntillUpdate = (ts) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"mailconv/apifetchmails/\" + props.chatId + '/' + ts).then(result => {\n            if (result.data.updated == true) {\n                loadMainData();\n            } else {\n                // Todo handle cleanup\n                setTimeout(() => fetchUntillUpdate(ts),1000);\n            }\n        });\n    }\n\n    const showModal = (params) => {\n        lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + params.url});\n    }\n\n    useEffect(() => {\n        if (state.conv !== null) {\n            const timeout = setTimeout(() => {\n                axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/saveremarks/\" + props.chatId, {data: state.remarks}).then(result => {\n                    dispatch({\n                        type: 'update',\n                        value: {\n                            'saving_remarks': false\n                        }\n                    });\n                });\n            }, 500);\n            return () => clearTimeout(timeout);\n        }\n    },[state.remarks]);\n\n    useEffect(() => {\n        if (state.conv !== null) {\n            const timeout = setTimeout(() => {\n                axios.post(WWW_DIR_JAVASCRIPT  + \"mailconv/saveremarks/\" + props.chatId + '/(type)/customer', {data: state.customer_remarks}).then(result => {\n                    dispatch({\n                        type: 'update',\n                        value: {\n                            'saving_customer_remarks': false\n                        }\n                    });\n                });\n            }, 500);\n            return () => clearTimeout(timeout);\n        }\n    },[state.customer_remarks]);\n\n    const saveRemarks = (params) => {\n        dispatch({\n            type: 'update',\n            value: {\n                'saving_remarks': true,\n                'remarks': params\n            }\n        });\n    }\n\n    const saveCustomerRemarks = (params) => {\n        dispatch({\n            type: 'update',\n            value: {\n                'saving_customer_remarks': true,\n                'customer_remarks': params\n            }\n        });\n    }\n\n    const forgetChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('machat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) !== -1) {\n                    achat_id_array.splice(achat_id_array.indexOf(chatId),1);\n                }\n\n                localStorage.setItem('machat_id',achat_id_array.join(','));\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const setConversationStatus = (status) => {\n        dispatch({\n            type: 'update_conversation',\n            value: {\n                'status' : status\n            }\n        });\n    }\n\n    useEffect(() => {\n        loadMainData();\n\n        function mailChatModified(chatId) {\n            if (props.chatId == chatId) {\n                loadMainData();\n            }\n        }\n\n        function mailLabelsModified(chatId, messageId) {\n            if (props.chatId == chatId) {\n                updateLabels({\"id\": messageId});\n            }\n        }\n\n        ee.addListener('mailChatModified', mailChatModified);\n        ee.addListener('mailLabelsModified', mailLabelsModified);\n\n        return function cleanup() {\n           ee.removeListener('mailChatModified', mailChatModified);\n           ee.removeListener('mailLabelsModified', mailLabelsModified);\n           forgetChat(props.chatId)\n        };\n    },[]);\n\n    useEffect(() => {\n        if (state.loaded == true) {\n            var container = tabsContainer.current;\n            ee.emitEvent('mailChatContentLoaded', [props.chatId]);\n        }\n    },[state.loaded]);\n\n    const { t, i18n } = useTranslation('mail_chat');\n\n    if (state.loaded == false) {\n        return <span>...</span>\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"row\">\n                <div className={\"chat-main-left-column \" + (props.mode == 'preview' ? 'col-12' : 'col-7')}>\n\n                    {props.mode !== 'preview' && <h1 className=\"pb-2\">\n                        <i className=\"material-icons\">{state.conv.start_type == 1 ? 'call_made' : 'call_received'}</i>{state.conv.undelivered && <i title=\"Undelivered e-mail\" className=\"text-danger material-icons\">sms_failed</i>}{state.conv.subject}\n                    </h1>}\n\n                    <div>\n                        {state.messages.map((message, index) => (\n                            <MailChatMessage setConversationStatus={(e) => setConversationStatus(e)} verifyOwner={(e) => verifyOwner(e)} moptions={state.moptions} fetchMessages={(e) => fetchMessages(message)} fetchingMessages={state.fetching_messages} mode={props.mode} key={'msg_mail_' + props.chatId + '_' + index + '_' + message.id} totalMessages={state.messages.length} index={index} message={message} noReplyRequired={(e) => noReplyRequired(message)} addLabel={(e) => addLabel(message)} />\n                        ))}\n\n                        {state.fetching_messages && <div className=\"alert alert-success p-1 pl-2\" role=\"alert\">{t('mail.send_fetching')}</div>}\n                    </div>\n                </div>\n                <div className={\"chat-main-right-column \" + (props.mode == 'preview' ? 'd-none' : 'col-5')}>\n                    <div role=\"tabpanel\">\n                        <ul className=\"nav nav-pills\" role=\"tablist\" ref={tabsContainer}>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link active\" href={\"#mail-chat-info-\"+props.chatId} aria-controls={\"#mail-chat-info-\"+props.chatId} title={t('mail.information')} role=\"tab\" data-toggle=\"tab\"><i className=\"material-icons mr-0\">info_outline</i></a></li>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link\" href={\"#mail-chat-remarks-\"+props.chatId} aria-controls={\"#mail-chat-remarks-\"+props.chatId} role=\"tab\" data-toggle=\"tab\" title={t('mail.remarks')}><i className=\"material-icons mr-0\">mode_edit</i></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div role=\"tabpanel\" className=\"tab-pane\" id={\"mail-chat-remarks-\"+props.chatId}>\n\n                                <div className={\"pb-1 text-success\" + (state.saving_customer_remarks ? ' text-warning' : '')}><span className=\"material-icons\">mode_edit</span> Customer remarks</div>\n                                <div>\n                                    <textarea disabled={!state.moptions.can_write} placeholder=\"Enter your remarks here.\" onKeyUp={(e) => saveCustomerRemarks(e.target.value)} className=\"form-control mh150\" defaultValue={state.customer_remarks}></textarea>\n                                </div>\n\n                                <div className={\"pb-1 text-success\" + (state.saving_remarks ? ' text-warning' : '')}><span className=\"material-icons\">mode_edit</span> Conversation remarks</div>\n                                <div>\n                                    {state.conv && <textarea disabled={!state.moptions.can_write} placeholder=\"Enter your remarks here.\" onKeyUp={(e) => saveRemarks(e.target.value)} class=\"form-control mh150\" defaultValue={state.conv.remarks}></textarea>}\n                                </div>\n\n                            </div>\n                            <div role=\"tabpanel\" className=\"tab-pane active\" id={\"mail-chat-info-\"+props.chatId}>\n\n                                {state.moptions.can_write && <div className=\"pb-2\">\n                                    <a className=\"btn btn-outline-secondary btn-sm\" onClick={() => closeConversation()}><i className=\"material-icons\">close</i>{t('mail.close')}</a>\n                                </div>}\n\n                                <div id={\"mail-external-details-\"+props.chatId}>\n\n                                </div>\n\n                                {state.conv && <table className=\"table table-sm\">\n                                    <tr>\n                                        <td colSpan=\"2\">\n\n                                            <div className=\"row\">\n                                                <div className=\"col-6\">\n                                                    <span className=\"action-image\" onClick={() => showModal({url: \"mailconv/mailhistory/\" + props.chatId})}><i className=\"material-icons\">history</i>{t('mail.interactions_history')}</span>\n                                                </div>\n                                                {state.moptions.can_write && <div className=\"col-6\">\n                                                    <span className=\"action-image\" onClick={() => showModal({url: \"mailconv/transfermail/\" + props.chatId})}><i className=\"material-icons\">supervisor_account</i>{t('mail.transfer_chat')}</span>\n                                                </div>}\n                                                <div className=\"col-6\">\n                                                    <a className=\"text-dark\" target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/mailprintcovnersation/\" + props.chatId} ><i className=\"material-icons\">print</i>{t('mail.print')}</a>\n                                                </div>\n                                                {state.moptions.can_write && state.conv.can_delete && <div className=\"col-6\">\n                                                    <span className=\"action-image mr-0\" onClick={(e) => deleteConversation()}><i className=\"material-icons\">delete</i>{t('mail.delete')}</span>\n                                                </div>}\n                                           </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.sender')}</td>\n                                        <td>{state.conv.from_name} &lt;{state.conv.from_address}&gt;</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.status')}</td>\n                                        <td>\n                                            {!state.conv.status && <span><i className=\"material-icons chat-pending\">mail_outline</i>{t('status.pending')}</span>}\n                                            {state.conv.status == 1 && <span><i className=\"material-icons chat-active\">mail_outline</i>{t('status.active')}</span>}\n                                            {state.conv.status == 2 && <span><i className=\"material-icons chat-closed\">mail_outline</i>{t('status.closed')}</span>}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.department')}</td>\n                                        <td>\n                                            <span title={state.conv.dep_id}>{state.conv.department_name}</span>, <span title={state.conv.mailbox_id}>{state.conv.mailbox_front.name} ({state.conv.mailbox_front.mail})</span>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{t('mail.received')}</td>\n                                        <td>{state.conv.udate_front}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td>\n                                            {state.conv.id} {state.conv.follow_up_id && <a target=\"_blank\" href={WWW_DIR_JAVASCRIPT  + \"mailconv/view/\" + state.conv.follow_up_id}><span className=\"material-icons\">launch</span>Follow up of {state.conv.follow_up_id}</a>}\n                                        </td>\n                                    </tr>\n                                    {state.conv.accept_time && <tr>\n                                        <td>{t('mail.last_accepted_at')}</td>\n                                        <td>{state.conv.accept_time_front}{state.conv.wait_time_pending && <React.Fragment> | Wait time {state.conv.wait_time_pending}</React.Fragment>}</td>\n                                    </tr>}\n                                    {state.conv.response_time && <tr>\n                                        <td>{t('mail.last_responded_at')}</td>\n                                        <td>{state.conv.lr_time_front}{state.conv.wait_time_response && <React.Fragment> | Wait time {state.conv.wait_time_response}</React.Fragment>}</td>\n                                    </tr>}\n                                    {state.conv.cls_time && <tr>\n                                        <td>{t('mail.closed_at')}</td>\n                                        <td>{state.conv.cls_time_front}</td>\n                                    </tr>}\n                                    {state.conv.conv_duration && <tr>\n                                        <td>{t('mail.conv_duration')}</td>\n                                        <td>{state.conv.conv_duration_front}</td>\n                                    </tr>}\n                                    {state.conv.interaction_time && <tr>\n                                        <td>{t('mail.last_interaction_time')}</td>\n                                        <td>{state.conv.interaction_time_duration}</td>\n                                    </tr>}\n                                    {state.conv.priority && <tr>\n                                        <td>{t('mail.priority')}</td>\n                                        <td>{state.conv.priority}</td>\n                                    </tr>}\n                                    <tr>\n                                        <td title={state.conv.user_id}>{t('mail.chat_owner')}</td>\n                                        <td>{state.conv.plain_user_name}</td>\n                                    </tr>\n                                </table>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default MailChat"],"names":["MailChatQuote","children","useState","expandBody","setExpandBody","className","onClick","React","MailChatAttatchement","props","hightlight","files","uploading","uploadProgress","successfullUploaded","progress","fileInputRef","dropAreaRef","openFileDialog","bind","onFilesAddedUI","onDragOver","onDragLeave","onDrop","onPaste","onFilesAdded","uploadFiles","sendRequest","chooseFromUploaded","fileUploaded","t","this","ruleTest","RegExp","moptions","uploadErrors","forEach","file","test","type","name","push","size","length","alert","join","setState","prevProps","prevState","state","promises","Promise","all","fileAttached","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","Math","round","response","_inst","onreadystatechange","readyState","JSON","parse","copy","formData","FormData","append","open","WWW_DIR_JAVASCRIPT","send","current","click","evt","target","array","fileListToArray","preventDefault","ondragover","ondragleave","ondrop","window","attatchReplyCurrent","e","items","clipboardData","i","getAsFile","dataTransfer","list","item","lhc","revealModal","ref","onChange","id","multiple","PureComponent","withTranslation","MailReplyRecipient","useReducer","recipients","value","recipient","filter","_","index","field","dispatch","setReciepints","setRecipients","useEffect","useTranslation","i18n","readOnly","style","fontSize","reply","map","mail","disabled","placeholder","email","cc","bcc","MailSendStatus","status","role","errors","general","content","MailChatReply","replyMode","setReplyMode","forwardMode","setForwardMode","replyIntro","setReplyIntro","replySignature","setReplySignature","loadedReplyData","setLoadedReplyData","recipientsModified","setModifiedRecipients","replySendStatus","setReplySendStatus","sendInProgress","setSendInProgress","underReplySignature","setUnderReplySignature","isOwner","setIsOwner","attachedFiles","currentAttatchedFiles","useRef","sendReply","replyPayload","tinyMCE","get","message","getContent","axios","then","result","data","fetchMessages","setConversationStatus","conv_status","error","request","console","log","config","confLH","csrf_token","intro","signature","signature_under","user_id","verifyOwner","is_owner","fetchingMessages","response_type","noReplyRequired","hide_recipients","send_tried","mode","tinymceScriptSrc","initialValue","body_front","onInit","focus","init","height","automatic_uploads","files_enabled","file_picker_types","images_upload_url","templates","paste_data_images","relative_urls","browser_spellcheck","paste_as_text","contextmenu","menubar","plugins","mce_plugins","toolbar_mode","toolbar","mce_toolbar","cancelReply","cancelForward","send_as_new","MailChatAttachement","title","removeAttatchedFile","MailChatMessage","totalMessages","addLabel","expandHeader","setExpandHeader","undelivered","plainBody","setPlainBody","expandDeliveryInformation","setExpandDeliveryInformation","from_name","from_address","cls_time","subjects","label","can_write","udate_front","udate_ago","stopPropagation","href","alt_body","to_data_front","cc_data_front","bcc_data_front","reply_to_data_front","from_host","accept_time_front","plain_user_name","wait_time","wait_time_pending","lr_time","response_time","wait_time_response","interaction_time","interaction_time_duration","cls_time_front","conv_duration_front","delivery_status_keyed","Diagnostic_Code","taken","stringify","replace","domNode","attribs","Object","assign","str","split","el","property","formattedProperty","splitted","slice","word","toUpperCase","formatStringToCamelCase","trim","domToReact","attachments","download_url","description","lastMessage","reducer","action","count","conv","foundIndex","messages","findIndex","x","fetching_messages","history","msg","unshift","Error","tabsContainer","operators","saving_remarks","old_message_id","last_message","remarks","last_message_id","lmsop","lgsync","updateLabels","loadMainData","chatId","customer_remarks","disableRemember","localStorage","achat_id_array","achat_id","getItem","indexOf","setItem","rememberChat","lhinst","removeDialogTabMail","$","fetchUntillUpdate","ts","updated","setTimeout","showModal","params","url","timeout","clearTimeout","mailChatModified","mailLabelsModified","messageId","ee","addListener","removeListener","splice","forgetChat","emitEvent","start_type","subject","floor","Date","now","key","hidecallback","saving_customer_remarks","onKeyUp","defaultValue","class","hasUnrespondedMessages","confirm","document","getElementById","colSpan","can_delete","location","dep_id","department_name","mailbox_id","mailbox_front","follow_up_id","accept_time","lr_time_front","conv_duration","priority"],"sourceRoot":""}