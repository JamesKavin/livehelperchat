{"version":3,"sources":["webpack://LHCVoiceCallAPP/./src/lib/useInterval.js","webpack://LHCVoiceCallAPP/./src/components/VoiceCall.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","reducer","state","action","type","foundIndex","chats","findIndex","x","value","attr","unshift","active","mn","support_chat","splice","msg","el","document","getElementById","classList","contains","group_offline","Error","VoiceCall","props","useReducer","call","inCall","dispatch","chatsRef","axios","get","WWW_DIR_JAVASCRIPT","initParams","hash","then","result","data","useTranslation","t","i18n","React","useState","useBoolean","isRunning","toggleIsRunning","console","log","Fragment","vi_status","className","onClick","defaultChecked","name","htmlFor","post","checked"],"mappings":"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","file":"2.6863a71c35696f175378.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState, useReducer, useRef, useBoolean } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"../lib/useInterval\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.chats.unshift(action.value);\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Set last appended messages as first array element\n            state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst VoiceCall = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        call : {},\n        inCall: false\n    });\n\n    const STATUS_OP_PENDING = 0;\n    const STATUS_OP_JOINED = 1;\n\n    const STATUS_VI_PENDING = 0;\n    const STATUS_VI_REQUESTED = 1;\n    const STATUS_VI_JOINED = 2;\n\n    const STATUS_PENDING = 0;\n    const STATUS_CONFIRM = 1;\n    const STATUS_CONFIRMED = 2;\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const loadCallStatus = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    useEffect(() => {\n\n        loadCallStatus();\n\n        // Cleanup\n        return function cleanup() {\n        };\n\n    },[]);\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    const cancelJoin = () => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/cancel').then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    const [count, setCount] = React.useState(0);\n    const [delay, setDelay] = React.useState(1000);\n    const [isRunning, toggleIsRunning] = React.useBoolean(true);\n\n    useInterval(\n        () => {\n            console.log('interval running');\n        },\n        isRunning ? delay : null\n    );\n\n    const requestJoin = () => {\n        axios.post(WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/request',{\n            'type' : (document.getElementById('inlineFormCheck1').checked ? 'audiovideo' : 'audio')\n        }).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n            toggleIsRunning();\n        });\n    }\n\n    return (\n        <React.Fragment>\n            {state.call.vi_status == STATUS_VI_REQUESTED && <div className=\"mx-auto pt-4\">\n                <p>Please wait untill operator let's you join a room</p>\n                <div className=\"mx-auto\">\n                    <button className=\"btn btn-primary w-100\" onClick={() => cancelJoin()} >{t('voice_call.cancel_join')}</button>\n                </div>\n            </div>}\n            {state.call.vi_status == STATUS_VI_PENDING && <div className=\"mx-auto pt-4\">\n                        <div className=\"form-group\">\n                            <h5>Choose call type</h5>\n                            <input type=\"radio\" className=\"form-check-input\" defaultChecked={true} value=\"audio\" name=\"callType\" id=\"inlineFormCheck1\" />\n                            <label className=\"form-check-label\" htmlFor=\"inlineFormCheck1\">Audio & Video call</label>\n                            <br/>\n                            <input type=\"radio\" className=\"form-check-input\" value=\"audio\" name=\"callType\" id=\"inlineFormCheck2\" />\n                            <label className=\"form-check-label\" htmlFor=\"inlineFormCheck2\">Only Audio call</label>\n                        </div>\n                        <div className=\"mx-auto\">\n                            <button onClick={() => requestJoin()} className=\"btn btn-primary w-100\">{t('voice_call.join_call')}</button>\n                        </div>\n                    </div>}\n        </React.Fragment>\n    );\n}\n\nexport default VoiceCall"],"sourceRoot":""}